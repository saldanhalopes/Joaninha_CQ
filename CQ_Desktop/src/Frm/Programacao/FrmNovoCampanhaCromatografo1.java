/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Programacao;

import Classes.DAO.AnaliseDAO;
import Classes.DAO.CromatografoDAO;
import Classes.DAO.LoteDAO;
import Classes.DAO.MaterialDAO;
import Classes.DAO.SetorDAO;
import Frm.Cadastro.FrmProcurarAnalise;
import Frm.Cadastro.FrmProcurarMetodologia;
import Frm.Cadastro.FrmProcurarProduto;
import Classes.Modelo.Analise;
import Classes.Modelo.Cromatografo;
import Classes.Modelo.Lote;
import Classes.Modelo.Material;
import Classes.Modelo.Metodologia;
import Classes.Modelo.Setor;
import Classes.Util.DataHora;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.Timestamp;
import java.text.MessageFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rafael.lopes
 */
public class FrmNovoCampanhaCromatografo1 extends javax.swing.JInternalFrame {

    private TreeMap<Integer, String> categoryMapSetor = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapEquipamento = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapFinalidade = new TreeMap<>();

    /**
     * Creates new form NewJInternalFrame
     */
    public FrmNovoCampanhaCromatografo1() {
        initComponents();
        setTitle("Nova Campanha");
        voltarDados();
        readFinalidade();
        loadHora();
        loadData();
        tblAnalises.setRowHeight(24);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLotes = new javax.swing.JTabbedPane();
        pnlDados = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblMetodos = new javax.swing.JTable();
        btnAdicionarMetodo = new javax.swing.JButton();
        btnRemoverMetodo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCampanha = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtDataInicio = new com.toedter.calendar.JDateChooser();
        txtHoraInicio = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtMinutoInicio = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtDataFim = new com.toedter.calendar.JDateChooser();
        txtHoraFim = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        txtMinutoFim = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbFinalidadeProduto = new javax.swing.JComboBox();
        ckbCampanhaDinamica = new javax.swing.JCheckBox();
        btnIrAnalises = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        pnlAnalises = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAnalises = new javax.swing.JTable();
        btnAdicionarAnalise = new javax.swing.JButton();
        btnRemoverAnalise = new javax.swing.JButton();
        btnVoltarDados = new javax.swing.JButton();
        btnIrLotes1 = new javax.swing.JButton();
        pnlProduto = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnSubirProduto = new javax.swing.JButton();
        btnDescerProduto = new javax.swing.JButton();
        btnAdicionarProduto = new javax.swing.JButton();
        btnRemoverProduto = new javax.swing.JButton();
        btnVoltarAnalise = new javax.swing.JButton();
        btnIrLotes = new javax.swing.JButton();
        pnlLote = new javax.swing.JPanel();
        btnVoltarProdutos = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblLotes = new javax.swing.JTable();
        btnSubirLote = new javax.swing.JButton();
        btnDescerLote = new javax.swing.JButton();
        btnAdicionarLote = new javax.swing.JButton();
        btnRemoverLote = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnImprimirRelatorio = new javax.swing.JButton();
        pnlLotes1 = new javax.swing.JPanel();
        pnlLotesEquipamento = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtPesquisarLote = new javax.swing.JTextField();
        jToolBar3 = new javax.swing.JToolBar();
        btnNovoCampanha = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnCancelarCampanha = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnPrioridadesCampanha = new javax.swing.JButton();
        btnSubirCampanha = new javax.swing.JButton();
        btnDescerCampanha = new javax.swing.JButton();
        btnCancelarPrioridade = new javax.swing.JButton();
        btnSalvarPrioridade = new javax.swing.JButton();
        jToolBar4 = new javax.swing.JToolBar();
        btnEmailCampanhas = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        btnImprimirCampanhas = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblLotes1 = new javax.swing.JTable();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Metodologias"));

        tblMetodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código", "Método", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMetodos.getTableHeader().setReorderingAllowed(false);
        tblMetodos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMetodosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tblMetodos);

        btnAdicionarMetodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarMetodoActionPerformed(evt);
            }
        });

        btnRemoverMetodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverMetodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoverMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAdicionarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoverMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 121, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanha"));

        jLabel2.setText("Obs:");

        jLabel1.setText("Nome:");

        jLabel24.setText("Início:");

        jLabel4.setText("h");

        jLabel9.setText("min");

        jLabel25.setText("Fim:");

        jLabel12.setText("h");

        jLabel13.setText("min");

        jLabel7.setText("Finalidade:");

        ckbCampanhaDinamica.setText("Campanha Dinânmica");
        ckbCampanhaDinamica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbCampanhaDinamicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeCampanha)
                    .addComponent(txtObs)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbFinalidadeProduto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDataInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtDataFim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMinutoFim, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMinutoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ckbCampanhaDinamica, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 143, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFinalidadeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(txtMinutoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ckbCampanhaDinamica))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txtMinutoFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIrAnalises.setText("Proximo >>");
        btnIrAnalises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrAnalisesActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIrAnalises, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIrAnalises)
                    .addComponent(btnFechar))
                .addContainerGap())
        );

        pnlLotes.addTab("Dados", pnlDados);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Análises"));

        tblAnalises.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cod_campanha", "Id", "Análise", "Sigla", "Setor", "Equipamento", "Obs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnalises.setSurrendersFocusOnKeystroke(true);
        tblAnalises.getTableHeader().setReorderingAllowed(false);
        tblAnalises.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblAnalisesKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tblAnalises);
        if (tblAnalises.getColumnModel().getColumnCount() > 0) {
            tblAnalises.getColumnModel().getColumn(0).setMinWidth(0);
            tblAnalises.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblAnalises.getColumnModel().getColumn(0).setMaxWidth(0);
            tblAnalises.getColumnModel().getColumn(1).setMinWidth(50);
            tblAnalises.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblAnalises.getColumnModel().getColumn(1).setMaxWidth(50);
            tblAnalises.getColumnModel().getColumn(3).setMinWidth(120);
            tblAnalises.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblAnalises.getColumnModel().getColumn(3).setMaxWidth(120);
            tblAnalises.getColumnModel().getColumn(4).setMinWidth(120);
            tblAnalises.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblAnalises.getColumnModel().getColumn(4).setMaxWidth(120);
            tblAnalises.getColumnModel().getColumn(5).setMinWidth(120);
            tblAnalises.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblAnalises.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        btnAdicionarAnalise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAnaliseActionPerformed(evt);
            }
        });

        btnRemoverAnalise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverAnaliseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnAdicionarAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoverAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnVoltarDados.setText("<< Voltar");
        btnVoltarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarDadosActionPerformed(evt);
            }
        });

        btnIrLotes1.setText("Próximo >>");
        btnIrLotes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrLotes1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAnalisesLayout = new javax.swing.GroupLayout(pnlAnalises);
        pnlAnalises.setLayout(pnlAnalisesLayout);
        pnlAnalisesLayout.setHorizontalGroup(
            pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalisesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAnalisesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIrLotes1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlAnalisesLayout.setVerticalGroup(
            pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalisesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIrLotes1)
                    .addComponent(btnVoltarDados))
                .addContainerGap())
        );

        pnlLotes.addTab("Análises", pnlAnalises);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Material", "Produto", "Tipo", "Método", "Autonomia", "estoque_exp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduto.setSurrendersFocusOnKeystroke(true);
        tblProduto.getTableHeader().setReorderingAllowed(false);
        tblProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProdutoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduto);
        if (tblProduto.getColumnModel().getColumnCount() > 0) {
            tblProduto.getColumnModel().getColumn(0).setMinWidth(50);
            tblProduto.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblProduto.getColumnModel().getColumn(0).setMaxWidth(50);
            tblProduto.getColumnModel().getColumn(1).setMinWidth(80);
            tblProduto.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblProduto.getColumnModel().getColumn(1).setMaxWidth(80);
            tblProduto.getColumnModel().getColumn(3).setMinWidth(80);
            tblProduto.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblProduto.getColumnModel().getColumn(3).setMaxWidth(80);
            tblProduto.getColumnModel().getColumn(4).setMinWidth(120);
            tblProduto.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblProduto.getColumnModel().getColumn(4).setMaxWidth(120);
            tblProduto.getColumnModel().getColumn(5).setMinWidth(80);
            tblProduto.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblProduto.getColumnModel().getColumn(5).setMaxWidth(80);
            tblProduto.getColumnModel().getColumn(6).setMinWidth(0);
            tblProduto.getColumnModel().getColumn(6).setPreferredWidth(0);
            tblProduto.getColumnModel().getColumn(6).setMaxWidth(0);
        }

        btnSubirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_ascendente.png"))); // NOI18N
        btnSubirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirProdutoActionPerformed(evt);
            }
        });

        btnDescerProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_descendente.png"))); // NOI18N
        btnDescerProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescerProdutoActionPerformed(evt);
            }
        });

        btnAdicionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        btnRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnDescerProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSubirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDescerProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnVoltarAnalise.setText("<< Voltar");
        btnVoltarAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarAnaliseActionPerformed(evt);
            }
        });

        btnIrLotes.setText("Próximo >>");
        btnIrLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrLotesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProdutoLayout = new javax.swing.GroupLayout(pnlProduto);
        pnlProduto.setLayout(pnlProdutoLayout);
        pnlProdutoLayout.setHorizontalGroup(
            pnlProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProdutoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltarAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIrLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlProdutoLayout.setVerticalGroup(
            pnlProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIrLotes)
                    .addComponent(btnVoltarAnalise))
                .addContainerGap())
        );

        pnlLotes.addTab("Produtos", pnlProduto);

        btnVoltarProdutos.setText("<< Voltar");
        btnVoltarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarProdutosActionPerformed(evt);
            }
        });

        btnFinalizar.setText("Próximo >>");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLotes.setAutoCreateRowSorter(true);
        tblLotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Material", "Produto", "Lote", "Data Entrada", "Tamanho Lote", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLotes.setSurrendersFocusOnKeystroke(true);
        tblLotes.getTableHeader().setReorderingAllowed(false);
        tblLotes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblLotesKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(tblLotes);
        if (tblLotes.getColumnModel().getColumnCount() > 0) {
            tblLotes.getColumnModel().getColumn(0).setMinWidth(50);
            tblLotes.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblLotes.getColumnModel().getColumn(0).setMaxWidth(50);
            tblLotes.getColumnModel().getColumn(1).setMinWidth(80);
            tblLotes.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblLotes.getColumnModel().getColumn(1).setMaxWidth(80);
            tblLotes.getColumnModel().getColumn(3).setMinWidth(100);
            tblLotes.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblLotes.getColumnModel().getColumn(3).setMaxWidth(100);
            tblLotes.getColumnModel().getColumn(4).setMinWidth(100);
            tblLotes.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblLotes.getColumnModel().getColumn(4).setMaxWidth(100);
            tblLotes.getColumnModel().getColumn(5).setMinWidth(80);
            tblLotes.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblLotes.getColumnModel().getColumn(5).setMaxWidth(80);
            tblLotes.getColumnModel().getColumn(6).setMinWidth(120);
            tblLotes.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblLotes.getColumnModel().getColumn(6).setMaxWidth(120);
        }

        btnSubirLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_ascendente.png"))); // NOI18N
        btnSubirLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirLoteActionPerformed(evt);
            }
        });

        btnDescerLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_descendente.png"))); // NOI18N
        btnDescerLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescerLoteActionPerformed(evt);
            }
        });

        btnAdicionarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarLoteActionPerformed(evt);
            }
        });

        btnRemoverLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverLoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnDescerLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubirLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSubirLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDescerLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlLoteLayout = new javax.swing.GroupLayout(pnlLote);
        pnlLote.setLayout(pnlLoteLayout);
        pnlLoteLayout.setHorizontalGroup(
            pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoteLayout.createSequentialGroup()
                        .addGap(0, 615, Short.MAX_VALUE)
                        .addComponent(btnVoltarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlLoteLayout.setVerticalGroup(
            pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFinalizar)
                    .addComponent(btnVoltarProdutos))
                .addContainerGap())
        );

        pnlLotes.addTab("Lotes", pnlLote);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        btnImprimirRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        btnImprimirRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 798, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImprimirRelatorio)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnImprimirRelatorio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlLotes.addTab("tab5", jPanel4);

        jLabel10.setText("Pesquisar:");

        txtPesquisarLote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarLoteKeyReleased(evt);
            }
        });

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        btnNovoCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnNovoCampanha.setText("Novo");
        btnNovoCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnNovoCampanha);
        jToolBar3.add(jSeparator8);

        btnCancelarCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_cancel.png"))); // NOI18N
        btnCancelarCampanha.setText("Remover");
        btnCancelarCampanha.setFocusable(false);
        btnCancelarCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnCancelarCampanha);
        jToolBar3.add(jSeparator9);

        btnPrioridadesCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_campanha.png"))); // NOI18N
        btnPrioridadesCampanha.setText("Prioridades");
        btnPrioridadesCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrioridadesCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnPrioridadesCampanha);

        btnSubirCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_ascendente.png"))); // NOI18N
        btnSubirCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirCampanhaActionPerformed(evt);
            }
        });

        btnDescerCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_descendente.png"))); // NOI18N
        btnDescerCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescerCampanhaActionPerformed(evt);
            }
        });

        btnCancelarPrioridade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_cancel.png"))); // NOI18N
        btnCancelarPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPrioridadeActionPerformed(evt);
            }
        });

        btnSalvarPrioridade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ok.png"))); // NOI18N
        btnSalvarPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPrioridadeActionPerformed(evt);
            }
        });

        jToolBar4.setFloatable(false);
        jToolBar4.setRollover(true);

        btnEmailCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_mail.png"))); // NOI18N
        btnEmailCampanhas.setToolTipText("Enviar Relatório");
        btnEmailCampanhas.setFocusable(false);
        btnEmailCampanhas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEmailCampanhas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEmailCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnEmailCampanhas);
        jToolBar4.add(jSeparator12);

        btnImprimirCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirCampanhas.setToolTipText("Atualizar");
        btnImprimirCampanhas.setFocusable(false);
        btnImprimirCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnImprimirCampanhas);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLotes1.setAutoCreateRowSorter(true);
        tblLotes1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Produto", "Análise", "Lote", "Material", "Data Entrada", "Obs", "Ordem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLotes1.setSurrendersFocusOnKeystroke(true);
        tblLotes1.getTableHeader().setReorderingAllowed(false);
        tblLotes1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLotes1MouseClicked(evt);
            }
        });
        tblLotes1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblLotes1KeyReleased(evt);
            }
        });
        jScrollPane9.setViewportView(tblLotes1);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlLotesEquipamentoLayout = new javax.swing.GroupLayout(pnlLotesEquipamento);
        pnlLotesEquipamento.setLayout(pnlLotesEquipamentoLayout);
        pnlLotesEquipamentoLayout.setHorizontalGroup(
            pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLotesEquipamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLotesEquipamentoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarLote))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLotesEquipamentoLayout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnDescerCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSubirCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSalvarPrioridade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelarPrioridade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(pnlLotesEquipamentoLayout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlLotesEquipamentoLayout.setVerticalGroup(
            pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesEquipamentoLayout.createSequentialGroup()
                .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLotesEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLotesEquipamentoLayout.createSequentialGroup()
                        .addComponent(btnSubirCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDescerCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 199, Short.MAX_VALUE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlLotes1Layout = new javax.swing.GroupLayout(pnlLotes1);
        pnlLotes1.setLayout(pnlLotes1Layout);
        pnlLotes1Layout.setHorizontalGroup(
            pnlLotes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLotesEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlLotes1Layout.setVerticalGroup(
            pnlLotes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLotesEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlLotes.addTab("Lotes", pnlLotes1);

        getContentPane().add(pnlLotes);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblMetodosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMetodosKeyPressed
        if (tblMetodos.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                DefaultTableModel model = (DefaultTableModel) tblMetodos.getModel();
                model.removeRow(tblMetodos.getSelectedRow());
            }
        }
    }//GEN-LAST:event_tblMetodosKeyPressed

    private void btnAdicionarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarMetodoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblMetodos.getModel();
        int rows = tblMetodos.getRowCount();
        for (int row = 0; row < rows; row++) {
            if ((Integer) tblMetodos.getValueAt(row, 0) == mtd.getMetodo_id()) {
                JOptionPane.showMessageDialog(null, "Método já adicionado!");
                return;
            }
        }
        if (mtd.getMetodo_id() > 0) {
            model.addRow(new Object[]{
                mtd.getMetodo_id(),
                mtd.getCod_metodo(),
                mtd.getMetodo(),
                mtd.getVersao()
            });
        }
    }//GEN-LAST:event_btnAdicionarMetodoActionPerformed

    private void btnRemoverMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverMetodoActionPerformed
        if (tblMetodos.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tblMetodos.getModel();
            model.removeRow(tblMetodos.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoverMetodoActionPerformed

    private void ckbCampanhaDinamicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbCampanhaDinamicaActionPerformed
        if (ckbCampanhaDinamica.isSelected()) {
            txtDataFim.setEnabled(false);
            txtHoraFim.setEnabled(false);
            txtMinutoFim.setEnabled(false);
        } else {
            txtDataFim.setEnabled(true);
            txtHoraFim.setEnabled(true);
            txtMinutoFim.setEnabled(true);
        }
    }//GEN-LAST:event_ckbCampanhaDinamicaActionPerformed

    private void btnIrAnalisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrAnalisesActionPerformed
        try {
            int rows = tblMetodos.getRowCount();
            Timestamp datahora_inicio = DataHora.getTimestampDateTime(DataHora.getStringDate(txtDataInicio.getDate())
                    + " " + txtHoraInicio.getValue().toString()
                    + ":" + txtMinutoInicio.getValue().toString() + ":00");
            Timestamp datahora_fim = DataHora.getTimestampDateTime(DataHora.getStringDate(txtDataFim.getDate())
                    + " " + txtHoraFim.getValue().toString()
                    + ":" + txtMinutoFim.getValue().toString() + ":00");
            if (txtNomeCampanha.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome da Campanha inválido!");
                txtNomeCampanha.requestFocus();
            } else if (cmbFinalidadeProduto.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione a finalidade da campanha!");
                cmbFinalidadeProduto.requestFocus();
            } else if (txtDataInicio.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data e Hora da Entrada Inválidas!");
                txtDataInicio.requestFocus();
            } else if (txtDataFim.getDate() == null && !ckbCampanhaDinamica.isSelected()) {
                JOptionPane.showMessageDialog(null, "Data e Hora da Liberação Inválidas!");
                txtDataFim.requestFocus();
            } else if (datahora_inicio.after(datahora_fim) && !ckbCampanhaDinamica.isSelected()) {
                JOptionPane.showMessageDialog(null, "Data e Hora da Entrada e Previsão estão Inválidas!");
                txtDataInicio.requestFocus();
            } else if (rows <= 0) {
                JOptionPane.showMessageDialog(null, "Nenhuma Metodologia Selecionada!");
                tblMetodos.requestFocus();
            } else {
                irAnalises();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel salvar. Algum Campo está inválido!");
        }
    }//GEN-LAST:event_btnIrAnalisesActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Os dados não foram salvos! \n "
                + "Realmente Deseja Fechar Essa Janela?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            dispose();
        }
    }//GEN-LAST:event_btnFecharActionPerformed

    private void tblAnalisesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAnalisesKeyPressed
        if (tblAnalises.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                DefaultTableModel model = (DefaultTableModel) tblAnalises.getModel();
                model.removeRow(tblAnalises.getSelectedRow());
            }
        }
    }//GEN-LAST:event_tblAnalisesKeyPressed

    private void btnAdicionarAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAnaliseActionPerformed
        readAnalises();
    }//GEN-LAST:event_btnAdicionarAnaliseActionPerformed

    private void btnRemoverAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverAnaliseActionPerformed
        if (tblAnalises.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tblAnalises.getModel();
            model.removeRow(tblAnalises.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoverAnaliseActionPerformed

    private void btnVoltarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarDadosActionPerformed
        voltarDados();
    }//GEN-LAST:event_btnVoltarDadosActionPerformed

    private void btnIrLotes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrLotes1ActionPerformed
        int rowsAnalises = tblAnalises.getRowCount();
        int rowsMetodos = tblMetodos.getRowCount();
        String sql = null;
        if (rowsAnalises <= 0) {
            JOptionPane.showMessageDialog(null, "Nenhuma Análise Selecionada!");
            tblAnalises.requestFocus();
        } else {
            for (int row = 0; row < rowsAnalises; row++) {
                if (((String) tblAnalises.getModel().getValueAt(row, 4)) == null
                        || ((String) tblAnalises.getModel().getValueAt(row, 4)).isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Setor da Análise: " + (String) tblAnalises.getModel().getValueAt(row, 2) + " Inválido!");
                    return;
                }
            }
            for (int row = 0; row < rowsMetodos; row++) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                if (sql == null) {
                    sql = "AND (tb_metodologia.metodo_id = " + tblMetodos.getValueAt(row, 0).toString() + " ";
                } else {
                    sql = sql + " OR tb_metodologia.metodo_id = " + tblMetodos.getValueAt(row, 0).toString() + " ";
                }
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            sql = sql + ")";
            readProduto(sql);
            irProdutos();
        }
    }//GEN-LAST:event_btnIrLotes1ActionPerformed

    private void tblProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdutoKeyPressed
        if (tblProduto.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
                model.removeRow(tblProduto.getSelectedRow());
            }
        }
    }//GEN-LAST:event_tblProdutoKeyPressed

    private void btnSubirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirProdutoActionPerformed
        if (tblProduto.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
                int selc = tblProduto.getSelectedRow();
                int mov = tblProduto.getSelectedRow() - 1;
                if (selc != 0) {
                    model.moveRow(selc, selc, mov);
                    tblProduto.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblProduto);
            } catch (Exception e) {
                tblProduto.repaint();
            }
        }
    }//GEN-LAST:event_btnSubirProdutoActionPerformed

    private void btnDescerProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescerProdutoActionPerformed
        if (tblProduto.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
                int selc = tblProduto.getSelectedRow();
                int mov = tblProduto.getSelectedRow() + 1;
                if (selc != model.getRowCount() - 1) {
                    model.moveRow(selc, selc, mov);
                    tblProduto.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblProduto);
            } catch (Exception e) {
                tblProduto.repaint();
            }
        }
    }//GEN-LAST:event_btnDescerProdutoActionPerformed

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        int rowsMetodos = tblMetodos.getRowCount();
        String sql = null;
        if (rowsMetodos > 0) {
            for (int row = 0; row < rowsMetodos; row++) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                if (sql == null) {
                    sql = "AND (tb_metodologia.metodo_id = " + tblMetodos.getValueAt(row, 0).toString() + " ";
                } else {
                    sql = sql + " OR tb_metodologia.metodo_id = " + tblMetodos.getValueAt(row, 0).toString() + " ";
                }
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            sql = sql + ")";
        }
        Material prod = new Material();
        FrmProcurarProduto frm = new FrmProcurarProduto(null, true, prod, sql);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        int rows = tblProduto.getRowCount();
        for (int row = 0; row < rows; row++) {
            if ((Integer) tblProduto.getValueAt(row, 0) == prod.getMaterial_id()) {
                JOptionPane.showMessageDialog(null, "Material já adicionado!");
                return;
            }
        }
        if (prod.getMaterial_id() > 0) {
            model.addRow(new Object[]{
                prod.getMaterial_id(),
                prod.getCod_material(),
                prod.getNome_material(),
                prod.getTipo(),
                prod.getMetodo().getCod_metodo()
            });
        }
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed

    private void btnRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdutoActionPerformed
        if (tblProduto.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
            model.removeRow(tblProduto.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoverProdutoActionPerformed

    private void btnVoltarAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarAnaliseActionPerformed
        irAnalises();
    }//GEN-LAST:event_btnVoltarAnaliseActionPerformed

    private void btnIrLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrLotesActionPerformed
        int rowsProduto = tblProduto.getRowCount();
        if (rowsProduto <= 0) {
            JOptionPane.showMessageDialog(null, "Nenhum Material Selecionado!");
            tblProduto.requestFocus();
        } else {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            String sql = null;
            for (int row = 0; row < rowsProduto; row++) {
                if (sql == null) {
                    sql = "AND (tb_material.cod_material = " + tblProduto.getValueAt(row, 1).toString() + " ";
                } else {
                    sql = sql + " OR tb_material.cod_material = " + tblProduto.getValueAt(row, 1).toString() + " ";
                }
            }
            if (sql != null) {
                sql = sql + ")";
            }
            String order = null;
            for (int row = 0; row < rowsProduto; row++) {
                if (order == null) {
                    order = " tb_material.cod_material = " + tblProduto.getValueAt(row, 1).toString() + " DESC , ";
                } else {
                    order = order + " tb_material.cod_material = " + tblProduto.getValueAt(row, 1).toString() + " DESC , ";
                }
            }
            readLotes(sql, order);
            irLotes();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnIrLotesActionPerformed

    private void btnVoltarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarProdutosActionPerformed
        irProdutos();
    }//GEN-LAST:event_btnVoltarProdutosActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed

        int rowsMetodos = tblMetodos.getRowCount();
        int rowsProduto = tblProduto.getRowCount();
        int rowsAnalises = tblAnalises.getRowCount();
        int rowsLotes = tblLotes.getRowCount();
        Timestamp datahora_inicio = DataHora.getTimestampDateTime(DataHora.getStringDate(txtDataInicio.getDate())
                + " " + txtHoraInicio.getValue().toString()
                + ":" + txtMinutoInicio.getValue().toString() + ":00");
        Timestamp datahora_fim = DataHora.getTimestampDateTime(DataHora.getStringDate(txtDataFim.getDate())
                + " " + txtHoraFim.getValue().toString()
                + ":" + txtMinutoFim.getValue().toString() + ":00");
        String linhas = "------------------------------------------------------------------"
                + "--------------------------------------------------------------------------"
                + "------------------------------------------";

        jTextArea1.append(linhas + "\n");
        jTextArea1.append("CAMPANHA: " + txtNomeCampanha.getText() + "\n");
        jTextArea1.append(linhas + "\n");
        jTextArea1.append("INÍCIO: " + datahora_inicio + "\n");
        jTextArea1.append("FIM: " + datahora_fim + "\n");
        jTextArea1.append(linhas + "\n");

        for (int rowMetodos = 0; rowMetodos < rowsMetodos; rowMetodos++) {
            jTextArea1.append("MÉTODO\t" + tblMetodos.getValueAt(rowMetodos, 1).toString());
            jTextArea1.append(" - " + tblMetodos.getValueAt(rowMetodos, 2).toString() + "\n");
            jTextArea1.append(linhas + "\n");
            for (int rowAnalises = 0; rowAnalises < rowsAnalises; rowAnalises++) {
                jTextArea1.append(linhas + "\n");
                jTextArea1.append("N°\t" + tblAnalises.getModel().getValueAt(rowAnalises, 0).toString() + "\n");
                jTextArea1.append("ANÁLISE\t");
                jTextArea1.append("|SETOR\t");
                jTextArea1.append("|MATERIAL\t");
                jTextArea1.append("|LOTE\t");
                jTextArea1.append("|TAMANHO LOTE\t");
                jTextArea1.append("|PRODUTO\n");
                jTextArea1.append(linhas + "\n");
                for (int rowProduto = 0; rowProduto < rowsProduto; rowProduto++) {
                    Integer soma = 0;
                    for (int rowLotes = 0; rowLotes < rowsLotes; rowLotes++) {
                        jTextArea1.append(tblAnalises.getModel().getValueAt(rowAnalises, 2).toString() + "\t");
                        jTextArea1.append(tblAnalises.getModel().getValueAt(rowAnalises, 4).toString() + "\t");
                        jTextArea1.append(tblProduto.getValueAt(rowProduto, 1).toString() + "\t");
                        jTextArea1.append(tblLotes.getModel().getValueAt(rowLotes, 3).toString() + "\t");
                        jTextArea1.append(tblLotes.getModel().getValueAt(rowLotes, 5).toString() + "\t");
                        jTextArea1.append(tblProduto.getValueAt(rowProduto, 2).toString() + "\n");
                        soma = soma + (Integer) tblLotes.getModel().getValueAt(rowLotes, 5);
                    }
                    Integer estoque = (Integer) tblProduto.getValueAt(rowProduto, 6);
                    jTextArea1.append("\n\t\t\t\t\tEstoque Atual: " + tblProduto.getValueAt(rowProduto, 6).toString());
                    Integer total = soma - estoque;
                    jTextArea1.append("\n\t\t\t\t\tEstoque Futuro: " + total.toString() + "\n\n");
                }
                jTextArea1.append("\n");
            }
        }

        irResumo();
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void tblLotesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblLotesKeyPressed
        if (tblLotes.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                model.removeRow(tblLotes.getSelectedRow());
            }
        }
    }//GEN-LAST:event_tblLotesKeyPressed

    private void btnSubirLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirLoteActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                int selc = tblLotes.getSelectedRow();
                int mov = tblLotes.getSelectedRow() - 1;
                if (selc != 0) {
                    model.moveRow(selc, selc, mov);
                    tblLotes.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblLotes);
            } catch (Exception e) {
                tblLotes.repaint();
            }
        }
    }//GEN-LAST:event_btnSubirLoteActionPerformed

    private void btnDescerLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescerLoteActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                int selc = tblLotes.getSelectedRow();
                int mov = tblLotes.getSelectedRow() + 1;
                if (selc != model.getRowCount() - 1) {
                    model.moveRow(selc, selc, mov);
                    tblLotes.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblLotes);
            } catch (Exception e) {
                tblLotes.repaint();
            }
        }
    }//GEN-LAST:event_btnDescerLoteActionPerformed

    private void btnAdicionarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdicionarLoteActionPerformed

    private void btnRemoverLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverLoteActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
            model.removeRow(tblLotes.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoverLoteActionPerformed

    private void btnImprimirRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirRelatorioActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Resumo de Campanha ?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            MessageFormat header = createFormat("Campanha : " + txtNomeCampanha.getText());
            MessageFormat footer = createFormat(System.getProperty("user")
                    + " - " + DataHora.getStringDateTime(new Date()));
            boolean interactive = true;
            boolean background = true;

            PrintingTask task = new PrintingTask(header, footer, interactive);
            if (background) {
                task.execute();
            } else {
                task.run();
            }
        }
    }//GEN-LAST:event_btnImprimirRelatorioActionPerformed

    private void txtPesquisarLoteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarLoteKeyReleased
//        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
//        TableRowSorter sorter = new TableRowSorter<>(model);
//        tblLotes.setRowSorter(sorter);
//        String text = txtPesquisarLote.getText().trim().toUpperCase();
//        String parametro = "*";
//        if (text.length() == 0) {
//            sorter.setRowFilter(null);
//        } else if (text.indexOf(parametro) > 0) {
//            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
//            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
//            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
//            sorter.setRowFilter(RowFilter.andFilter(andFilters));
//        } else {
//            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
//        }
    }//GEN-LAST:event_txtPesquisarLoteKeyReleased

    private void btnNovoCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCampanhaActionPerformed
//        List<Lote> lotes = new ArrayList<>();
//        FrmLoteCampanha frm = new FrmLoteCampanha(null, true, lotes);
//        frm.setVisible(true);
//        FrmSalvar frmSalvar = new FrmSalvar(null, true);
//        frmSalvar.setVisible(true);
//        if (FrmSalvar.senha()) {
//            try {
//                for (Lote lot : lotes) {
//                    AnaliseCromatografo anlscro = new AnaliseCromatografo();
//                    AnaliseCromatografoDAO anlscroDAO = new AnaliseCromatografoDAO();
//                    Usuario user_registro = new Usuario();
//                    Lote lote = new Lote();
//                    Analise anls = new Analise();
//                    anls.setAnalise_id(lot.getAnalise().getAnalise_id());
//                    anlscro.setAnalise(anls);
//                    lote.setLote_id(lot.getLote_id());
//                    lote.setLote_obs(lot.getLote_obs()== null ? "" : lot.getLote_obs());
//                    anlscro.setLote(lote);
//                    anlscro.setData_hora_registro(DataHora.getTimestampDate(new Date()));
//                    user_registro.setUser(System.getProperty("user"));
//                    anlscro.setUser_registro(user_registro);
//                    anlscro.setStatus("Em Análise");
//                    anlscroDAO.createLoteCampanha(anlscro);
//                }
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
//            }
//        }
    }//GEN-LAST:event_btnNovoCampanhaActionPerformed

    private void btnCancelarCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCampanhaActionPerformed
//        if (tblLotes.getSelectedRow() != -1) {
//            deletarDados((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 2));
//            //read
//        }
    }//GEN-LAST:event_btnCancelarCampanhaActionPerformed

    private void btnPrioridadesCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrioridadesCampanhaActionPerformed
//        abrirPrioridade();
//        timer.stop();
    }//GEN-LAST:event_btnPrioridadesCampanhaActionPerformed

    private void btnSubirCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirCampanhaActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
                int selc = tblLotes.getSelectedRow();
                int mov = tblLotes.getSelectedRow() - 1;
                if (selc != 0) {
                    model.moveRow(selc, selc, mov);
                    tblLotes.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblLotes);
            } catch (Exception e) {
                tblLotes.repaint();
            }
        }
    }//GEN-LAST:event_btnSubirCampanhaActionPerformed

    private void btnDescerCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescerCampanhaActionPerformed
        //        if (tblCampanhas.getSelectedRow() != -1) {
            //            try {
                //                DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
                //                int selc = tblCampanhas.getSelectedRow();
                //                int mov = tblCampanhas.getSelectedRow() + 1;
                //                if (selc != model.getRowCount() - 1) {
                    //                    model.moveRow(selc, selc, mov);
                    //                    tblCampanhas.getSelectionModel().setSelectionInterval(mov, mov);
                    //                }
                //                selecaoTabela(tblCampanhas);
                //            } catch (Exception e) {
                //                tblCampanhas.repaint();
                //            }
            //        }
    }//GEN-LAST:event_btnDescerCampanhaActionPerformed

    private void btnCancelarPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPrioridadeActionPerformed
//        fecharPrioridade();
//        timer.start();
    }//GEN-LAST:event_btnCancelarPrioridadeActionPerformed

    private void btnSalvarPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPrioridadeActionPerformed
        //        tblCampanhas.requestFocus();
        //        int rowsProduto = tblCampanhas.getRowCount();
        //        List lista = new ArrayList();
        //        for (int row = 0; row < rowsProduto; row++) {
            //            StringBuilder sb = new StringBuilder();
            //            sb.append("UPDATE tb_log_campanha SET ordem = '");
            //            sb.append(row);
            //            sb.append("' WHERE log_campanha_id = '");
            //            sb.append(tblCampanhas.getValueAt(row, 2).toString()).append("'; ");
            //            lista.add(sb.toString());
            //        }
        //        atualizarDadosPrioridade(lista);
        //        fecharPrioridade();
        //        timer.start();
        //
        //        try {
            //            AnaliseCromatografo anlscro = new AnaliseCromatografo();
            //            AnaliseCromatografoDAO anlscroDAO = new AnaliseCromatografoDAO();
            //            Usuario user_registro = new Usuario();
            //            Usuario user_inicio = new Usuario();
            //            Lote lote = new Lote();
            //            Cromatografo equip = new Cromatografo();
            //            Analise anls = new Analise();
            //            Campanha camp = new Campanha();
            //            camp.setLog_campanha_id(campanha_id);
            //            anlscro.setCampanha(camp);
            //            anls.setAnalise_id(anls_id);
            //            anlscro.setAnalise(anls);
            //            lote.setLote_id(lote_id);
            //            anlscro.setLote(lote);
            //            equip.setSystem_name(system_name);
            //            anlscro.setCromatografo(equip);
            //            anlscro.setData_hora_inicio(DataHora.getTimestampDate(new Date()));
            //            user_inicio.setUser(System.getProperty("user"));
            //            anlscro.setUser_inicio(user_inicio);
            //            anlscro.setData_hora_registro(DataHora.getTimestampDate(new Date()));
            //            user_registro.setUser(System.getProperty("user"));
            //            anlscro.setUser_registro(user_registro);
            //            anlscro.setStatus("Em Análise");
            //            anlscro.setObs(obs == null ? "" : obs);
            //            anlscro.setRetrabalho_lote(reanalise);
            //            anlscroDAO.createAnaliseCromatografo(anlscro);
            //        } catch (Exception e) {
            //            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
            //        }

    }//GEN-LAST:event_btnSalvarPrioridadeActionPerformed

    private void btnEmailCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailCampanhasActionPerformed
        //        FrmEnviarEmailProximasCampanhas frm = new FrmEnviarEmailProximasCampanhas(null, true, cmbPesquisarSetorCampanhas.getSelectedItem().toString());
        //        frm.setVisible(true);
    }//GEN-LAST:event_btnEmailCampanhasActionPerformed

    private void btnImprimirCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirCampanhasActionPerformed
        //        int dialogResult = JOptionPane.showConfirmDialog(null,
            //                "Deseja Imprimir Relatorio de Próximas Campanhas ?", "Aviso", JOptionPane.YES_NO_OPTION);
        //        if (dialogResult == 0) {
            //            final FrmCarregando frm = new FrmCarregando();
            //            frm.setVisible(true);
            //            Thread t1 = new Thread() {
                //                @Override
                //                public void run() {
                    //                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    //                    String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
                    //                    String campo = cmbCampoPesquisar.getSelectedItem().toString();
                    //                    String texto = txtPesquisarCampanhas.getText();
                    //                    String where = "";
                    //                    if (!"Todos".equals(setor)) {
                        //                        where = " AND tb_log_campanha.sigla_setor = '" + setor + "' ";
                        //                    }
                    //                    if ("Campanha".equals(campo)) {
                        //                        where = " AND tb_log_campanha.nome_campanha LIKE '%" + texto + "%' ";
                        //                    }
                    //                    if ("Análise".equals(campo)) {
                        //                        where = " AND tb_analise.analise LIKE '%" + texto + "%' ";
                        //                    }
                    //                    if ("Equipamento".equals(campo)) {
                        //                        where = " AND tb_log_campanha.system_name LIKE '%" + texto + "%' ";
                        //                    }
                    //                    if ("Prioridade".equals(campo)) {
                        //                        where = " AND tb_log_campanha.cor LIKE '%" + texto + "%' ";
                        //                    }
                    //                    CampanhaDAO.printProximasCampanhas(System.getProperty("user"), where);
                    //                    frm.dispose();
                    //                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    //                }
                //            };
            //            t1.start();
            //        }
    }//GEN-LAST:event_btnImprimirCampanhasActionPerformed

    private void tblLotes1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLotes1MouseClicked
        //        if (evt.getClickCount() == 2) {
            //            if ("Em Análise".equals(tblLotes.getValueAt(tblLotes.getSelectedRow(), 5).toString())) {
                //                int dialogResult = JOptionPane.showConfirmDialog(null,
                    //                        "Deseja finalizar essa análise desse lote?", "Aviso", JOptionPane.YES_NO_OPTION);
                //                if (dialogResult == 0) {
                    //                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    //                    frmSalvar.setVisible(true);
                    //                    if (FrmSalvar.senha()) {
                        //                        updateLote((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
                        //                        atualizar(sys_name);
                        //                    }
                    //                }
                //            }
            //        }
    }//GEN-LAST:event_tblLotes1MouseClicked

    private void tblLotes1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblLotes1KeyReleased
        //        if (tblLotes.getSelectedRow() != -1) {
            //            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                //                int dialogResult = JOptionPane.showConfirmDialog(null,
                    //                        "Deseja excluir a análise desse lote?", "Aviso", JOptionPane.YES_NO_OPTION);
                //                if (dialogResult == 0) {
                    //                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    //                    AnaliseCromatografo anlscro = new AnaliseCromatografo();
                    //                    AnaliseCromatografoDAO anlscroDAO = new AnaliseCromatografoDAO();
                    //                    anlscro.setLog_lote_id((Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
                    //                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    //                    frmSalvar.setVisible(true);
                    //                    if (FrmSalvar.senha()) {
                        //                        anlscroDAO.deleteAnaliseCromatografo(anlscro);
                        //                        atualizar(sys_name);
                        //                    }
                    //                }
                //            }
            //        }
        //        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_tblLotes1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarAnalise;
    private javax.swing.JButton btnAdicionarLote;
    private javax.swing.JButton btnAdicionarMetodo;
    private javax.swing.JButton btnAdicionarProduto;
    public static javax.swing.JButton btnCancelarCampanha;
    private javax.swing.JButton btnCancelarPrioridade;
    private javax.swing.JButton btnDescerCampanha;
    private javax.swing.JButton btnDescerLote;
    private javax.swing.JButton btnDescerProduto;
    private javax.swing.JButton btnEmailCampanhas;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnImprimirCampanhas;
    private javax.swing.JButton btnImprimirRelatorio;
    public static javax.swing.JButton btnIrAnalises;
    private javax.swing.JButton btnIrLotes;
    private javax.swing.JButton btnIrLotes1;
    public static javax.swing.JButton btnNovoCampanha;
    public static javax.swing.JButton btnPrioridadesCampanha;
    private javax.swing.JButton btnRemoverAnalise;
    private javax.swing.JButton btnRemoverLote;
    private javax.swing.JButton btnRemoverMetodo;
    private javax.swing.JButton btnRemoverProduto;
    private javax.swing.JButton btnSalvarPrioridade;
    private javax.swing.JButton btnSubirCampanha;
    private javax.swing.JButton btnSubirLote;
    private javax.swing.JButton btnSubirProduto;
    public static javax.swing.JButton btnVoltarAnalise;
    public static javax.swing.JButton btnVoltarDados;
    public static javax.swing.JButton btnVoltarProdutos;
    private javax.swing.JCheckBox ckbCampanhaDinamica;
    private javax.swing.JComboBox cmbFinalidadeProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JPanel pnlAnalises;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JPanel pnlLote;
    private javax.swing.JTabbedPane pnlLotes;
    private javax.swing.JPanel pnlLotes1;
    private javax.swing.JPanel pnlLotesEquipamento;
    private javax.swing.JPanel pnlProduto;
    private javax.swing.JTable tblAnalises;
    private javax.swing.JTable tblLotes;
    private javax.swing.JTable tblLotes1;
    private javax.swing.JTable tblMetodos;
    private javax.swing.JTable tblProduto;
    private com.toedter.calendar.JDateChooser txtDataFim;
    private com.toedter.calendar.JDateChooser txtDataInicio;
    private javax.swing.JSpinner txtHoraFim;
    private javax.swing.JSpinner txtHoraInicio;
    private javax.swing.JSpinner txtMinutoFim;
    private javax.swing.JSpinner txtMinutoInicio;
    private javax.swing.JTextField txtNomeCampanha;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtPesquisarLote;
    // End of variables declaration//GEN-END:variables

    private void voltarDados() {
        pnlLotes.setEnabledAt(0, true);
        pnlLotes.setEnabledAt(1, false);
        pnlLotes.setEnabledAt(2, false);
        pnlLotes.setEnabledAt(3, false);
        pnlLotes.setSelectedIndex(0);
    }

    private void irAnalises() {
        pnlLotes.setEnabledAt(0, false);
        pnlLotes.setEnabledAt(1, true);
        pnlLotes.setEnabledAt(2, false);
        pnlLotes.setEnabledAt(3, false);
        pnlLotes.setSelectedIndex(1);
    }

    private void irProdutos() {
        pnlLotes.setEnabledAt(0, false);
        pnlLotes.setEnabledAt(1, false);
        pnlLotes.setEnabledAt(2, true);
        pnlLotes.setEnabledAt(3, false);
        pnlLotes.setSelectedIndex(2);
    }

    private void irLotes() {
        pnlLotes.setEnabledAt(0, false);
        pnlLotes.setEnabledAt(1, false);
        pnlLotes.setEnabledAt(2, false);
        pnlLotes.setEnabledAt(3, true);
        pnlLotes.setSelectedIndex(3);
    }

    private void irResumo() {
        pnlLotes.setEnabledAt(0, false);
        pnlLotes.setEnabledAt(1, false);
        pnlLotes.setEnabledAt(2, false);
        pnlLotes.setEnabledAt(3, false);
        pnlLotes.setEnabledAt(4, true);
        pnlLotes.setSelectedIndex(4);
    }

    public void selecaoTabela(JTable tbl) {
        if (tbl.getRowCount() > 0) {
            int selectedRow = tbl.getSelectedRow() + 1;
            int inferior = 1;
            int superior = 1;
            for (int i = 0; i < tbl.getRowCount(); i++) {
                superior = i + 1;
            }
            if (inferior == tbl.getRowCount()) {
                btnSubirProduto.setEnabled(false);
                btnDescerProduto.setEnabled(false);
            } else {
                if (selectedRow == inferior) {
                    btnSubirProduto.setEnabled(false);
                    btnDescerProduto.setEnabled(true);
                } else {
                    if (selectedRow == superior) {
                        btnDescerProduto.setEnabled(false);
                        btnSubirProduto.setEnabled(true);
                    } else {
                        btnSubirProduto.setEnabled(true);
                        btnDescerProduto.setEnabled(true);
                    }
                }
            }
        }
    }

    private String gerarCodigo() {
        String s; //String a ser impressa
        StringBuilder sb = new StringBuilder(); //StringBuffer para o append
        int qtdChars = 1; //Qtd de chars na String
        while (qtdChars <= 4) { //String tem que ter 4 chars
            int charInt = (int) (Math.random() * 70); //Random para  gerar um número aleatório até 70
            //70, porque na tabela ASCII o maior caracter que será necessário é o de nro 70 (F)
            if (((charInt >= 48) && (charInt <= 57)) || ((charInt >= 65) && (charInt <= 70))) {
                //Chars de 48 a 57 são os números
                //Chars de 65 a 70 são: A, B, C, D, F
                char c = (char) charInt; //Gerando um caracter de acordo com o ASCII gerado pelo random		
                sb.append(c); //Adiciona o char gerado no StringBuffer
                qtdChars++; //Incremente nro de chars no String
            }
        }
        s = sb.toString() + DataHora.DateAsCodigoNow(); //String recebe o String que tem a sentença de 16 bytes nesse momento
        return s;
    }

    private void readProduto(String sql) {
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        MaterialDAO equipDao = new MaterialDAO();
        model.setNumRows(0);
        for (Material prod : equipDao.readMaterial(sql)) {
            model.addRow(new Object[]{
                prod.getMaterial_id(),
                prod.getCod_material(),
                prod.getNome_material(),
                prod.getTipo(),
                prod.getMetodo().getCod_metodo(),
                prod.getAutonomia().getAutonomia(),
                prod.getAutonomia().getEstoque_expedicao()
            });
        }
    }

    private void readLotes(String sql, String order) {
        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
        LoteDAO equipDao = new LoteDAO();
        model.setNumRows(0);
        for (Lote lot : equipDao.readLotesPorMetodo(sql, order)) {
            model.addRow(new Object[]{
                lot.getLote_id(),
                lot.getProduto().getCod_material(),
                lot.getAnalise().getSigla_analise_finalidade() + " - "
                + lot.getProduto().getNome_material(),
                lot.getLote_produto(),
                DataHora.getStringDate(lot.getData_entrada()),
                lot.getTamanho_lote(),
                lot.getLote_status()
            });
        }
    }

    public final void readFinalidade() {
        cmbFinalidadeProduto.removeAllItems();
        cmbFinalidadeProduto.addItem("");
        cmbFinalidadeProduto.addItem("MULTIPROPÓSITO");
        categoryMapFinalidade.clear();
        AnaliseDAO anlsDao = new AnaliseDAO();
        for (Analise anls : anlsDao.readAnaliseFinalidade()) {
            Integer id = anls.getAnalise_finalidade_id();
            String name = anls.getAnalise_finalidade();
            cmbFinalidadeProduto.addItem(name);
            categoryMapFinalidade.put(id, name);
        }
    }

    private void readAnalises() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Analise anls = new Analise();
        FrmProcurarAnalise frm = new FrmProcurarAnalise(null, true, anls);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblAnalises.getModel();
        JComboBox comboSetor = new JComboBox();
        comboSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            Integer id = setor.getSetor_id();
            String name = setor.getSigla_setor();
            comboSetor.addItem(name);
            categoryMapSetor.put(id, name);
        }
        JComboBox comboEquip = new JComboBox();
        comboEquip.addItem("");
        categoryMapEquipamento.clear();
        CromatografoDAO equipDao = new CromatografoDAO();
        for (Cromatografo equip : equipDao.readCromatografo()) {
            Integer id = equip.getCromatografo_id();
            String name = equip.getSystem_name();
            comboEquip.addItem(name);
            categoryMapEquipamento.put(id, name);
        }
        JTextField obsTexto = new JTextField();

        TableColumn colSetor = tblAnalises.getColumnModel().getColumn(4);
        colSetor.setCellEditor(new DefaultCellEditor(comboSetor));
        TableColumn colEquip = tblAnalises.getColumnModel().getColumn(5);
        colEquip.setCellEditor(new DefaultCellEditor(comboEquip));
        TableColumn colObs = tblAnalises.getColumnModel().getColumn(6);
        colObs.setCellEditor(new DefaultCellEditor(obsTexto));

        if (anls.getAnalise_id() > 0) {
            model.addRow(new Object[]{
                gerarCodigo(),
                anls.getAnalise_id(),
                anls.getAnalise(),
                anls.getSigla_analise()
            });
        }
    }

    private void loadHora() {
        SpinnerNumberModel modelHoraInicio = new SpinnerNumberModel(0, 0, 23, 1);
        txtHoraInicio.setModel(modelHoraInicio);
        JSpinner.NumberEditor editorHoraInicio = new JSpinner.NumberEditor(txtHoraInicio);
        txtHoraInicio.setEditor(editorHoraInicio);
        SpinnerNumberModel modelMinutoInicio = new SpinnerNumberModel(0, 0, 59, 1);
        txtMinutoInicio.setModel(modelMinutoInicio);
        JSpinner.NumberEditor editorMinutoInicio = new JSpinner.NumberEditor(txtMinutoInicio);
        txtMinutoInicio.setEditor(editorMinutoInicio);
        SpinnerNumberModel modelHoraFim = new SpinnerNumberModel(0, 0, 23, 1);
        txtHoraFim.setModel(modelHoraFim);
        JSpinner.NumberEditor editorHoraFim = new JSpinner.NumberEditor(txtHoraFim);
        txtHoraFim.setEditor(editorHoraFim);
        SpinnerNumberModel modelMinutoFim = new SpinnerNumberModel(0, 0, 59, 1);
        txtMinutoFim.setModel(modelMinutoFim);
        JSpinner.NumberEditor editorMinutoFim = new JSpinner.NumberEditor(txtMinutoFim);
        txtMinutoFim.setEditor(editorMinutoFim);
    }

    private void loadData() {
        Date currentDate = new Date();
        Calendar cal = Calendar.getInstance();
        cal.setTime(currentDate);
        txtDataInicio.setDate(currentDate);
        txtDataInicio.setMinSelectableDate(currentDate);
        txtHoraInicio.setValue((Integer) cal.get(Calendar.HOUR_OF_DAY));
        txtMinutoInicio.setValue((Integer) cal.get(Calendar.MINUTE));
        txtDataFim.setMinSelectableDate(currentDate);
        cal.add(Calendar.DATE, +5);
        cal.add(Calendar.HOUR_OF_DAY, +7);
        cal.add(Calendar.MINUTE, +20);
        txtDataFim.setDate(cal.getTime());
        txtHoraFim.setValue((Integer) cal.get(Calendar.HOUR_OF_DAY));
        txtMinutoFim.setValue((Integer) cal.get(Calendar.MINUTE));
    }

    private class PrintingTask extends SwingWorker<Object, Object> {

        private final MessageFormat headerFormat;
        private final MessageFormat footerFormat;
        private final boolean interactive;
        private volatile boolean complete = false;
        private volatile String message;

        public PrintingTask(MessageFormat header, MessageFormat footer,
                boolean interactive) {
            this.headerFormat = header;
            this.footerFormat = footer;
            this.interactive = interactive;
        }

        @Override
        protected Object doInBackground() {
            try {
                complete = jTextArea1.print(headerFormat, footerFormat,
                        true, null, null, interactive);
                message = "Impressão " + (complete ? "Finalizada" : "Cancelada");
            } catch (PrinterException ex) {
                message = "Desculpe, ocorreu um erro na impressora";
            } catch (SecurityException ex) {
                message = "Desculpe, não foi possivel acessar a impressora por motivos de segurança";
            }
            return null;
        }

        @Override
        protected void done() {
            message(!complete, message);
        }
    }

    private MessageFormat createFormat(String texto) {
        if (texto != null && texto.length() > 0) {
            try {
                return new MessageFormat(texto);
            } catch (IllegalArgumentException e) {
                error("Desculpe, este formato é inválido.");
            }
        }
        return null;
    }

    private void message(boolean error, String msg) {
        int type = (error ? JOptionPane.ERROR_MESSAGE
                : JOptionPane.INFORMATION_MESSAGE);
        JOptionPane.showMessageDialog(this, msg, "Imprimindo", type);
    }

    private void error(String msg) {
        message(true, msg);
    }
    
        private void abrirPrioridade() {
        btnSubirCampanha.setVisible(true);
        btnDescerCampanha.setVisible(true);
        btnSalvarPrioridade.setVisible(true);
        btnCancelarPrioridade.setVisible(true);
        btnCancelarCampanha.setEnabled(false);
        btnNovoCampanha.setEnabled(false);
    }

    private void fecharPrioridade() {
        btnSubirCampanha.setVisible(false);
        btnDescerCampanha.setVisible(false);
        btnSalvarPrioridade.setVisible(false);
        btnCancelarPrioridade.setVisible(false);
        btnCancelarCampanha.setEnabled(true);
        btnNovoCampanha.setEnabled(true);
//        ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
//        Acesso.verificarAcessoProgramacaoCromatografo();
    }

   

}
