/*
 * Copyright (C) 2018 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package Frm.Programacao;

import Classes.Acesso.ProgramacaoCromatografoAcesso;
import Classes.DAO.CampanhaDAO;
import Classes.DAO.SetorDAO;
import Frm.Principal.FrmCarregando;
import Classes.Modelo.Campanha;
import Classes.Modelo.Setor;
import Classes.Util.DataHora;
import Classes.Util.GridlineCellRenderer;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmCampanhas extends javax.swing.JDialog {

    /**
     * Creates new form FrmLotesEquipamento
     */
    public FrmCampanhas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        readSetorPesquisar();
        setLocationRelativeTo(null);
        setTitle("Campanhas");
        readCampanha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCampanhas = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblCampanhas = new javax.swing.JTable();
        txtPesquisarCampanhas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAtualizarCampanhas = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        cmbStatusCampanhas = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cmbCampoPesquisar = new javax.swing.JComboBox();
        btnProcurar = new javax.swing.JButton();
        btnImprimirStatusEquipamento = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        cmbPesquisarSetorCampanhas = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanhas"));

        tblCampanhas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Id", "Campanha", "Análise", "Equipamento", "Data Início / Usuário", "Data Fim / Usuário", "Previsão", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCampanhas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCampanhas.setSurrendersFocusOnKeystroke(true);
        tblCampanhas.getTableHeader().setReorderingAllowed(false);
        tblCampanhas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCampanhasMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblCampanhas);
        if (tblCampanhas.getColumnModel().getColumnCount() > 0) {
            tblCampanhas.getColumnModel().getColumn(0).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(1).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(1).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(2).setMinWidth(300);
            tblCampanhas.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblCampanhas.getColumnModel().getColumn(2).setMaxWidth(300);
            tblCampanhas.getColumnModel().getColumn(3).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(3).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(3).setMaxWidth(200);
            tblCampanhas.getColumnModel().getColumn(4).setMinWidth(120);
            tblCampanhas.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblCampanhas.getColumnModel().getColumn(4).setMaxWidth(120);
            tblCampanhas.getColumnModel().getColumn(5).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(5).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(5).setMaxWidth(200);
            tblCampanhas.getColumnModel().getColumn(6).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(6).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(6).setMaxWidth(200);
            tblCampanhas.getColumnModel().getColumn(7).setMinWidth(150);
            tblCampanhas.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblCampanhas.getColumnModel().getColumn(7).setMaxWidth(150);
            tblCampanhas.getColumnModel().getColumn(8).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(8).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(8).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );

        txtPesquisarCampanhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCampanhasKeyReleased(evt);
            }
        });

        jLabel11.setText("Pesquisar:");

        btnAtualizarCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizarCampanhas.setText("Atualizar");
        btnAtualizarCampanhas.setToolTipText("Atualizar");
        btnAtualizarCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCampanhasActionPerformed(evt);
            }
        });

        jLabel27.setText("Status:");

        cmbStatusCampanhas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Em Análise", "Finalizados" }));

        jLabel28.setText("Campo:");

        cmbCampoPesquisar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Campanha", "Análise", "Equipamento", "Prioridade" }));

        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        btnImprimirStatusEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirStatusEquipamento.setToolTipText("Atualizar");
        btnImprimirStatusEquipamento.setFocusable(false);
        btnImprimirStatusEquipamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimirStatusEquipamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimirStatusEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirStatusEquipamentoActionPerformed(evt);
            }
        });

        jLabel29.setText("Setor:");

        javax.swing.GroupLayout pnlCampanhasLayout = new javax.swing.GroupLayout(pnlCampanhas);
        pnlCampanhas.setLayout(pnlCampanhasLayout);
        pnlCampanhasLayout.setHorizontalGroup(
            pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCampanhasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCampanhasLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetorCampanhas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatusCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurar))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCampanhasLayout.createSequentialGroup()
                        .addComponent(btnImprimirStatusEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtualizarCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlCampanhasLayout.setVerticalGroup(
            pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCampanhasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarSetorCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbStatusCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnProcurar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtualizarCampanhas)
                    .addComponent(btnImprimirStatusEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCampanhas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCampanhas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCampanhasActionPerformed
        readCampanha();
    }//GEN-LAST:event_btnAtualizarCampanhasActionPerformed

    private void tblCampanhasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCampanhasMouseClicked
        if (evt.getClickCount() == 2) {
            ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
            if (Acesso.verificarAtualizarDados()) {
                if ("".equals(tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 6).toString())) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    FrmNovoCampanhaCromatografo frmNovoCampanha = new FrmNovoCampanhaCromatografo(null, true,
                            (Integer) tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 1), true);
                    frmNovoCampanha.setVisible(true);
                    readCampanha();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    JOptionPane.showMessageDialog(null,
                            "Campanha já finalizada", "Alerta",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tblCampanhasMouseClicked

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        readCampanha();
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void txtPesquisarCampanhasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCampanhasKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            readCampanha();
        }
    }//GEN-LAST:event_txtPesquisarCampanhasKeyReleased

    private void btnImprimirStatusEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirStatusEquipamentoActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Status das Campanhas?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
                    String status = cmbStatusCampanhas.getSelectedItem().toString();
                    String campo = cmbCampoPesquisar.getSelectedItem().toString();
                    String texto = txtPesquisarCampanhas.getText();
                    String where = "";
                    if (!"Todos".equals(setor)) {
                        where += " AND tb_log_campanha.sigla_setor = '" + setor + "' ";
                    }
                    if ("Em Análise".equals(status)) {
                        where += " AND tb_log_campanha.user_fim IS NULL ";
                    }
                    if ("Finalizados".equals(status)) {
                        where += " AND tb_log_campanha.user_fim IS NOT NULL ";
                    }
                    if ("Campanha".equals(campo)) {
                        where += " AND tb_log_campanha.nome_campanha LIKE '%" + texto + "%' ";
                    }
                    if ("Análise".equals(campo)) {
                        where += " AND tb_analise.analise LIKE '%" + texto + "%' ";
                    }
                    if ("Equipamento".equals(campo)) {
                        where += " AND tb_log_campanha.system_name LIKE '%" + texto + "%' ";
                    }
                    if ("Prioridade".equals(campo)) {
                        where += " AND tb_log_campanha.cor LIKE '%" + texto + "%' ";
                    }
                    CampanhaDAO.printStatusCampanhas(System.getProperty("user"), where);
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
            dispose();
        }
    }//GEN-LAST:event_btnImprimirStatusEquipamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCampanhas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCampanhas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCampanhas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCampanhas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmCampanhas dialog = new FrmCampanhas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarCampanhas;
    private javax.swing.JButton btnImprimirStatusEquipamento;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JComboBox cmbCampoPesquisar;
    private javax.swing.JComboBox cmbPesquisarSetorCampanhas;
    private javax.swing.JComboBox cmbStatusCampanhas;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel pnlCampanhas;
    private javax.swing.JTable tblCampanhas;
    private javax.swing.JTextField txtPesquisarCampanhas;
    // End of variables declaration//GEN-END:variables

    private void readCampanha() {
        try {
            GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
            DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
            tblCampanhas.setDefaultRenderer(Object.class, r);
            CampanhaDAO campDao = new CampanhaDAO();
            model.setNumRows(0);
            String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
            String status = cmbStatusCampanhas.getSelectedItem().toString();
            String campo = cmbCampoPesquisar.getSelectedItem().toString();
            String texto = txtPesquisarCampanhas.getText().trim();
            for (Campanha camp : campDao.selectAllCampanha(status, campo, texto, setor)) {
                model.addRow(new Object[]{
                    camp.getCor() == null ? "" : camp.getCor(),
                    camp.getLog_campanha_id(),
                    camp.getNome_campanha(),
                    camp.getAnalise().getAnalise(),
                    camp.getCromatografo().getSystem_name(),
                    DataHora.getStringDateTime(camp.getData_inicio())
                    + " - " + camp.getUser_inicio().getUser(),
                    camp.getData_fim() == null ? ""
                    : DataHora.getStringDateTime(camp.getData_fim())
                    + " - " + camp.getUser_fim().getUser(),
                    DataHora.getStringDateTime(camp.getPrevisao()),
                    camp.getObs_campanha()
                });
            }
        } catch (Exception e) {

        }
    }

    public final void readSetorPesquisar() {
        cmbPesquisarSetorCampanhas.removeAllItems();
        cmbPesquisarSetorCampanhas.addItem("Todos");
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            if (setor.getSigla_setor().startsWith("HPLC") || setor.getSigla_setor().startsWith("CG")) {
                String name = setor.getSigla_setor();
                cmbPesquisarSetorCampanhas.addItem(name);
            }
        }
    }
}
