/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Programacao;

import Classes.Acesso.ProgramacaoCromatografoAcesso;
import Classes.DAO.CampanhaDAO;
import Classes.DAO.CromatografoDAO;
import Classes.DAO.SetorDAO;
import Frm.Login.FrmSalvar;
import Frm.Principal.FrmCarregando;
import Classes.Modelo.Campanha;
import Classes.Modelo.Cromatografo;
import Classes.Modelo.Setor;
import Classes.Util.DataHora;
import Classes.Util.GridlineCellRenderer;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmProgracaoCromatografo extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmLogBooK
     */
    private Timer timer;

    public FrmProgracaoCromatografo() {
        initComponents();
        setTitle("Resumo das Análises");
        readSetorPesquisar();
        readStatusEquipamento();
        readCampanhas();
        iniciarContagem();
        fecharPrioridade();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlProgramacao = new javax.swing.JTabbedPane();
        pnlEquipamentos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pnlProgramacaoCromatografos = new javax.swing.JScrollPane();
        tblProgramacaoCromatografos = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        cmbPesquisarSetorEquipamento = new javax.swing.JComboBox();
        jToolBar1 = new javax.swing.JToolBar();
        btnLotesEquipamento = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnLotesPreparo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnPassagemTurno = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnCampanha = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        btnTelaCheiaEquipamento = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnAtualizarEquipamento = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        btnEmailStatusEquipamento = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        btnImprimirStatusEquipamento = new javax.swing.JButton();
        pnlProximasCampanhas = new javax.swing.JPanel();
        pnlLotesPreparo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtPesquisarCampanhas = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblCampanhas = new javax.swing.JTable();
        jToolBar3 = new javax.swing.JToolBar();
        btnNovoCampanha = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnCancelarCampanha = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnPrioridadesCampanha = new javax.swing.JButton();
        jToolBar4 = new javax.swing.JToolBar();
        btnTelaCheiaCampanhas = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        btnAtualizarCampanhas = new javax.swing.JButton();
        jSeparator15 = new javax.swing.JToolBar.Separator();
        btnEmailCampanhas = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        btnImprimirCampanhas = new javax.swing.JButton();
        btnSubirCampanha = new javax.swing.JButton();
        btnDescerCampanha = new javax.swing.JButton();
        btnSalvarPrioridade = new javax.swing.JButton();
        btnCancelarPrioridade = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        cmbPesquisarSetorCampanhas = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cmbCampoPesquisar = new javax.swing.JComboBox();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Equipamentos"));

        tblProgramacaoCromatografos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Id", "Equipamento", "Setor", "Campanha", "Descrição", "Data Registro", "Usuário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProgramacaoCromatografos.setRowSelectionAllowed(false);
        tblProgramacaoCromatografos.getTableHeader().setReorderingAllowed(false);
        pnlProgramacaoCromatografos.setViewportView(tblProgramacaoCromatografos);
        if (tblProgramacaoCromatografos.getColumnModel().getColumnCount() > 0) {
            tblProgramacaoCromatografos.getColumnModel().getColumn(0).setMinWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(0).setMaxWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(1).setMinWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(1).setMaxWidth(0);
            tblProgramacaoCromatografos.getColumnModel().getColumn(2).setMinWidth(100);
            tblProgramacaoCromatografos.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblProgramacaoCromatografos.getColumnModel().getColumn(2).setMaxWidth(100);
            tblProgramacaoCromatografos.getColumnModel().getColumn(3).setMinWidth(80);
            tblProgramacaoCromatografos.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblProgramacaoCromatografos.getColumnModel().getColumn(3).setMaxWidth(80);
            tblProgramacaoCromatografos.getColumnModel().getColumn(4).setMinWidth(150);
            tblProgramacaoCromatografos.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblProgramacaoCromatografos.getColumnModel().getColumn(6).setMinWidth(180);
            tblProgramacaoCromatografos.getColumnModel().getColumn(6).setPreferredWidth(180);
            tblProgramacaoCromatografos.getColumnModel().getColumn(6).setMaxWidth(180);
            tblProgramacaoCromatografos.getColumnModel().getColumn(7).setMinWidth(120);
            tblProgramacaoCromatografos.getColumnModel().getColumn(7).setPreferredWidth(120);
            tblProgramacaoCromatografos.getColumnModel().getColumn(7).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlProgramacaoCromatografos, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pnlProgramacaoCromatografos, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
        );

        jLabel25.setText("Setor:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnLotesEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_lotes.png"))); // NOI18N
        btnLotesEquipamento.setText("Lotes - Equipamento");
        btnLotesEquipamento.setToolTipText("Atualizar");
        btnLotesEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLotesEquipamentoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLotesEquipamento);
        jToolBar1.add(jSeparator5);

        btnLotesPreparo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_processo.png"))); // NOI18N
        btnLotesPreparo.setText("Lotes - Preparo");
        btnLotesPreparo.setToolTipText("Atualizar");
        btnLotesPreparo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLotesPreparoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLotesPreparo);
        jToolBar1.add(jSeparator6);

        btnPassagemTurno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_edit.png"))); // NOI18N
        btnPassagemTurno.setText("Passagem de Turno");
        btnPassagemTurno.setToolTipText("Atualizar");
        btnPassagemTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassagemTurnoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPassagemTurno);
        jToolBar1.add(jSeparator4);

        btnCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_fluxo_trabalho.png"))); // NOI18N
        btnCampanha.setText("Campanhas");
        btnCampanha.setToolTipText("Atualizar");
        btnCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCampanhaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCampanha);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        btnTelaCheiaEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_full_screen.png"))); // NOI18N
        btnTelaCheiaEquipamento.setText("Tela Cheia");
        btnTelaCheiaEquipamento.setToolTipText("Atualizar");
        btnTelaCheiaEquipamento.setFocusable(false);
        btnTelaCheiaEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaCheiaEquipamentoActionPerformed(evt);
            }
        });
        jToolBar2.add(btnTelaCheiaEquipamento);
        jToolBar2.add(jSeparator7);

        btnAtualizarEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizarEquipamento.setText("Atualizar");
        btnAtualizarEquipamento.setToolTipText("Atualizar");
        btnAtualizarEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarEquipamentoActionPerformed(evt);
            }
        });
        jToolBar2.add(btnAtualizarEquipamento);
        jToolBar2.add(jSeparator14);

        btnEmailStatusEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_mail.png"))); // NOI18N
        btnEmailStatusEquipamento.setToolTipText("Enviar Relatório");
        btnEmailStatusEquipamento.setFocusable(false);
        btnEmailStatusEquipamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEmailStatusEquipamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEmailStatusEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailStatusEquipamentoActionPerformed(evt);
            }
        });
        jToolBar2.add(btnEmailStatusEquipamento);
        jToolBar2.add(jSeparator13);

        btnImprimirStatusEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirStatusEquipamento.setToolTipText("Atualizar");
        btnImprimirStatusEquipamento.setFocusable(false);
        btnImprimirStatusEquipamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimirStatusEquipamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimirStatusEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirStatusEquipamentoActionPerformed(evt);
            }
        });
        jToolBar2.add(btnImprimirStatusEquipamento);

        javax.swing.GroupLayout pnlEquipamentosLayout = new javax.swing.GroupLayout(pnlEquipamentos);
        pnlEquipamentos.setLayout(pnlEquipamentosLayout);
        pnlEquipamentosLayout.setHorizontalGroup(
            pnlEquipamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEquipamentosLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlEquipamentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEquipamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEquipamentosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetorEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlEquipamentosLayout.setVerticalGroup(
            pnlEquipamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEquipamentosLayout.createSequentialGroup()
                .addGroup(pnlEquipamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEquipamentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPesquisarSetorEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlProgramacao.addTab("Equipamentos", pnlEquipamentos);

        jLabel10.setText("Pesquisar:");

        txtPesquisarCampanhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCampanhasKeyReleased(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanhas"));

        tblCampanhas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Ordem", "Id", "Campanha", "Análise", "Equipamento", "Setor", "Previsão", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCampanhas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCampanhas.setSurrendersFocusOnKeystroke(true);
        tblCampanhas.getTableHeader().setReorderingAllowed(false);
        tblCampanhas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCampanhasMouseClicked(evt);
            }
        });
        tblCampanhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCampanhasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCampanhasKeyReleased(evt);
            }
        });
        jScrollPane9.setViewportView(tblCampanhas);
        if (tblCampanhas.getColumnModel().getColumnCount() > 0) {
            tblCampanhas.getColumnModel().getColumn(0).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(1).setMinWidth(50);
            tblCampanhas.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblCampanhas.getColumnModel().getColumn(1).setMaxWidth(50);
            tblCampanhas.getColumnModel().getColumn(2).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(2).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(2).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(3).setMinWidth(500);
            tblCampanhas.getColumnModel().getColumn(3).setPreferredWidth(500);
            tblCampanhas.getColumnModel().getColumn(4).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(5).setMinWidth(120);
            tblCampanhas.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblCampanhas.getColumnModel().getColumn(5).setMaxWidth(120);
            tblCampanhas.getColumnModel().getColumn(6).setMinWidth(100);
            tblCampanhas.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblCampanhas.getColumnModel().getColumn(6).setMaxWidth(100);
            tblCampanhas.getColumnModel().getColumn(7).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(7).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(8).setMinWidth(900);
            tblCampanhas.getColumnModel().getColumn(8).setPreferredWidth(900);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        btnNovoCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnNovoCampanha.setText("Novo");
        btnNovoCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnNovoCampanha);
        jToolBar3.add(jSeparator8);

        btnCancelarCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_cancel.png"))); // NOI18N
        btnCancelarCampanha.setText("Cancelar");
        btnCancelarCampanha.setFocusable(false);
        btnCancelarCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnCancelarCampanha);
        jToolBar3.add(jSeparator9);

        btnPrioridadesCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_campanha.png"))); // NOI18N
        btnPrioridadesCampanha.setText("Prioridades");
        btnPrioridadesCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrioridadesCampanhaActionPerformed(evt);
            }
        });
        jToolBar3.add(btnPrioridadesCampanha);

        jToolBar4.setFloatable(false);
        jToolBar4.setRollover(true);

        btnTelaCheiaCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_full_screen.png"))); // NOI18N
        btnTelaCheiaCampanhas.setText("Tela Cheia");
        btnTelaCheiaCampanhas.setToolTipText("Atualizar");
        btnTelaCheiaCampanhas.setFocusable(false);
        btnTelaCheiaCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaCheiaCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnTelaCheiaCampanhas);
        jToolBar4.add(jSeparator11);

        btnAtualizarCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizarCampanhas.setText("Atualizar");
        btnAtualizarCampanhas.setToolTipText("Atualizar");
        btnAtualizarCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnAtualizarCampanhas);
        jToolBar4.add(jSeparator15);

        btnEmailCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_mail.png"))); // NOI18N
        btnEmailCampanhas.setToolTipText("Enviar Relatório");
        btnEmailCampanhas.setFocusable(false);
        btnEmailCampanhas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEmailCampanhas.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEmailCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnEmailCampanhas);
        jToolBar4.add(jSeparator12);

        btnImprimirCampanhas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirCampanhas.setToolTipText("Atualizar");
        btnImprimirCampanhas.setFocusable(false);
        btnImprimirCampanhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirCampanhasActionPerformed(evt);
            }
        });
        jToolBar4.add(btnImprimirCampanhas);

        btnSubirCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_ascendente.png"))); // NOI18N
        btnSubirCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirCampanhaActionPerformed(evt);
            }
        });

        btnDescerCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ordem_descendente.png"))); // NOI18N
        btnDescerCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescerCampanhaActionPerformed(evt);
            }
        });

        btnSalvarPrioridade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_ok.png"))); // NOI18N
        btnSalvarPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPrioridadeActionPerformed(evt);
            }
        });

        btnCancelarPrioridade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_cancel.png"))); // NOI18N
        btnCancelarPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPrioridadeActionPerformed(evt);
            }
        });

        jLabel27.setText("Setor:");

        cmbPesquisarSetorCampanhas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarSetorCampanhasItemStateChanged(evt);
            }
        });

        jLabel28.setText("Campo:");

        cmbCampoPesquisar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Campanha", "Análise", "Equipamento", "Prioridade" }));

        javax.swing.GroupLayout pnlLotesPreparoLayout = new javax.swing.GroupLayout(pnlLotesPreparo);
        pnlLotesPreparo.setLayout(pnlLotesPreparoLayout);
        pnlLotesPreparoLayout.setHorizontalGroup(
            pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnDescerCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSubirCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSalvarPrioridade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelarPrioridade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarCampanhas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetorCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlLotesPreparoLayout.setVerticalGroup(
            pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarSetorCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                        .addComponent(btnSubirCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDescerCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlProximasCampanhasLayout = new javax.swing.GroupLayout(pnlProximasCampanhas);
        pnlProximasCampanhas.setLayout(pnlProximasCampanhasLayout);
        pnlProximasCampanhasLayout.setHorizontalGroup(
            pnlProximasCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLotesPreparo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlProximasCampanhasLayout.setVerticalGroup(
            pnlProximasCampanhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLotesPreparo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlProgramacao.addTab("Próximas Campanhas", pnlProximasCampanhas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProgramacao, javax.swing.GroupLayout.DEFAULT_SIZE, 921, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlProgramacao)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarEquipamentoActionPerformed
        readStatusEquipamento();
    }//GEN-LAST:event_btnAtualizarEquipamentoActionPerformed

    private void btnLotesEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLotesEquipamentoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmLotesEquipamento frm = new FrmLotesEquipamento(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnLotesEquipamentoActionPerformed

    private void btnLotesPreparoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLotesPreparoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmLotesPreparo frm = new FrmLotesPreparo(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnLotesPreparoActionPerformed

    private void btnPassagemTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassagemTurnoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmPassagemTurno frm = new FrmPassagemTurno(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnPassagemTurnoActionPerformed

    private void btnCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCampanhaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmCampanhas frm = new FrmCampanhas(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnCampanhaActionPerformed

    private void txtPesquisarCampanhasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCampanhasKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            readCampanhas();
        }
    }//GEN-LAST:event_txtPesquisarCampanhasKeyReleased

    private void btnNovoCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCampanhaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmNovoCampanhaCromatografo frmNovoCampanha = new FrmNovoCampanhaCromatografo(null, true, 0);
        frmNovoCampanha.setVisible(true);
        readCampanhas();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnNovoCampanhaActionPerformed

    private void btnPrioridadesCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrioridadesCampanhaActionPerformed
        abrirPrioridade();
        timer.stop();
    }//GEN-LAST:event_btnPrioridadesCampanhaActionPerformed

    private void btnAtualizarCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCampanhasActionPerformed
        readCampanhas();
    }//GEN-LAST:event_btnAtualizarCampanhasActionPerformed

    private void btnCancelarCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCampanhaActionPerformed
        if (tblCampanhas.getSelectedRow() != -1) {
            deletarDados((Integer) tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 2));
            readCampanhas();
        }
    }//GEN-LAST:event_btnCancelarCampanhaActionPerformed

    private void btnSubirCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirCampanhaActionPerformed
        if (tblCampanhas.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
                int selc = tblCampanhas.getSelectedRow();
                int mov = tblCampanhas.getSelectedRow() - 1;
                if (selc != 0) {
                    model.moveRow(selc, selc, mov);
                    tblCampanhas.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblCampanhas);
            } catch (Exception e) {
                tblCampanhas.repaint();
            }
        }
    }//GEN-LAST:event_btnSubirCampanhaActionPerformed

    private void btnDescerCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescerCampanhaActionPerformed
        if (tblCampanhas.getSelectedRow() != -1) {
            try {
                DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
                int selc = tblCampanhas.getSelectedRow();
                int mov = tblCampanhas.getSelectedRow() + 1;
                if (selc != model.getRowCount() - 1) {
                    model.moveRow(selc, selc, mov);
                    tblCampanhas.getSelectionModel().setSelectionInterval(mov, mov);
                }
                selecaoTabela(tblCampanhas);
            } catch (Exception e) {
                tblCampanhas.repaint();
            }
        }
    }//GEN-LAST:event_btnDescerCampanhaActionPerformed

    private void btnSalvarPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPrioridadeActionPerformed
        tblCampanhas.requestFocus();
        int rowsProduto = tblCampanhas.getRowCount();
        List lista = new ArrayList();
        for (int row = 0; row < rowsProduto; row++) {
            StringBuilder sb = new StringBuilder();
            sb.append("UPDATE tb_log_campanha SET ordem = '");
            sb.append(row);
            sb.append("' WHERE log_campanha_id = '");
            sb.append(tblCampanhas.getValueAt(row, 2).toString()).append("'; ");
            lista.add(sb.toString());
        }
        atualizarDadosPrioridade(lista);
        fecharPrioridade();
        timer.start();
    }//GEN-LAST:event_btnSalvarPrioridadeActionPerformed

    private void btnCancelarPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPrioridadeActionPerformed
        fecharPrioridade();
        timer.start();
    }//GEN-LAST:event_btnCancelarPrioridadeActionPerformed

    private void tblCampanhasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCampanhasMouseClicked
        selecaoTabela(tblCampanhas);
        if (evt.getClickCount() == 2) {
            ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
            if (Acesso.verificarAtualizarDados()) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                FrmNovoCampanhaCromatografo frmNovoCampanha = new FrmNovoCampanhaCromatografo(null, true,
                        (Integer) tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 2));
                frmNovoCampanha.setVisible(true);
                readCampanhas();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_tblCampanhasMouseClicked

    private void tblCampanhasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCampanhasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            selecaoTabela(tblCampanhas);
        }
        if (tblCampanhas.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletarDados((Integer) tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 2));
                readCampanhas();
            }
        }
    }//GEN-LAST:event_tblCampanhasKeyPressed

    private void tblCampanhasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCampanhasKeyReleased
        selecaoTabela(tblCampanhas);
    }//GEN-LAST:event_tblCampanhasKeyReleased

    private void btnImprimirCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirCampanhasActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Próximas Campanhas ?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
                    String campo = cmbCampoPesquisar.getSelectedItem().toString();
                    String texto = txtPesquisarCampanhas.getText();
                    String where = "";
                    if (!"Todos".equals(setor)) {
                        where = " AND tb_log_campanha.sigla_setor = '" + setor + "' ";
                    }
                    if ("Campanha".equals(campo)) {
                        where = " AND tb_log_campanha.nome_campanha LIKE '%" + texto + "%' ";
                    }
                    if ("Análise".equals(campo)) {
                        where = " AND tb_analise.analise LIKE '%" + texto + "%' ";
                    }
                    if ("Equipamento".equals(campo)) {
                        where = " AND tb_log_campanha.system_name LIKE '%" + texto + "%' ";
                    }
                    if ("Prioridade".equals(campo)) {
                        where = " AND tb_log_campanha.cor LIKE '%" + texto + "%' ";
                    }
                    CampanhaDAO.printProximasCampanhas(System.getProperty("user"), where);
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_btnImprimirCampanhasActionPerformed

    private void btnImprimirStatusEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirStatusEquipamentoActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Status dos Equipamentos?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    String where = "";
                    if (!"Todos".equals(cmbPesquisarSetorEquipamento.getSelectedItem().toString())) {
                        where = " AND sigla_setor = '"
                                + cmbPesquisarSetorEquipamento.getSelectedItem().toString() + "' ";
                    }
                    CampanhaDAO.printStatusEquipamento(System.getProperty("user"), where);
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_btnImprimirStatusEquipamentoActionPerformed

    private void cmbPesquisarSetorCampanhasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarSetorCampanhasItemStateChanged
        readCampanhas();
    }//GEN-LAST:event_cmbPesquisarSetorCampanhasItemStateChanged

    private void btnEmailStatusEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailStatusEquipamentoActionPerformed
        FrmEnviarEmailStatusEquipamento frm = new FrmEnviarEmailStatusEquipamento(null, true, cmbPesquisarSetorEquipamento.getSelectedItem().toString());
        frm.setVisible(true);
    }//GEN-LAST:event_btnEmailStatusEquipamentoActionPerformed

    private void btnEmailCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailCampanhasActionPerformed
        FrmEnviarEmailProximasCampanhas frm = new FrmEnviarEmailProximasCampanhas(null, true, cmbPesquisarSetorCampanhas.getSelectedItem().toString());
        frm.setVisible(true);
    }//GEN-LAST:event_btnEmailCampanhasActionPerformed

    private void btnTelaCheiaCampanhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaCheiaCampanhasActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmTelaCheiaCampanhas frm = new FrmTelaCheiaCampanhas();
        frm.setVisible(true);
        timer.stop();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnTelaCheiaCampanhasActionPerformed

    private void btnTelaCheiaEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaCheiaEquipamentoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmTelaCheiaEquipamento frm = new FrmTelaCheiaEquipamento();
        frm.setVisible(true);
        timer.stop();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnTelaCheiaEquipamentoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarCampanhas;
    private javax.swing.JButton btnAtualizarEquipamento;
    public static javax.swing.JButton btnCampanha;
    public static javax.swing.JButton btnCancelarCampanha;
    private javax.swing.JButton btnCancelarPrioridade;
    private javax.swing.JButton btnDescerCampanha;
    private javax.swing.JButton btnEmailCampanhas;
    private javax.swing.JButton btnEmailStatusEquipamento;
    private javax.swing.JButton btnImprimirCampanhas;
    private javax.swing.JButton btnImprimirStatusEquipamento;
    public static javax.swing.JButton btnLotesEquipamento;
    public static javax.swing.JButton btnLotesPreparo;
    public static javax.swing.JButton btnNovoCampanha;
    public static javax.swing.JButton btnPassagemTurno;
    public static javax.swing.JButton btnPrioridadesCampanha;
    private javax.swing.JButton btnSalvarPrioridade;
    private javax.swing.JButton btnSubirCampanha;
    private javax.swing.JButton btnTelaCheiaCampanhas;
    private javax.swing.JButton btnTelaCheiaEquipamento;
    private javax.swing.JComboBox cmbCampoPesquisar;
    private javax.swing.JComboBox cmbPesquisarSetorCampanhas;
    private javax.swing.JComboBox cmbPesquisarSetorEquipamento;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator15;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JPanel pnlEquipamentos;
    private javax.swing.JPanel pnlLotesPreparo;
    private javax.swing.JTabbedPane pnlProgramacao;
    private javax.swing.JScrollPane pnlProgramacaoCromatografos;
    private javax.swing.JPanel pnlProximasCampanhas;
    private javax.swing.JTable tblCampanhas;
    private javax.swing.JTable tblProgramacaoCromatografos;
    private javax.swing.JTextField txtPesquisarCampanhas;
    // End of variables declaration//GEN-END:variables

    private void readStatusEquipamento() {
        try {
            GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
            DefaultTableModel model = (DefaultTableModel) tblProgramacaoCromatografos.getModel();
            tblProgramacaoCromatografos.setDefaultRenderer(Object.class, r);
            CromatografoDAO equipDao = new CromatografoDAO();
            String setor = cmbPesquisarSetorEquipamento.getSelectedItem().toString();
            model.setNumRows(0);
            for (Cromatografo equip : equipDao.readProgramacaoCromatografo(setor)) {
                model.addRow(new Object[]{
                    equip.getAnalise().getCor(),
                    equip.getLog_cromatografo_id(),
                    equip.getSystem_name(),
                    equip.getSetor().getSigla_setor(),
                    equip.getCampanha().getNome_campanha(),
                    equip.getAnalise().getAnalise_status()
                    + " - " + equip.getDescricao(),
                    DataHora.getStringDateTime(equip.getData_registro()),
                    equip.getUsuario().getUser()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void iniciarContagem() {
        ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                readStatusEquipamento();
                readCampanhas();
            }
        };
        this.timer = new Timer(30000, action);
        this.timer.start();
    }

    public final void readSetorPesquisar() {
        cmbPesquisarSetorEquipamento.removeAllItems();
        cmbPesquisarSetorCampanhas.removeAllItems();
        cmbPesquisarSetorEquipamento.addItem("Todos");
        cmbPesquisarSetorCampanhas.addItem("Todos");
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            if (setor.getSigla_setor().startsWith("HPLC") || setor.getSigla_setor().startsWith("CG")) {
                String name = setor.getSigla_setor();
                cmbPesquisarSetorEquipamento.addItem(name);
                cmbPesquisarSetorCampanhas.addItem(name);
            }
        }
    }

    private void readCampanhas() {
        try {
            GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
            DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
            tblCampanhas.setDefaultRenderer(Object.class, r);
            CampanhaDAO campDao = new CampanhaDAO();
            model.setNumRows(0);
            String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
            String campo = cmbCampoPesquisar.getSelectedItem().toString();
            String texto = txtPesquisarCampanhas.getText().trim();
            for (Campanha camp : campDao.selectCampanhaProgramacao(setor, campo, texto)) {
                model.addRow(new Object[]{
                    camp.getCor() == null ? "" : camp.getCor(),
                    camp.getOrdem(),
                    camp.getLog_campanha_id(),
                    camp.getNome_campanha(),
                    camp.getAnalise().getAnalise(),
                    camp.getCromatografo().getSystem_name(),
                    camp.getSetor().getSigla_setor(),
                    DataHora.getStringDateTime(camp.getPrevisao()),
                    camp.getObs_campanha()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void atualizarDadosPrioridade(List lista) {
        ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
        if (Acesso.verificarAtualizarDados()) {
            CampanhaDAO campDao = new CampanhaDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente Deseja Editar a Tabela de Prioridades?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    frmSalvar.setVisible(true);
                    if (FrmSalvar.senha()) {
                        campDao.updateOrdemPrioreidade(lista);
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                readCampanhas();
            }
        }
    }

    private void deletarDados(int id) {
        ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
        if (Acesso.verificarDeletarDados()) {
            Campanha camp = new Campanha();
            CampanhaDAO campDao = new CampanhaDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente Deseja Excluir Essa Campanha?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    camp.setLog_campanha_id(id);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    frmSalvar.setVisible(true);
                    if (FrmSalvar.senha()) {
                        campDao.deleteCampanha(camp);
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                readCampanhas();
            }
        }
    }

    private void fecharPrioridade() {
        btnSubirCampanha.setVisible(false);
        btnDescerCampanha.setVisible(false);
        btnSalvarPrioridade.setVisible(false);
        btnCancelarPrioridade.setVisible(false);
        btnAtualizarCampanhas.setEnabled(true);
        btnCancelarCampanha.setEnabled(true);
        btnNovoCampanha.setEnabled(true);
        ProgramacaoCromatografoAcesso Acesso = new ProgramacaoCromatografoAcesso();
        Acesso.verificarAcessoProgramacaoCromatografo();
    }

    private void abrirPrioridade() {
        btnSubirCampanha.setVisible(true);
        btnDescerCampanha.setVisible(true);
        btnSalvarPrioridade.setVisible(true);
        btnCancelarPrioridade.setVisible(true);
        btnAtualizarCampanhas.setEnabled(false);
        btnCancelarCampanha.setEnabled(false);
        btnNovoCampanha.setEnabled(false);
    }

    public void selecaoTabela(JTable tbl) {
        if (tbl.getRowCount() > 0) {
            int selectedRow = tbl.getSelectedRow() + 1;
            int inferior = 1;
            int superior = 1;
            for (int i = 0; i < tbl.getRowCount(); i++) {
                superior = i + 1;
            }
            if (inferior == tbl.getRowCount()) {
                btnSubirCampanha.setEnabled(false);
                btnDescerCampanha.setEnabled(false);
            } else {
                if (selectedRow == inferior) {
                    btnSubirCampanha.setEnabled(false);
                    btnDescerCampanha.setEnabled(true);
                } else {
                    if (selectedRow == superior) {
                        btnDescerCampanha.setEnabled(false);
                        btnSubirCampanha.setEnabled(true);
                    } else {
                        btnSubirCampanha.setEnabled(true);
                        btnDescerCampanha.setEnabled(true);
                    }
                }
            }
        }
    }
}
