/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frm.Cadastro;

import Classes.DAO.MetodologiaDAO;
import Classes.Acesso.RegistroAcompanhamentoAcesso;
import Classes.DAO.AcompanhamentoDAO;
import Classes.DAO.SetorDAO;
import Classes.Modelo.Acompanhamento;
import Classes.Modelo.Metodologia;
import Classes.Modelo.Setor;
import Classes.Util.ComboBox;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.RowFilter;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public class FrmRegistroAcompanhamento extends javax.swing.JInternalFrame {

    private TreeMap<Integer, String> categoryMapMetodo = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapSetor = new TreeMap<>();
    private boolean novoRA = false;

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmRegistroAcompanhamento() {
        initComponents();
        setTitle("Registro de Acompanhamento");
        readRA();
        tblPaneProduto.setEnabledAt(1, false);
        RegistroAcompanhamentoAcesso Acesso = new RegistroAcompanhamentoAcesso();
        Acesso.verificarAcessoProduto();
        SpinnerNumberModel modelHora = new SpinnerNumberModel(0, 0, 100, 1);
        txtVersao.setModel(modelHora);
        JSpinner.NumberEditor editorHora = new JSpinner.NumberEditor(txtVersao);
        txtVersao.setEditor(editorHora);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tblPaneProduto = new javax.swing.JTabbedPane();
        pnProduto = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegistroAcompanhamento = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pnlDados = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cmbMetodo = new javax.swing.JComboBox();
        btnProcurarMetodo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtVersao = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();
        txtRegistroAcompanhamento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        cmbCategoria = new javax.swing.JComboBox();
        btnExcluirRA = new javax.swing.JButton();
        btnSalvarRA = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArquivo = new javax.swing.JMenu();
        mnuNovoRA = new javax.swing.JMenu();
        itmNovoRA = new javax.swing.JMenuItem();
        mnuSair = new javax.swing.JMenuItem();
        mnuEditRA = new javax.swing.JMenu();
        itmEditarRA = new javax.swing.JMenuItem();
        itmExcluirRA = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("R.A's"));

        tblRegistroAcompanhamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Registro de Acompanhamento", "Método", "Setor", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRegistroAcompanhamento.setSurrendersFocusOnKeystroke(true);
        tblRegistroAcompanhamento.getTableHeader().setReorderingAllowed(false);
        tblRegistroAcompanhamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRegistroAcompanhamentoMouseClicked(evt);
            }
        });
        tblRegistroAcompanhamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblRegistroAcompanhamentoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblRegistroAcompanhamento);
        if (tblRegistroAcompanhamento.getColumnModel().getColumnCount() > 0) {
            tblRegistroAcompanhamento.getColumnModel().getColumn(0).setMinWidth(50);
            tblRegistroAcompanhamento.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblRegistroAcompanhamento.getColumnModel().getColumn(0).setMaxWidth(80);
            tblRegistroAcompanhamento.getColumnModel().getColumn(2).setMinWidth(120);
            tblRegistroAcompanhamento.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblRegistroAcompanhamento.getColumnModel().getColumn(2).setMaxWidth(120);
            tblRegistroAcompanhamento.getColumnModel().getColumn(3).setMinWidth(100);
            tblRegistroAcompanhamento.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblRegistroAcompanhamento.getColumnModel().getColumn(3).setMaxWidth(100);
            tblRegistroAcompanhamento.getColumnModel().getColumn(4).setMinWidth(80);
            tblRegistroAcompanhamento.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblRegistroAcompanhamento.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
        );

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        javax.swing.GroupLayout pnProdutoLayout = new javax.swing.GroupLayout(pnProduto);
        pnProduto.setLayout(pnProdutoLayout);
        pnProdutoLayout.setHorizontalGroup(
            pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnProdutoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnProdutoLayout.setVerticalGroup(
            pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblPaneProduto.addTab("Acompanhamentos", pnProduto);

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        jLabel7.setText("Id:");

        jLabel22.setText("Método:");

        btnProcurarMetodo.setText("Buscar");
        btnProcurarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodoActionPerformed(evt);
            }
        });

        jLabel6.setText("Categoria:");

        jLabel8.setText("Versão");

        jLabel3.setText("Setor:");

        jLabel5.setText("Descrição RA:");

        jLabel9.setText("Documento:");

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Registro de Acompanhamento de Semi-acabado", "Registro de Acompanhamento de Produto Acabado", "Registro de Acompanhamento de Matéria-Prima", "Registro de Acompanhamento de Material de Embalagem", "Registro de Acompanhamento" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblId)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtRegistroAcompanhamento)
                    .addComponent(cmbSetor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(cmbMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(txtVersao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRegistroAcompanhamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(btnProcurarMetodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnExcluirRA.setText("Excuir");
        btnExcluirRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirRAActionPerformed(evt);
            }
        });

        btnSalvarRA.setText("Ok");
        btnSalvarRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarRAActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                        .addComponent(btnExcluirRA, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 509, Short.MAX_VALUE)
                        .addComponent(btnSalvarRA, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvarRA)
                    .addComponent(btnExcluirRA))
                .addContainerGap())
        );

        tblPaneProduto.addTab("Dados", pnlDados);

        getContentPane().add(tblPaneProduto);

        mnuArquivo.setText("Arquivo");

        mnuNovoRA.setText("Novo");

        itmNovoRA.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.ALT_MASK));
        itmNovoRA.setText("R.A");
        itmNovoRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNovoRAActionPerformed(evt);
            }
        });
        mnuNovoRA.add(itmNovoRA);

        mnuArquivo.add(mnuNovoRA);

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.SHIFT_MASK));
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        mnuArquivo.add(mnuSair);

        jMenuBar1.add(mnuArquivo);

        mnuEditRA.setText("Editar");

        itmEditarRA.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK));
        itmEditarRA.setText("Editar");
        itmEditarRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEditarRAActionPerformed(evt);
            }
        });
        mnuEditRA.add(itmEditarRA);

        itmExcluirRA.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.ALT_MASK));
        itmExcluirRA.setText("Excluir");
        itmExcluirRA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirRAActionPerformed(evt);
            }
        });
        mnuEditRA.add(itmExcluirRA);

        jMenuBar1.add(mnuEditRA);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmNovoRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNovoRAActionPerformed
        abrirDados();
    }//GEN-LAST:event_itmNovoRAActionPerformed

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        dispose();
    }//GEN-LAST:event_mnuSairActionPerformed

    private void itmEditarRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEditarRAActionPerformed
        if (tblRegistroAcompanhamento.getSelectedRow() != -1) {
            carregarDados((Integer) tblRegistroAcompanhamento.getValueAt(tblRegistroAcompanhamento.getSelectedRow(), 0));
            novoRA = false;
        }
    }//GEN-LAST:event_itmEditarRAActionPerformed

    private void itmExcluirRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirRAActionPerformed
        if (tblRegistroAcompanhamento.getSelectedRow() != -1) {
            deletarProduto((Integer) tblRegistroAcompanhamento.getValueAt(tblRegistroAcompanhamento.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_itmExcluirRAActionPerformed

    private void tblRegistroAcompanhamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRegistroAcompanhamentoMouseClicked
        if (evt.getClickCount() == 2) {
            carregarDados((Integer) tblRegistroAcompanhamento.getValueAt(tblRegistroAcompanhamento.getSelectedRow(), 0));
            novoRA = false;
        }
    }//GEN-LAST:event_tblRegistroAcompanhamentoMouseClicked

    private void tblRegistroAcompanhamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblRegistroAcompanhamentoKeyReleased
        if (tblRegistroAcompanhamento.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletarProduto((Integer) tblRegistroAcompanhamento.getValueAt(tblRegistroAcompanhamento.getSelectedRow(), 0));
            }
        }
    }//GEN-LAST:event_tblRegistroAcompanhamentoKeyReleased

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblRegistroAcompanhamento.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblRegistroAcompanhamento.setRowSorter(sorter);
        String text = txtPesquisar.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnExcluirRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirRAActionPerformed
        deletarProduto((Integer) tblRegistroAcompanhamento.getValueAt(tblRegistroAcompanhamento.getSelectedRow(), 0));
    }//GEN-LAST:event_btnExcluirRAActionPerformed

    private void btnSalvarRAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarRAActionPerformed
        if (txtDocumento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Código do RA inválido");
            txtDocumento.requestFocus();
        } else if (txtRegistroAcompanhamento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Descrição do Registro de Acompanhamento inválida");
            txtRegistroAcompanhamento.requestFocus();
        } else if (cmbCategoria.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Categoria inválida");
            cmbCategoria.requestFocus();
        } else if (((Integer) txtVersao.getValue()) < 0) {
            JOptionPane.showMessageDialog(null, "Versão inválido");
            txtVersao.requestFocus();
        } else if (cmbMetodo.getSelectedItem().toString().isEmpty() || cmbMetodo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Metodologia inválida");
            cmbMetodo.requestFocus();
        } else if (cmbSetor.getSelectedItem().toString().isEmpty() || cmbSetor.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Setor inválido");
            cmbSetor.requestFocus();
        } else if (novoRA) {
            criarRA();
        } else {
            atulizarRA();
        }
    }//GEN-LAST:event_btnSalvarRAActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fecharDados();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnProcurarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodoActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        readMetodo();
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo.setSelectedItem(cod_mtd[0]);
    }//GEN-LAST:event_btnProcurarMetodoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnExcluirRA;
    private javax.swing.JButton btnProcurarMetodo;
    public static javax.swing.JButton btnSalvarRA;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JComboBox cmbMetodo;
    private javax.swing.JComboBox cmbSetor;
    public static javax.swing.JMenuItem itmEditarRA;
    public static javax.swing.JMenuItem itmExcluirRA;
    public static javax.swing.JMenuItem itmNovoRA;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JMenu mnuArquivo;
    public static javax.swing.JMenu mnuEditRA;
    public static javax.swing.JMenu mnuNovoRA;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JPanel pnProduto;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JTabbedPane tblPaneProduto;
    private javax.swing.JTable tblRegistroAcompanhamento;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtRegistroAcompanhamento;
    private javax.swing.JSpinner txtVersao;
    // End of variables declaration//GEN-END:variables

    public final void readRA() {
        DefaultTableModel model = (DefaultTableModel) tblRegistroAcompanhamento.getModel();
        AcompanhamentoDAO acompDao = new AcompanhamentoDAO();
        model.setNumRows(0);
        for (Acompanhamento acomp : acompDao.readAcompanhamento()) {
            model.addRow(new Object[]{
                acomp.getRegistro_acompanhamento_id(),
                acomp.getRegistro_acompanhamento(),
                acomp.getMetodo().getCod_metodo(),
                acomp.getSetor().getSigla_setor(),
                acomp.getVersao()
            });
        }
    }

    public void readMetodo() {
        cmbMetodo.removeAllItems();
        cmbMetodo.addItem("");
        categoryMapMetodo.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.readMetodologia()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo.addItem(name);
            categoryMapMetodo.put(id, name);
        }
    }

    public final void readSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            Integer id = setor.getSetor_id();
            String name = setor.getSetor();
            cmbSetor.addItem(name);
            categoryMapSetor.put(id, name);
        }
    }

    private void limparCampos() {
        txtDocumento.setText(null);
        txtRegistroAcompanhamento.setText(null);
        cmbCategoria.setSelectedIndex(0);
        txtVersao.setValue(0);
        lblId.setText(null);
    }

    private void criarRA() {
        Acompanhamento acomp = new Acompanhamento();
        AcompanhamentoDAO acompDao = new AcompanhamentoDAO();
        Metodologia mtd = new Metodologia();
        Setor setor = new Setor();
        try {
            acomp.setSigla_registro_acompanhamento(txtDocumento.getText().toUpperCase());
            acomp.setRegistro_acompanhamento(txtRegistroAcompanhamento.getText().toUpperCase());
            acomp.setCategoria(cmbCategoria.getSelectedItem().toString());
            acomp.setVersao((Integer) txtVersao.getValue());
            mtd.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo.getSelectedItem().toString(), categoryMapMetodo));
            acomp.setMetodo(mtd);
            setor.setSetor_id(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor));
            acomp.setSetor(setor);
            acompDao.createAcompanhamento(acomp);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        } finally {
            fecharDados();
        }
    }

    private void fecharDados() {
        tblPaneProduto.setEnabledAt(0, true);
        tblPaneProduto.setEnabledAt(1, false);
        tblPaneProduto.setSelectedIndex(0);
        txtPesquisar.setText(null);
        tblRegistroAcompanhamento.setRowSorter(null);
        RegistroAcompanhamentoAcesso Acesso = new RegistroAcompanhamentoAcesso();
        Acesso.verificarAcessoProduto();
        limparCampos();
        readRA();
    }

    private void abrirDados() {
        RegistroAcompanhamentoAcesso Acesso = new RegistroAcompanhamentoAcesso();
        if (Acesso.verificarAbrirDadosProduto()) {
            tblPaneProduto.setEnabledAt(0, false);
            tblPaneProduto.setEnabledAt(1, true);
            tblPaneProduto.setSelectedIndex(1);
            mnuNovoRA.setEnabled(false);
            mnuEditRA.setEnabled(false);
            btnExcluirRA.setVisible(false);
            limparCampos();
            novoRA = true;
            readMetodo();
            readSetor();
        }
    }

    private void carregarDados(int id) {
        RegistroAcompanhamentoAcesso Acesso = new RegistroAcompanhamentoAcesso();
        if (Acesso.verificarCarregarDadosProduto()) {
            readMetodo();
            readSetor();
            Acompanhamento acomp = new Acompanhamento();
            acomp.setRegistro_acompanhamento_id(id);
            AcompanhamentoDAO acompDao = new AcompanhamentoDAO();
            acompDao.selectAcompanhamento(acomp);
            lblId.setText(Integer.toString(id));
            String[] categoria = {acomp.getCategoria()};
            cmbCategoria.setSelectedItem(categoria[0]);
            txtVersao.setValue(acomp.getVersao());
            String[] setor = {acomp.getSetor().getSetor()};
            cmbSetor.setSelectedItem(setor[0]);
            String[] metodo = {acomp.getMetodo().getCod_metodo()};
            cmbMetodo.setSelectedItem(metodo[0]);
            txtDocumento.setText(acomp.getSigla_registro_acompanhamento());
            txtRegistroAcompanhamento.setText(acomp.getRegistro_acompanhamento());
            tblPaneProduto.setEnabledAt(0, false);
            tblPaneProduto.setEnabledAt(1, true);
            tblPaneProduto.setSelectedIndex(1);
            btnExcluirRA.setVisible(true);
            mnuEditRA.setEnabled(false);
        }
    }

    private void atulizarRA() {
        Acompanhamento acomp = new Acompanhamento();
        AcompanhamentoDAO acompDao = new AcompanhamentoDAO();
        Metodologia mtd = new Metodologia();
        Setor setor = new Setor();
        try {
            acomp.setRegistro_acompanhamento_id(Integer.parseInt(lblId.getText()));
            acomp.setSigla_registro_acompanhamento(txtDocumento.getText().toUpperCase());
            acomp.setRegistro_acompanhamento(txtRegistroAcompanhamento.getText().toUpperCase());
            acomp.setCategoria(cmbCategoria.getSelectedItem().toString());
            acomp.setVersao((Integer) txtVersao.getValue());
            mtd.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo.getSelectedItem().toString(), categoryMapMetodo));
            acomp.setMetodo(mtd);
            setor.setSetor_id(ComboBox.getKeyForValue(cmbMetodo.getSelectedItem().toString(), categoryMapMetodo));
            acomp.setSetor(setor);
            acompDao.updateAcompanhamento(acomp);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        } finally {
            fecharDados();
        }
    }

    private void deletarProduto(int id) {
        RegistroAcompanhamentoAcesso Acesso = new RegistroAcompanhamentoAcesso();
        if (Acesso.verificarDeletarDadosProduto()) {
            Acompanhamento acomp = new Acompanhamento();
            AcompanhamentoDAO acompDao = new AcompanhamentoDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente Deseja Excluir Esse R.A?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    acomp.setRegistro_acompanhamento_id(id);
                    acompDao.deleteAcompanhamento(acomp);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                fecharDados();
            }
        }
    }

}
