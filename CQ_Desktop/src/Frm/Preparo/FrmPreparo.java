/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Preparo;

import Classes.DAO.AtividadePreparoDAO;
import Classes.Acesso.AtividadePreparoAcesso;
import Classes.Modelo.AtividadePreparo;
import Classes.Util.DataHora;
import Frm.Login.FrmSalvar;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael.lopes
 */
public class FrmPreparo extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmPreparo
     */
    public FrmPreparo() {
        initComponents();
        readAtividadePreparo();
        setTitle("Atividades de Preparo");
        AtividadePreparoAcesso Acesso = new AtividadePreparoAcesso();
        Acesso.verificarAcessoPreparo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnMultiplasAnalises = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnMultiplosLotes = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnSolucoes = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnSystem = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnOutros = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnImprimirAtividades = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnExcluirAtividades = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAtividadePreparo = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmbPesquisarStatus = new javax.swing.JComboBox<String>();
        jLabel11 = new javax.swing.JLabel();
        cmbLimitPesquisarLotes = new javax.swing.JComboBox<String>();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnMultiplasAnalises.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_analises.png"))); // NOI18N
        btnMultiplasAnalises.setText("Multiplas Análises");
        btnMultiplasAnalises.setFocusable(false);
        btnMultiplasAnalises.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMultiplasAnalises.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMultiplasAnalises.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplasAnalisesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMultiplasAnalises);
        jToolBar1.add(jSeparator6);

        btnMultiplosLotes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_lotes.png"))); // NOI18N
        btnMultiplosLotes.setText("Multiplos Lotes");
        btnMultiplosLotes.setFocusable(false);
        btnMultiplosLotes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMultiplosLotes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMultiplosLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplosLotesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMultiplosLotes);
        jToolBar1.add(jSeparator1);

        btnSolucoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_solucoes.png"))); // NOI18N
        btnSolucoes.setText("Soluções");
        btnSolucoes.setFocusable(false);
        btnSolucoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSolucoes.setPreferredSize(new java.awt.Dimension(60, 60));
        btnSolucoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSolucoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolucoesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSolucoes);
        jToolBar1.add(jSeparator2);

        btnSystem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_system.png"))); // NOI18N
        btnSystem.setText("System");
        btnSystem.setFocusable(false);
        btnSystem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSystem.setPreferredSize(new java.awt.Dimension(60, 60));
        btnSystem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSystemActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSystem);
        jToolBar1.add(jSeparator3);

        btnOutros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_outros.png"))); // NOI18N
        btnOutros.setText("Outros");
        btnOutros.setFocusable(false);
        btnOutros.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOutros.setPreferredSize(new java.awt.Dimension(60, 60));
        btnOutros.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutrosActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOutros);
        jToolBar1.add(jSeparator5);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator8);

        btnImprimirAtividades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirAtividades.setText("Relatórios");
        btnImprimirAtividades.setFocusable(false);
        btnImprimirAtividades.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimirAtividades.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimirAtividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirAtividadesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimirAtividades);
        jToolBar1.add(jSeparator7);

        btnExcluirAtividades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_close.png"))); // NOI18N
        btnExcluirAtividades.setText("Excluir");
        btnExcluirAtividades.setFocusable(false);
        btnExcluirAtividades.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluirAtividades.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluirAtividades.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluirAtividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirAtividadesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluirAtividades);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Atividades"));

        tblAtividadePreparo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Início", "Fim", "Descrição", "Lote", "Metodo", "Equipamento", "Qtd", "Data Registro", "Observação", "Retrabalho", "categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAtividadePreparo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblAtividadePreparo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAtividadePreparoMouseClicked(evt);
            }
        });
        tblAtividadePreparo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblAtividadePreparoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblAtividadePreparo);
        if (tblAtividadePreparo.getColumnModel().getColumnCount() > 0) {
            tblAtividadePreparo.getColumnModel().getColumn(0).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblAtividadePreparo.getColumnModel().getColumn(1).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblAtividadePreparo.getColumnModel().getColumn(2).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblAtividadePreparo.getColumnModel().getColumn(3).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(3).setPreferredWidth(550);
            tblAtividadePreparo.getColumnModel().getColumn(4).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblAtividadePreparo.getColumnModel().getColumn(5).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(5).setPreferredWidth(600);
            tblAtividadePreparo.getColumnModel().getColumn(6).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblAtividadePreparo.getColumnModel().getColumn(7).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(7).setPreferredWidth(50);
            tblAtividadePreparo.getColumnModel().getColumn(8).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(8).setPreferredWidth(160);
            tblAtividadePreparo.getColumnModel().getColumn(9).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(9).setPreferredWidth(300);
            tblAtividadePreparo.getColumnModel().getColumn(10).setResizable(false);
            tblAtividadePreparo.getColumnModel().getColumn(10).setPreferredWidth(80);
            tblAtividadePreparo.getColumnModel().getColumn(11).setMinWidth(0);
            tblAtividadePreparo.getColumnModel().getColumn(11).setPreferredWidth(0);
            tblAtividadePreparo.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel1.setText("Pesquisar:");

        jLabel13.setText("Status:");

        cmbPesquisarStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Pendentes", "Finalizados" }));
        cmbPesquisarStatus.setSelectedIndex(1);
        cmbPesquisarStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarStatusItemStateChanged(evt);
            }
        });

        jLabel11.setText("Visualizar:");

        cmbLimitPesquisarLotes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "1000", "10000", "100000" }));
        cmbLimitPesquisarLotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLimitPesquisarLotesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(5, 5, 5)
                .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbLimitPesquisarLotes, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cmbLimitPesquisarLotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMultiplasAnalisesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplasAnalisesActionPerformed
        FrmAnalisePorLote frm = new FrmAnalisePorLote(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnMultiplasAnalisesActionPerformed

    private void btnSolucoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolucoesActionPerformed
        FrmSolucaoPreparo frm = new FrmSolucaoPreparo(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnSolucoesActionPerformed

    private void btnSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSystemActionPerformed
        FrmSystemPreparo frm = new FrmSystemPreparo(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnSystemActionPerformed

    private void btnOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutrosActionPerformed
        FrmAtividadeGeralPreparo frm = new FrmAtividadeGeralPreparo(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnOutrosActionPerformed

    private void tblAtividadePreparoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAtividadePreparoMouseClicked
        if (evt.getClickCount() == 2) {
            carregarDados();
        }
    }//GEN-LAST:event_tblAtividadePreparoMouseClicked

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void tblAtividadePreparoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAtividadePreparoKeyPressed
        if (tblAtividadePreparo.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletarDados((Integer) tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 0));
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                readAtividadePreparo();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_tblAtividadePreparoKeyPressed

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblAtividadePreparo.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblAtividadePreparo.setRowSorter(sorter);
        String text = txtPesquisar.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnMultiplosLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplosLotesActionPerformed
        FrmLotePorAnalise frm = new FrmLotePorAnalise(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnMultiplosLotesActionPerformed

    private void cmbPesquisarStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarStatusItemStateChanged
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readAtividadePreparo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbPesquisarStatusItemStateChanged

    private void btnExcluirAtividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirAtividadesActionPerformed
        if (tblAtividadePreparo.getSelectedRow() != -1) {
            deletarDados((Integer) tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 0));
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            readAtividadePreparo();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnExcluirAtividadesActionPerformed

    private void btnImprimirAtividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirAtividadesActionPerformed
        FrmImprimirPreparo frm = new FrmImprimirPreparo(null, true);
        frm.setVisible(true);
    }//GEN-LAST:event_btnImprimirAtividadesActionPerformed

    private void cmbLimitPesquisarLotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLimitPesquisarLotesActionPerformed
        readAtividadePreparo();
    }//GEN-LAST:event_cmbLimitPesquisarLotesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnExcluirAtividades;
    public static javax.swing.JButton btnImprimirAtividades;
    private javax.swing.JButton btnMultiplasAnalises;
    private javax.swing.JButton btnMultiplosLotes;
    private javax.swing.JButton btnOutros;
    private javax.swing.JButton btnSolucoes;
    private javax.swing.JButton btnSystem;
    private javax.swing.JComboBox<String> cmbLimitPesquisarLotes;
    private javax.swing.JComboBox<String> cmbPesquisarStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblAtividadePreparo;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables

    private void readAtividadePreparo() {
        DefaultTableModel model = (DefaultTableModel) tblAtividadePreparo.getModel();
        AtividadePreparoDAO atvprepDao = new AtividadePreparoDAO();
        model.setNumRows(0);
        Integer status = cmbPesquisarStatus.getSelectedIndex();
        Integer limit = Integer.valueOf(cmbLimitPesquisarLotes.getSelectedItem().toString());
        for (AtividadePreparo atvprep : atvprepDao.readAtividade(status, limit)) {
            model.addRow(new Object[]{
                atvprep.getAtividade_preparo_id(),
                DataHora.getStringDateTime(atvprep.getData_hora_inicio())
                + (atvprep.getUser_inicio().getUser() == null ? "" : " - " + atvprep.getUser_inicio().getUser()),
                DataHora.getStringDateTime(atvprep.getData_hora_fim())
                + (atvprep.getUser_fim().getUser() == null ? "" : " - " + atvprep.getUser_fim().getUser()),
                (atvprep.getAnalise().getAnalise() == null ? "" : atvprep.getAnalise().getAnalise() + "   ")
                + (atvprep.getTipo_preparo() == null ? "" : atvprep.getTipo_preparo() + " - ")
                + (atvprep.getDescricao_preparo() == null ? "" : atvprep.getDescricao_preparo()),
                atvprep.getLote_preparo(),
                ((atvprep.getMetodologia().getMetodo_id() == 0) ? "MULTIPROPÓSITO"
                : atvprep.getMetodologia().getCod_metodo() + " - "
                + (atvprep.getMetodologia().getMetodo() == null ? "" : atvprep.getMetodologia().getMetodo())),
                atvprep.getCromatografo().getSystem_name(),
                atvprep.getQtd_preparo(),
                DataHora.getStringDateTime(atvprep.getData_hora_registro()),
                atvprep.getObs_preparo(),
                atvprep.getRetrabalho_preparo(),
                atvprep.getCategoria_preparo()
            });
        }
    }

    private void deletarDados(int id) {
        AtividadePreparoAcesso Acesso = new AtividadePreparoAcesso();
        if (Acesso.verificarDeletarDadosPreparo()) {
            AtividadePreparo atvprep = new AtividadePreparo();
            AtividadePreparoDAO atvprepDAO = new AtividadePreparoDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente Deseja Excluir Essa Atividade?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    atvprep.setAtividade_preparo_id(id);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    frmSalvar.setVisible(true);
                    if (FrmSalvar.senha()) {
                        atvprepDAO.deleteAtividade(atvprep);
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                readAtividadePreparo();
            }
        }
    }

    private void carregarDados() {
        AtividadePreparoAcesso Acesso = new AtividadePreparoAcesso();
        if (Acesso.verificarCarregarDadosPreparo()) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            int id = (Integer) tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 0);
            if (("Análise").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                FrmAnalisePorLote frm = new FrmAnalisePorLote(null, true, id, false);
                frm.setVisible(true);
                readAtividadePreparo();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            if (("Soluções Reagentes").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                FrmSolucaoPreparo frm = new FrmSolucaoPreparo(null, true, id, false);
                frm.setVisible(true);
                readAtividadePreparo();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            if (("System Suitability").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                FrmSystemPreparo frm = new FrmSystemPreparo(null, true, id, false);
                frm.setVisible(true);
                readAtividadePreparo();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            if (("Atividade Geral").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                FrmAtividadeGeralPreparo frm = new FrmAtividadeGeralPreparo(null, true, id, false);
                frm.setVisible(true);
                readAtividadePreparo();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        } else {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            int id = (Integer) tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 0);
            if (("Análise").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                if (!(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 2).toString().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Análise já foi finalizada!");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    FrmAnalisePorLote frm = new FrmAnalisePorLote(null, true, id, false);
                    frm.setVisible(true);
                    readAtividadePreparo();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
            if (("Soluções Reagentes").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                if (!(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 2).toString().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Solução Reagente já foi finalizada!");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    FrmSolucaoPreparo frm = new FrmSolucaoPreparo(null, true, id, false);
                    frm.setVisible(true);
                    readAtividadePreparo();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
            if (("System Suitability").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                if (!(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 2).toString().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "System Suitability já foi finalizado!");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    FrmSystemPreparo frm = new FrmSystemPreparo(null, true, id, false);
                    frm.setVisible(true);
                    readAtividadePreparo();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
            if (("Atividade Geral").equals(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 11).toString())) {
                if (!(tblAtividadePreparo.getValueAt(tblAtividadePreparo.getSelectedRow(), 2).toString().isEmpty())) {
                    JOptionPane.showMessageDialog(null, "Atividade Geral já foi finalizada!");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    FrmAtividadeGeralPreparo frm = new FrmAtividadeGeralPreparo(null, true, id, false);
                    frm.setVisible(true);
                    readAtividadePreparo();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        }
    }

}
