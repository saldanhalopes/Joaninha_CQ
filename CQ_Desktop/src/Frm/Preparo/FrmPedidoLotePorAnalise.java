/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Preparo;

import Classes.DAO.AnaliseDAO;
import Classes.DAO.AtividadePreparoDAO;
import Classes.DAO.CromatografoDAO;
import Classes.Modelo.Analise;
import Classes.Modelo.AtividadePreparo;
import Classes.Modelo.Cromatografo;
import Classes.Modelo.Lote;
import Classes.Modelo.Metodologia;
import Classes.Modelo.Usuario;
import Classes.Util.ComboBox;
import Classes.Util.DataHora;
import Frm.Login.FrmUsuarioSalvar;
import Frm.Recepcao.FrmProcurarLote;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmPedidoLotePorAnalise extends javax.swing.JDialog {

    private TreeMap<Integer, String> categoryMapAnalise = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapEquipamento = new TreeMap<>();

    /**
     * Creates new form FrmNovoRegistroCromatografo
     *
     * @param parent
     * @param modal
     */
    public FrmPedidoLotePorAnalise(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Preparo Amostras");
        readAnalise();
        readEquipamento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDados = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLotes = new javax.swing.JTable();
        btnAdicionarLote = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cmbAnalise = new javax.swing.JComboBox();
        btnRemoverLote = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        ckbRetrabalho = new javax.swing.JCheckBox();
        jLabel25 = new javax.swing.JLabel();
        cmbEquipamento = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Lote", "Método", "metod_id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLotes.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblLotes);
        if (tblLotes.getColumnModel().getColumnCount() > 0) {
            tblLotes.getColumnModel().getColumn(0).setMinWidth(0);
            tblLotes.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblLotes.getColumnModel().getColumn(0).setMaxWidth(0);
            tblLotes.getColumnModel().getColumn(2).setMinWidth(120);
            tblLotes.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblLotes.getColumnModel().getColumn(2).setMaxWidth(120);
            tblLotes.getColumnModel().getColumn(3).setMinWidth(0);
            tblLotes.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblLotes.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        btnAdicionarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarLoteActionPerformed(evt);
            }
        });

        jLabel8.setText("Análise:");

        btnRemoverLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverLoteActionPerformed(evt);
            }
        });

        jLabel9.setText("Observação:");

        ckbRetrabalho.setText("Retrabalho");

        jLabel25.setText("Equipamento:");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbAnalise, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEquipamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ckbRetrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cmbEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbRetrabalho)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        getContentPane().add(pnlDados);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int rows = tblLotes.getRowCount();

        try {
            if (tblLotes.getRowCount() <= 0) {
                JOptionPane.showMessageDialog(null, "Selecione os Lotes!");
                tblLotes.requestFocus();
            } else if (cmbAnalise.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione a Análise!");
                cmbAnalise.requestFocus();
            } else {
                //Abre Dialog para savar
                Usuario user = new Usuario();
                FrmUsuarioSalvar frmSalvar = new FrmUsuarioSalvar(null, true, user);
                frmSalvar.setVisible(true);
                if (FrmUsuarioSalvar.senha()) {
                    for (int row = 0; row < rows; row++) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        criarAnalise(user, tblLotes.getValueAt(row, 1).toString(),
                                (Integer) tblLotes.getValueAt(row, 3));
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel salvar. Algum Campo está inválido!");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAdicionarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarLoteActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        List<Lote> prds = new ArrayList<>();
        FrmProcurarLote frm = new FrmProcurarLote(null, true, prds);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
        for (Lote lot : prds) {
            model.addRow(new Object[]{
                lot.getLote_id(),
                lot.getLote_produto(),
                lot.getMetodo().getCod_metodo(),
                (Integer)lot.getMetodo().getMetodo_id()
            });
        }
    }//GEN-LAST:event_btnAdicionarLoteActionPerformed

    private void btnRemoverLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverLoteActionPerformed
        if (tblLotes.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
            model.removeRow(tblLotes.getSelectedRow());
        }
    }//GEN-LAST:event_btnRemoverLoteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPedidoLotePorAnalise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPedidoLotePorAnalise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPedidoLotePorAnalise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPedidoLotePorAnalise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmPedidoLotePorAnalise dialog = new FrmPedidoLotePorAnalise(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarLote;
    public static javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRemoverLote;
    public static javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox ckbRetrabalho;
    private javax.swing.JComboBox cmbAnalise;
    private javax.swing.JComboBox cmbEquipamento;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JTable tblLotes;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

    public final void readAnalise() {
        cmbAnalise.removeAllItems();
        cmbAnalise.addItem("");
        categoryMapAnalise.clear();
        AnaliseDAO anlsDao = new AnaliseDAO();
        for (Analise anls : anlsDao.readAnalise()) {
            Integer id = anls.getAnalise_id();
            String name = anls.getAnalise();
            cmbAnalise.addItem(name);
            categoryMapAnalise.put(id, name);
        }
    }

    public final void readEquipamento() {
        cmbEquipamento.removeAllItems();
        cmbEquipamento.addItem("");
        categoryMapEquipamento.clear();
        CromatografoDAO equipDao = new CromatografoDAO();
        for (Cromatografo equip : equipDao.readCromatografo()) {
            Integer id = equip.getCromatografo_id();
            String name = equip.getSystem_name();
            cmbEquipamento.addItem(name);
            categoryMapEquipamento.put(id, name);
        }
    }

    private void criarAnalise(Usuario user, String lote, Integer metodo_id) {
        try {
            AtividadePreparo atvprep = new AtividadePreparo();
            AtividadePreparoDAO atvprepDAO = new AtividadePreparoDAO();
            Metodologia mtd = new Metodologia();
            Analise anls = new Analise();
            Cromatografo equip = new Cromatografo();
            atvprep.setCategoria_preparo("Análise");
            atvprep.setLote_preparo(lote);
            atvprep.setQtd_preparo(1.0);
            mtd.setMetodo_id(metodo_id);
            atvprep.setMetodologia(mtd);
            anls.setAnalise_id(ComboBox.getKeyForValue(cmbAnalise.getSelectedItem().toString(), categoryMapAnalise));
            atvprep.setAnalise(anls);
            atvprep.setData_hora_registro(DataHora.getTimestampDate(new Date()));
            atvprep.setUser_registro(user);
            if (cmbEquipamento.getSelectedItem() != null) {
                equip.setCromatografo_id(ComboBox.getKeyForValue(cmbEquipamento.getSelectedItem().toString(), categoryMapEquipamento));
            } else {
                equip.setCromatografo_id(0);
            }
            atvprep.setCromatografo(equip);
            atvprep.setRetrabalho_preparo(ckbRetrabalho.isSelected());
            atvprep.setObs_preparo(txtObs.getText().trim().toUpperCase());
            atvprepDAO.createPedido(atvprep);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

}
