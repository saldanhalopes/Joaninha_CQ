package Frm.Laboratorio;

import Classes.Acesso.MatrizTreinamentoAcesso;
import Classes.DAO.SetorDAO;
import Classes.DAO.TreinamentoDAO;
import Classes.Modelo.Setor;
import Classes.Modelo.Treinamento;
import Classes.Util.DataHora;
import Frm.Login.FrmSalvar;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public final class FrmMatrizTreinamento extends javax.swing.JInternalFrame {

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmMatrizTreinamento() {
        initComponents();
        setTitle("Matriz de Treinamentos");
        readTurno();
        readSetor();
        readTreinamento();
        MatrizTreinamentoAcesso Acesso = new MatrizTreinamentoAcesso();
        Acesso.verificarAcessoMatrizTreinamentoAcesso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnImprimir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPesquisarMetodologia = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTreinamentos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cmbTurno = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator6);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator8);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);
        jToolBar1.add(jSeparator2);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator7);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimir.setText("Relatórios");
        btnImprimir.setFocusable(false);
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimir);

        jLabel4.setText("Pesquisar:");

        txtPesquisarMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarMetodologiaKeyReleased(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Treinamentos"));

        tblTreinamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "metodo_id", "Treinamento", "Setor", "Turno", "Metodologia", "Atualizado por", "Data Atualização", "Vigente", "Colaboradores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTreinamentos.setRowHeight(20);
        tblTreinamentos.setSurrendersFocusOnKeystroke(true);
        tblTreinamentos.getTableHeader().setReorderingAllowed(false);
        tblTreinamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTreinamentosMouseClicked(evt);
            }
        });
        tblTreinamentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblTreinamentosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblTreinamentos);
        if (tblTreinamentos.getColumnModel().getColumnCount() > 0) {
            tblTreinamentos.getColumnModel().getColumn(0).setMinWidth(0);
            tblTreinamentos.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblTreinamentos.getColumnModel().getColumn(0).setMaxWidth(0);
            tblTreinamentos.getColumnModel().getColumn(1).setMinWidth(0);
            tblTreinamentos.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblTreinamentos.getColumnModel().getColumn(1).setMaxWidth(0);
            tblTreinamentos.getColumnModel().getColumn(2).setPreferredWidth(500);
            tblTreinamentos.getColumnModel().getColumn(3).setMinWidth(100);
            tblTreinamentos.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblTreinamentos.getColumnModel().getColumn(3).setMaxWidth(100);
            tblTreinamentos.getColumnModel().getColumn(4).setMinWidth(80);
            tblTreinamentos.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblTreinamentos.getColumnModel().getColumn(4).setMaxWidth(80);
            tblTreinamentos.getColumnModel().getColumn(5).setPreferredWidth(500);
            tblTreinamentos.getColumnModel().getColumn(6).setMinWidth(120);
            tblTreinamentos.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblTreinamentos.getColumnModel().getColumn(6).setMaxWidth(120);
            tblTreinamentos.getColumnModel().getColumn(7).setMinWidth(150);
            tblTreinamentos.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblTreinamentos.getColumnModel().getColumn(7).setMaxWidth(150);
            tblTreinamentos.getColumnModel().getColumn(8).setMinWidth(80);
            tblTreinamentos.getColumnModel().getColumn(8).setPreferredWidth(80);
            tblTreinamentos.getColumnModel().getColumn(8).setMaxWidth(80);
            tblTreinamentos.getColumnModel().getColumn(9).setMinWidth(100);
            tblTreinamentos.getColumnModel().getColumn(9).setPreferredWidth(100);
            tblTreinamentos.getColumnModel().getColumn(9).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1025, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        jLabel5.setText("Turno:");

        cmbTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTurnoActionPerformed(evt);
            }
        });

        jLabel25.setText("Setor:");

        cmbSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSetorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarMetodologia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25))
                    .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblTreinamentos.getSelectedRow() != -1) {
            Treinamento treinamento = new Treinamento();
            treinamento.setTreinamento_id((Integer) tblTreinamentos.getValueAt(tblTreinamentos.getSelectedRow(), 0));
            FrmConfigTreinamento frm = new FrmConfigTreinamento(null, true, treinamento);
            frm.setVisible(true);
            readTreinamento();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtPesquisarMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarMetodologiaKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblTreinamentos.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblTreinamentos.setRowSorter(sorter);
        String text = txtPesquisarMetodologia.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarMetodologiaKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmConfigTreinamento frm = new FrmConfigTreinamento(null, true);
        frm.setVisible(true);
        readTreinamento();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblTreinamentos.getSelectedRow() != -1) {
            deleteTreinamento((Integer) tblTreinamentos.getValueAt(tblTreinamentos.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readTreinamento();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String setor = cmbSetor.getSelectedItem().toString();
        String turno = cmbTurno.getSelectedItem().toString();
        FrmImprimirTreinamentos frm = new FrmImprimirTreinamentos(null, true, setor, turno);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void tblTreinamentosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblTreinamentosKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (tblTreinamentos.getSelectedRow() != -1) {
                deleteTreinamento((Integer) tblTreinamentos.getValueAt(tblTreinamentos.getSelectedRow(), 0));
            }
        }
    }//GEN-LAST:event_tblTreinamentosKeyReleased

    private void tblTreinamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTreinamentosMouseClicked
        if (evt.getClickCount() == 2) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Treinamento treinamento = new Treinamento();
            treinamento.setTreinamento_id((Integer) tblTreinamentos.getValueAt(tblTreinamentos.getSelectedRow(), 0));
            FrmConfigTreinamento frm = new FrmConfigTreinamento(null, true, treinamento);
            frm.setVisible(true);
            readTreinamento();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tblTreinamentosMouseClicked

    private void cmbSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSetorActionPerformed
        try {
            readTreinamento();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbSetorActionPerformed

    private void cmbTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTurnoActionPerformed
        try {
            readTreinamento();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cmbTurnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnEditar;
    public static javax.swing.JButton btnExcluir;
    public static javax.swing.JButton btnImprimir;
    public static javax.swing.JButton btnNovo;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JComboBox cmbTurno;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblTreinamentos;
    private javax.swing.JTextField txtPesquisarMetodologia;
    // End of variables declaration//GEN-END:variables

    public final void readTreinamento() {
        DefaultTableModel model = (DefaultTableModel) tblTreinamentos.getModel();
        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
        model.setNumRows(0);
        String setor = cmbSetor.getSelectedItem().toString();
        String turno = cmbTurno.getSelectedItem().toString();
        for (Treinamento treinamento : treinamentoDAO.readTreinamento(setor, turno)) {
            model.addRow(new Object[]{
                treinamento.getTreinamento_id(),
                treinamento.getMetodologia1().getMetodo_id(),
                treinamento.getTitulo(),
                treinamento.getSetor().getSigla_setor() == null ? "Todos"
                : treinamento.getSetor().getSigla_setor(),
                treinamento.getTurno(),
                treinamento.getMetodologia1().getCod_metodo() == null ? "N/A"
                : treinamento.getMetodologia1().getCod_metodo() + " - "
                + treinamento.getMetodologia1().getMetodo() + " - "
                + treinamento.getMetodologia1().getVersao(),
                treinamento.getUser_registro().getUser(),
                DataHora.getStringDateTime(treinamento.getData_registro()),
                treinamento.getVigente(),
                treinamento.getNumero_usuarios()
            });
        }
    }

    public final void readTurno() {
        cmbTurno.removeAllItems();
        cmbTurno.addItem("Todos");
        cmbTurno.addItem("1T");
        cmbTurno.addItem("2T");
        cmbTurno.addItem("3T");
        cmbTurno.addItem("Comercial");
    }

    public final void readSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("Todos");
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            cmbSetor.addItem(setor.getSigla_setor());
        }
    }

    private void deleteTreinamento(int id) {
        MatrizTreinamentoAcesso Acesso = new MatrizTreinamentoAcesso();
        if (Acesso.verificarDeletarDados()) {
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente deseja excluir o treinamento desse Método?\n"
                        + "Isso irá apagar todos os registros vinculados a esse treinamento", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    FrmSalvar frmSalvar = new FrmSalvar(null, true);
                    frmSalvar.setVisible(true);
                    if (FrmSalvar.senha()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        Treinamento treinamento = new Treinamento();
                        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
                        treinamento.setTreinamento_id(id);
                        treinamentoDAO.deleteTreinamento(treinamento);
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                readTreinamento();
            }
        }
    }
}
