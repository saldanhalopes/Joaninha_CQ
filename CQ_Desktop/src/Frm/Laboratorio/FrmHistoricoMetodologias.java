/*
 * Copyright (C) 2018 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package Frm.Laboratorio;

import Classes.Acesso.HistoricoMetodologiaAcesso;
import Classes.DAO.HistoricoMetodologiaDAO;
import Classes.Modelo.HistoricoMetodologia;
import Classes.Util.DataHora;
import Classes.Util.GridlineCellRenderer;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmHistoricoMetodologias extends javax.swing.JDialog {

    private String url_link;
    private Integer metodo_id;

    /**
     * Creates new form FrmHistoricoMetodologias
     */
    public FrmHistoricoMetodologias(java.awt.Frame parent, boolean modal, String link, Integer id) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Histórico Metodologia");
        this.setResizable(false);
        url_link = link;
        metodo_id = id;
        readHistoricoMetodologia();
        HistoricoMetodologiaAcesso Acesso = new HistoricoMetodologiaAcesso();
        Acesso.verificarAcessoHistoricoMetodologia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistoricoMetodologia = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnImprimir = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnLink = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Histórico"));

        tblHistoricoMetodologia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Id", "Tipo Ajuste", "Análise", "Coluna", "Fase Movel", "Equipamento", "Condição Atual", "Ajuste", "Observações", "Analista", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoricoMetodologia.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblHistoricoMetodologia.setRowHeight(20);
        tblHistoricoMetodologia.setSurrendersFocusOnKeystroke(true);
        tblHistoricoMetodologia.getTableHeader().setReorderingAllowed(false);
        tblHistoricoMetodologia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHistoricoMetodologiaMouseClicked(evt);
            }
        });
        tblHistoricoMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblHistoricoMetodologiaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblHistoricoMetodologia);
        if (tblHistoricoMetodologia.getColumnModel().getColumnCount() > 0) {
            tblHistoricoMetodologia.getColumnModel().getColumn(0).setMinWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(0).setMaxWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(1).setMinWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(1).setMaxWidth(0);
            tblHistoricoMetodologia.getColumnModel().getColumn(2).setMinWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(2).setMaxWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(3).setMinWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(3).setPreferredWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(3).setMaxWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(4).setMinWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(4).setMaxWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(5).setMinWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(5).setPreferredWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(5).setMaxWidth(200);
            tblHistoricoMetodologia.getColumnModel().getColumn(6).setMinWidth(100);
            tblHistoricoMetodologia.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblHistoricoMetodologia.getColumnModel().getColumn(6).setMaxWidth(100);
            tblHistoricoMetodologia.getColumnModel().getColumn(7).setMinWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(7).setPreferredWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(8).setMinWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(8).setPreferredWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(9).setMinWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(9).setPreferredWidth(500);
            tblHistoricoMetodologia.getColumnModel().getColumn(10).setMinWidth(150);
            tblHistoricoMetodologia.getColumnModel().getColumn(10).setPreferredWidth(150);
            tblHistoricoMetodologia.getColumnModel().getColumn(10).setMaxWidth(150);
            tblHistoricoMetodologia.getColumnModel().getColumn(11).setMinWidth(120);
            tblHistoricoMetodologia.getColumnModel().getColumn(11).setPreferredWidth(120);
            tblHistoricoMetodologia.getColumnModel().getColumn(11).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator6);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator1);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setFocusable(false);
        btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimir);
        jToolBar1.add(jSeparator7);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator5);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.add(jSeparator8);

        btnLink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_link.png"))); // NOI18N
        btnLink.setText("Ajuda");
        btnLink.setToolTipText("Análise Cromatográfica");
        btnLink.setFocusable(false);
        btnLink.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLink.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinkActionPerformed(evt);
            }
        });
        jToolBar2.add(btnLink);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHistoricoMetodologiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHistoricoMetodologiaMouseClicked
        if (evt.getClickCount() == 2) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if (tblHistoricoMetodologia.getSelectedRow() != -1) {
                editarDados();
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tblHistoricoMetodologiaMouseClicked

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        abrirDados();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if (tblHistoricoMetodologia.getSelectedRow() != -1) {
            editarDados();
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Thread t1 = new Thread() {
            @Override
            public void run() {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                HistoricoMetodologiaDAO histmtdDao = new HistoricoMetodologiaDAO();
                histmtdDao.printHistoricoAjuste(System.getProperty("user"), metodo_id);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        };
        t1.start();
        dispose();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readHistoricoMetodologia();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblHistoricoMetodologia.getSelectedRow() != -1) {
            deletarHistoricoMetodologia((Integer) tblHistoricoMetodologia.getValueAt(tblHistoricoMetodologia.getSelectedRow(), 1));
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinkActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            if (!url_link.isEmpty()) {
                Desktop d = Desktop.getDesktop();
                d.browse(new URI(url_link));
            } else {
                JOptionPane.showMessageDialog(null, "Esse método não possui manual de ajuda");
            }
        } catch (IOException | URISyntaxException | NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Esse método não possui manual de ajuda");
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnLinkActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void tblHistoricoMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHistoricoMetodologiaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (tblHistoricoMetodologia.getSelectedRow() != -1) {
                deletarHistoricoMetodologia((Integer) tblHistoricoMetodologia.getValueAt(tblHistoricoMetodologia.getSelectedRow(), 1));
            }
        }
    }//GEN-LAST:event_tblHistoricoMetodologiaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmHistoricoMetodologias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmHistoricoMetodologias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmHistoricoMetodologias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmHistoricoMetodologias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmHistoricoMetodologias dialog = new FrmHistoricoMetodologias(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnEditar;
    public static javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    public static javax.swing.JButton btnImprimir;
    public static javax.swing.JButton btnLink;
    public static javax.swing.JButton btnNovo;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable tblHistoricoMetodologia;
    // End of variables declaration//GEN-END:variables

    public final void readHistoricoMetodologia() {
        GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
        DefaultTableModel model = (DefaultTableModel) tblHistoricoMetodologia.getModel();
        tblHistoricoMetodologia.setDefaultRenderer(Object.class, r);
        HistoricoMetodologiaDAO histmtdDao = new HistoricoMetodologiaDAO();
        model.setNumRows(0);
        for (HistoricoMetodologia histmtd : histmtdDao.readHistoricoMetodologia(metodo_id)) {
            model.addRow(new Object[]{
                histmtd.getPadronizar() ? "Verde" : "",
                histmtd.getHistorico_metodologia_id(),
                histmtd.getTipo_ajuste(),
                histmtd.getAnalise().getAnalise(),
                histmtd.getColuna(),
                histmtd.getFase_movel(),
                histmtd.getCromatografo().getSystem_name(),
                histmtd.getCodicao_inicial(),
                histmtd.getAjuste(),
                histmtd.getObs(),
                histmtd.getUser_registro().getUser(),
                DataHora.getStringDateTime(histmtd.getData_registro())
            });
        }
    }

    private void abrirDados() {
        HistoricoMetodologiaAcesso Acesso = new HistoricoMetodologiaAcesso();
        if (Acesso.verificarAbrirDados()) {
            FrmSalvarHistoricoMetodologia frm = new FrmSalvarHistoricoMetodologia(null, true, metodo_id);
            frm.setVisible(true);
            readHistoricoMetodologia();
        }
    }

    private void editarDados() {
        FrmSalvarHistoricoMetodologia frm = new FrmSalvarHistoricoMetodologia(null, true, metodo_id,
                (Integer) tblHistoricoMetodologia.getValueAt(tblHistoricoMetodologia.getSelectedRow(), 1));
        frm.setVisible(true);
        readHistoricoMetodologia();
    }

    private void deletarHistoricoMetodologia(int id) {
        HistoricoMetodologiaAcesso Acesso = new HistoricoMetodologiaAcesso();
        if (Acesso.verificarDeletarDados()) {
            HistoricoMetodologia histmtd = new HistoricoMetodologia();
            HistoricoMetodologiaDAO histmtdDAO = new HistoricoMetodologiaDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente Deseja Excluir Esse Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    histmtd.setHistorico_metodologia_id(id);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    histmtdDAO.deleteHistoricoMetodologia(histmtd);
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                readHistoricoMetodologia();
            }
        }
    }

}
