package Frm.Laboratorio;

import Classes.DAO.ColunaDAO;
import Classes.DAO.SetorDAO;
import Classes.Modelo.Coluna;
import Classes.Modelo.Setor;
import Classes.Util.DataHora;
import Frm.Principal.FrmCarregando;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public final class FrmHistoricoColuna extends javax.swing.JInternalFrame {

    final String zeros = "0000";
    private TreeMap<Integer, String> categoryMapSetorPesquisar = new TreeMap<>();

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmHistoricoColuna() {
        initComponents();
        setTitle("Histórico Colunas");
        readSetorPesquisar();
        readColuna();
        fecharDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlColunas = new javax.swing.JTabbedPane();
        pnlColuna = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColuna = new javax.swing.JTable();
        txtPesquisarColuna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cmbPesquisarSetor = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cmbPesquisarStatus = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        cmbGaveta = new javax.swing.JComboBox();
        btnImprimirRelatorioGeral = new javax.swing.JButton();
        pnlDados = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtCodigoColuna = new javax.swing.JTextField();
        txtFabricanteColuna = new javax.swing.JTextField();
        txtAtivacaoColuna = new javax.swing.JTextField();
        txtAnaliseColuna = new javax.swing.JTextField();
        txtMetodoColuna = new javax.swing.JTextField();
        txtSetorColuna = new javax.swing.JTextField();
        txtParticulaColuna = new javax.swing.JTextField();
        txtMarcaColuna = new javax.swing.JTextField();
        txtDiametroColuna = new javax.swing.JTextField();
        txtVagaColuna = new javax.swing.JTextField();
        txtTamanhoColuna = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHistoricoColuna = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtObsColuna = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtVerificacao = new javax.swing.JTextField();
        btnImprimirRelatorio = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colunas"));

        tblColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código Coluna", "Coluna", "Método", "n° SAP", "Localização", "Ativação", "Observações", "part_number", "serial_number", "metodo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblColuna.setSurrendersFocusOnKeystroke(true);
        tblColuna.getTableHeader().setReorderingAllowed(false);
        tblColuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblColunaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblColuna);
        if (tblColuna.getColumnModel().getColumnCount() > 0) {
            tblColuna.getColumnModel().getColumn(0).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(0).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(1).setMinWidth(105);
            tblColuna.getColumnModel().getColumn(1).setPreferredWidth(105);
            tblColuna.getColumnModel().getColumn(1).setMaxWidth(105);
            tblColuna.getColumnModel().getColumn(3).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(3).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(4).setMinWidth(70);
            tblColuna.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblColuna.getColumnModel().getColumn(4).setMaxWidth(70);
            tblColuna.getColumnModel().getColumn(5).setMinWidth(150);
            tblColuna.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblColuna.getColumnModel().getColumn(5).setMaxWidth(150);
            tblColuna.getColumnModel().getColumn(6).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(6).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(6).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(7).setMinWidth(50);
            tblColuna.getColumnModel().getColumn(7).setPreferredWidth(180);
            tblColuna.getColumnModel().getColumn(7).setMaxWidth(300);
            tblColuna.getColumnModel().getColumn(8).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(8).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(8).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(9).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(9).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(9).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(10).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(10).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 977, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );

        txtPesquisarColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarColunaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jLabel25.setText("Setor:");

        cmbPesquisarSetor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarSetorItemStateChanged(evt);
            }
        });

        jLabel13.setText("Status:");

        cmbPesquisarStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Ativos", "Inativos", "s/ Performance" }));
        cmbPesquisarStatus.setSelectedIndex(1);
        cmbPesquisarStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarStatusItemStateChanged(evt);
            }
        });

        jLabel5.setText("Gaveta:");

        cmbGaveta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "CG" }));
        cmbGaveta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGavetaActionPerformed(evt);
            }
        });

        btnImprimirRelatorioGeral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        btnImprimirRelatorioGeral.setEnabled(false);
        btnImprimirRelatorioGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirRelatorioGeralActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlColunaLayout = new javax.swing.GroupLayout(pnlColuna);
        pnlColuna.setLayout(pnlColunaLayout);
        pnlColunaLayout.setHorizontalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarColuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGaveta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimirRelatorioGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlColunaLayout.setVerticalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbGaveta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25))
                    .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btnImprimirRelatorioGeral))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlColunas.addTab("Colunas", pnlColuna);

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Coluna"));

        jLabel24.setText("Método:");

        jLabel26.setText("Código:");

        jLabel30.setText("Fabricante:");

        jLabel27.setText("Setor:");

        jLabel28.setText("Tamanho:");

        txtCodigoColuna.setEditable(false);
        txtCodigoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtFabricanteColuna.setEditable(false);
        txtFabricanteColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtAtivacaoColuna.setEditable(false);
        txtAtivacaoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtAnaliseColuna.setEditable(false);
        txtAnaliseColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtMetodoColuna.setEditable(false);
        txtMetodoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtSetorColuna.setEditable(false);
        txtSetorColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtParticulaColuna.setEditable(false);
        txtParticulaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtMarcaColuna.setEditable(false);
        txtMarcaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtDiametroColuna.setEditable(false);
        txtDiametroColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtVagaColuna.setEditable(false);
        txtVagaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtTamanhoColuna.setEditable(false);
        txtTamanhoColuna.setBackground(new java.awt.Color(204, 204, 204));

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Análise:");

        jLabel31.setText("Marca:");

        tblHistoricoColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Campanha", "Equipamento", "Usuário", "Início", "Fim"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoricoColuna.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblHistoricoColuna);

        jLabel32.setText("Partícula:");

        jLabel33.setText("Diâmetro:");

        jLabel34.setText("Vaga:");

        jLabel35.setText("Ativação:");

        jLabel36.setText("Obs:");

        txtObsColuna.setEditable(false);
        txtObsColuna.setBackground(new java.awt.Color(204, 204, 204));

        jLabel37.setText("Verificação:");

        txtVerificacao.setEditable(false);
        txtVerificacao.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txtCodigoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnaliseColuna))
                            .addComponent(txtMetodoColuna)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtObsColuna)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                        .addComponent(txtSetorColuna, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel28)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTamanhoColuna, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                                    .addComponent(txtFabricanteColuna, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMarcaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel33)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDiametroColuna)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtParticulaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVerificacao))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVagaColuna))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAtivacaoColuna)))))
                .addContainerGap())
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtCodigoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnaliseColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetodoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtFabricanteColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(txtMarcaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(txtVagaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtAtivacaoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSetorColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel28)
                    .addComponent(txtTamanhoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(txtParticulaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(txtDiametroColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtObsColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(txtVerificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))
        );

        btnImprimirRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        btnImprimirRelatorio.setEnabled(false);
        btnImprimirRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addComponent(btnImprimirRelatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFechar)
                    .addComponent(btnImprimirRelatorio))
                .addContainerGap())
        );

        pnlColunas.addTab("Dados", pnlDados);

        getContentPane().add(pnlColunas);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblColunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblColunaMouseClicked
        if (evt.getClickCount() == 2) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            carregarColuna((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tblColunaMouseClicked

    private void txtPesquisarColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarColunaKeyReleased
        tableSorter();
    }//GEN-LAST:event_txtPesquisarColunaKeyReleased

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        fecharDados();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnFecharActionPerformed

    private void cmbPesquisarSetorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarSetorItemStateChanged
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readColuna();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbPesquisarSetorItemStateChanged

    private void cmbPesquisarStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarStatusItemStateChanged
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readColuna();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbPesquisarStatusItemStateChanged

    private void cmbGavetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGavetaActionPerformed
        tableSorter();
    }//GEN-LAST:event_cmbGavetaActionPerformed

    private void btnImprimirRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirRelatorioActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Utilização desta Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    //ColunaDAO.printColuna(System.getProperty("user"), cmbPesquisarSetor.getSelectedItem().toString(),
                    //        (Integer) cmbPesquisarStatus.getSelectedIndex());
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_btnImprimirRelatorioActionPerformed

    private void btnImprimirRelatorioGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirRelatorioGeralActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
            "Deseja Imprimir Relatorio do Histórico de Colunas?\nSetor: "
            + ("".equals(cmbPesquisarSetor.getSelectedItem().toString()) ? "Todos" : cmbPesquisarSetor.getSelectedItem().toString())
            + "\nStatus: " + cmbPesquisarStatus.getSelectedItem().toString(), "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    //ColunaDAO.printColuna(System.getProperty("user"), cmbPesquisarSetor.getSelectedItem().toString(),
                    //    (Integer) cmbPesquisarStatus.getSelectedIndex());
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_btnImprimirRelatorioGeralActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnImprimirRelatorio;
    private javax.swing.JButton btnImprimirRelatorioGeral;
    private javax.swing.JComboBox cmbGaveta;
    private javax.swing.JComboBox cmbPesquisarSetor;
    private javax.swing.JComboBox<String> cmbPesquisarStatus;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlColuna;
    private javax.swing.JTabbedPane pnlColunas;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JTable tblColuna;
    private javax.swing.JTable tblHistoricoColuna;
    private javax.swing.JTextField txtAnaliseColuna;
    private javax.swing.JTextField txtAtivacaoColuna;
    private javax.swing.JTextField txtCodigoColuna;
    private javax.swing.JTextField txtDiametroColuna;
    private javax.swing.JTextField txtFabricanteColuna;
    private javax.swing.JTextField txtMarcaColuna;
    private javax.swing.JTextField txtMetodoColuna;
    private javax.swing.JTextField txtObsColuna;
    private javax.swing.JTextField txtParticulaColuna;
    private javax.swing.JTextField txtPesquisarColuna;
    private javax.swing.JTextField txtSetorColuna;
    private javax.swing.JTextField txtTamanhoColuna;
    private javax.swing.JTextField txtVagaColuna;
    private javax.swing.JTextField txtVerificacao;
    // End of variables declaration//GEN-END:variables

    public final void readColuna() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        ColunaDAO colDao = new ColunaDAO();
        model.setNumRows(0);
        int status = cmbPesquisarStatus.getSelectedIndex();
        String setor = cmbPesquisarSetor.getSelectedItem().toString();
        for (Coluna col : colDao.readColuna(setor, status)) {
            model.addRow(new Object[]{
                col.getColuna_id(),
                "CQ-"
                + col.getTipo_coluna()
                + "-" + zeros.substring(String.valueOf(col.getCodigo_coluna()).length())
                + String.valueOf(col.getCodigo_coluna()),
                col.getFabricante_coluna() + " "
                + col.getMarca_coluna() + " - "
                + col.getTipo_coluna() + " "
                + col.getTamanho_coluna() + "mm x "
                + col.getDiametro_coluna() + "mm x "
                + col.getParticula_coluna() + "µm ",
                "MULTIPROPÓSITO".equals(col.getMetodologia().getCod_metodo()) ? "MULTIPROPÓSITO"
                : col.getMetodologia().getCod_metodo() + " - V: " + col.getMetodologia().getVersao(),
                col.getCodigo_sap_coluna(),
                col.getVaga_coluna() == 0 ? "Descartada"
                : ("Gaveta: " + (int) Math.ceil((double) col.getVaga_coluna() / 19)
                + " - Vaga: " + col.getVaga_coluna()),
                DataHora.getStringDate(col.getData_ativacao_coluna()),
                col.getObs_coluna(),
                col.getPart_number_coluna(),
                col.getSerial_number_coluna(),
                col.getMetodologia().getMetodo()
            });
        }
    }

    private void carregarColuna(int coluna_id) {
            Coluna col = new Coluna();
            col.setColuna_id(coluna_id);
            ColunaDAO colDAO = new ColunaDAO();
            colDAO.selectColuna(col);
            DefaultTableModel model = (DefaultTableModel) tblHistoricoColuna.getModel();
            model.setNumRows(0);
            setTitle("Colunas - " + tblColuna.getValueAt(tblColuna.getSelectedRow(), 1));
            txtCodigoColuna.setText(col.getTipo_coluna() == null ? ""
                    : "CQ-" + col.getTipo_coluna()
                    + "-" + zeros.substring(String.valueOf(col.getCodigo_coluna()).length())
                    + String.valueOf(col.getCodigo_coluna()));
            txtAnaliseColuna.setText((col.getAnalise().getAnalise() == null
                    || col.getAnalise().getAnalise().isEmpty())
                            ? "MULTIPROPÓSITO" : col.getAnalise().getAnalise());
            txtAtivacaoColuna.setText(DataHora.getStringDate(col.getData_ativacao_coluna()));
            txtDiametroColuna.setText(col.getDiametro_coluna());
            txtFabricanteColuna.setText(col.getFabricante_coluna());
            txtMarcaColuna.setText(col.getMarca_coluna());
            txtMetodoColuna.setText((col.getMetodologia().getMetodo() == null
                    || col.getMetodologia().getMetodo().isEmpty())
                            ? "MULTIPROPÓSITO" : col.getMetodologia().getMetodo());
            txtObsColuna.setText(col.getObs_coluna());
            txtParticulaColuna.setText(col.getParticula_coluna());
            txtSetorColuna.setText(col.getSetor().getSigla_setor());
            txtTamanhoColuna.setText(col.getTamanho_coluna());
            txtVagaColuna.setText(String.valueOf("Gaveta: " + (int) Math.ceil((double) col.getVaga_coluna() / 19)
                    + " - Vaga: " + col.getVaga_coluna()));
            txtVerificacao.setText(DataHora.getStringDate(col.getData_verificacao()));
            for (Coluna colHistorico : colDAO.readColunaByHistorico(coluna_id)) {
                model.addRow(new Object[]{
                    colHistorico.getCampanha().getNome_campanha(),
                    colHistorico.getCromatografo().getSystem_name(),
                    colHistorico.getUser_log_coluna().getUser(),
                    DataHora.getStringDateTime(colHistorico.getCampanha().getData_inicio()),
                    DataHora.getStringDateTime(colHistorico.getCampanha().getData_fim())
                });
            }
            pnlColunas.setEnabledAt(0, false);
            pnlColunas.setEnabledAt(1, true);
            pnlColunas.setSelectedIndex(1);
    }

    public final void readSetorPesquisar() {
        cmbPesquisarSetor.removeAllItems();
        cmbPesquisarSetor.addItem("Todos");
        categoryMapSetorPesquisar.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            if (setor.getSigla_setor().startsWith("HPLC") || setor.getSigla_setor().startsWith("CG")) {
                Integer id = setor.getSetor_id();
                String name = setor.getSigla_setor();
                cmbPesquisarSetor.addItem(name);
                categoryMapSetorPesquisar.put(id, name);
            }
        }
    }

    private void limparCampos() {
        txtCodigoColuna.setText("");
        txtAnaliseColuna.setText("");
        txtAtivacaoColuna.setText("");
        txtDiametroColuna.setText("");
        txtFabricanteColuna.setText("");
        txtMarcaColuna.setText("");
        txtMetodoColuna.setText("");
        txtObsColuna.setText("");
        txtParticulaColuna.setText("");
        txtSetorColuna.setText("");
        txtTamanhoColuna.setText("");
        txtVagaColuna.setText("");
    }

    private void fecharDados() {
        pnlColunas.setEnabledAt(0, true);
        pnlColunas.setEnabledAt(1, false);
        pnlColunas.setSelectedIndex(0);
        limparCampos();
        readColuna();
        setTitle("Histórico Colunas");
    }

    private void tableSorter() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblColuna.setRowSorter(sorter);
        sorter.setRowFilter(null);
        String text = txtPesquisarColuna.getText().trim().toUpperCase();
        String parametro = "*";
        if (text.length() == 0 && "Todos".equals(cmbGaveta.getSelectedItem().toString())) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0 && "Todos".equals(cmbGaveta.getSelectedItem().toString())) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else if ("Todos".equals(cmbGaveta.getSelectedItem().toString())) {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.trim().toUpperCase()));
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("Gaveta: " + cmbGaveta.getSelectedItem().toString() + " - "));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else if ("CG".equals(text)) {
            List<RowFilter<Object, Object>> filters = new ArrayList<>(1);
            filters.add(RowFilter.numberFilter(RowFilter.ComparisonType.AFTER, 513, 0));
            sorter.setRowFilter(RowFilter.andFilter(filters));
        } else {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("Gaveta: " + cmbGaveta.getSelectedItem().toString() + " - "));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        }
    }

}
