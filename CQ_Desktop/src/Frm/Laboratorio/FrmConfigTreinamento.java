/*
 * Copyright (C) 2018 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package Frm.Laboratorio;

import Classes.DAO.MetodologiaDAO;
import Classes.DAO.SetorDAO;
import Classes.DAO.TreinamentoDAO;
import Classes.Modelo.Metodologia;
import Classes.Modelo.Setor;
import Classes.Modelo.Treinamento;
import Classes.Modelo.Usuario;
import Classes.Util.ComboBox;
import Classes.Util.DataHora;
import Frm.Cadastro.FrmProcurarMetodologia;
import Frm.Config.FrmSelecionaUsuario;
import Frm.Login.FrmSalvar;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public final class FrmConfigTreinamento extends javax.swing.JDialog {

    private boolean novo = false;
    private Treinamento treinamento;
    private TreeMap<Integer, String> categoryMapMetodo1 = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapMetodo2 = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapMetodo3 = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapMetodo4 = new TreeMap<>();
    private List<Integer> usariosDeletados;
    private TreeMap<Integer, String> categoryMapSetor = new TreeMap<>();

    /**
     * Creates new form FrmHistoricoMetodologias
     */
    public FrmConfigTreinamento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Novo Treinamento");
        this.setResizable(false);
        novo = true;
        readTurno();
        readSetor();
        readMetodo1();
        readMetodo2();
        readMetodo3();
        readMetodo4();
    }

    public FrmConfigTreinamento(java.awt.Frame parent, boolean modal, Treinamento treinar) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Editar Treinamento");
        this.setResizable(false);
        treinamento = treinar;
        readTurno();
        readSetor();
        readMetodo1();
        readMetodo2();
        readMetodo3();
        readMetodo4();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        cmbMetodo1 = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        btnProcurarMetodo1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConteudo = new javax.swing.JTextArea();
        jLabel38 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        btnUsuarioPerformance = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        txtData = new com.toedter.calendar.JDateChooser();
        ckbVigente = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        cmbTurno = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtVersao1 = new javax.swing.JSpinner();
        jLabel26 = new javax.swing.JLabel();
        cmbMetodo2 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtVersao2 = new javax.swing.JSpinner();
        btnProcurarMetodo2 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        cmbMetodo3 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtVersao3 = new javax.swing.JSpinner();
        btnProcurarMetodo3 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        cmbMetodo4 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtVersao4 = new javax.swing.JSpinner();
        btnProcurarMetodo4 = new javax.swing.JButton();
        pnlAnalises = new javax.swing.JPanel();
        btnAdicionarLote = new javax.swing.JButton();
        btnRemoverLote = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Análise"));

        jLabel24.setText("Documento:");

        jLabel37.setText("Título:");

        btnProcurarMetodo1.setText("Buscar");
        btnProcurarMetodo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodo1ActionPerformed(evt);
            }
        });

        txtConteudo.setColumns(20);
        txtConteudo.setRows(5);
        jScrollPane2.setViewportView(txtConteudo);

        jLabel38.setText("Conteúdo:");

        jLabel2.setText("Responsável:");

        txtUsuario.setEditable(false);
        txtUsuario.setBackground(new java.awt.Color(204, 204, 204));

        btnUsuarioPerformance.setText("Usuário");
        btnUsuarioPerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioPerformanceActionPerformed(evt);
            }
        });

        jLabel36.setText("Data:");

        ckbVigente.setSelected(true);
        ckbVigente.setText("Vigente");

        jLabel5.setText("Turno:");

        jLabel25.setText("Setor:");

        jLabel7.setText("Versão:");

        jLabel26.setText("Documento:");

        jLabel8.setText("Versão:");

        btnProcurarMetodo2.setText("Buscar");
        btnProcurarMetodo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodo2ActionPerformed(evt);
            }
        });

        jLabel27.setText("Documento:");

        jLabel9.setText("Versão:");

        btnProcurarMetodo3.setText("Buscar");
        btnProcurarMetodo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodo3ActionPerformed(evt);
            }
        });

        jLabel28.setText("Documento:");

        jLabel10.setText("Versão:");

        btnProcurarMetodo4.setText("Buscar");
        btnProcurarMetodo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodo4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txtTitulo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ckbVigente))
                                    .addComponent(jScrollPane2))
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtUsuario)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(cmbMetodo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtVersao1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnProcurarMetodo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUsuarioPerformance, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cmbMetodo4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVersao4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cmbMetodo3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVersao3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(cmbMetodo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVersao2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnProcurarMetodo4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnProcurarMetodo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnProcurarMetodo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbVigente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbMetodo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProcurarMetodo1)
                        .addComponent(jLabel7)
                        .addComponent(txtVersao1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProcurarMetodo2)
                        .addComponent(jLabel8)
                        .addComponent(txtVersao2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbMetodo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProcurarMetodo3)
                        .addComponent(jLabel9)
                        .addComponent(txtVersao3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbMetodo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProcurarMetodo4)
                        .addComponent(jLabel10)
                        .addComponent(txtVersao4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbMetodo4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUsuarioPerformance)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(txtData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAnalises.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuários"));

        btnAdicionarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdicionarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarLoteActionPerformed(evt);
            }
        });

        btnRemoverLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_remove.png"))); // NOI18N
        btnRemoverLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverLoteActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "user_id", "Usuário", "Nome Completo", "Turno", "Setor", "Crachá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.setSurrendersFocusOnKeystroke(true);
        tblUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblUsuarios);
        if (tblUsuarios.getColumnModel().getColumnCount() > 0) {
            tblUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
            tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
            tblUsuarios.getColumnModel().getColumn(1).setMinWidth(0);
            tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblUsuarios.getColumnModel().getColumn(1).setMaxWidth(0);
            tblUsuarios.getColumnModel().getColumn(2).setMinWidth(150);
            tblUsuarios.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblUsuarios.getColumnModel().getColumn(2).setMaxWidth(150);
            tblUsuarios.getColumnModel().getColumn(4).setMinWidth(120);
            tblUsuarios.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblUsuarios.getColumnModel().getColumn(4).setMaxWidth(120);
            tblUsuarios.getColumnModel().getColumn(5).setMinWidth(120);
            tblUsuarios.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblUsuarios.getColumnModel().getColumn(5).setMaxWidth(120);
            tblUsuarios.getColumnModel().getColumn(6).setMinWidth(150);
            tblUsuarios.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblUsuarios.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        javax.swing.GroupLayout pnlAnalisesLayout = new javax.swing.GroupLayout(pnlAnalises);
        pnlAnalises.setLayout(pnlAnalisesLayout);
        pnlAnalisesLayout.setHorizontalGroup(
            pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalisesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlAnalisesLayout.setVerticalGroup(
            pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnalisesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnalisesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAnalisesLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlAnalisesLayout.createSequentialGroup()
                        .addComponent(btnAdicionarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverLote, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 150, Short.MAX_VALUE))))
        );

        btnSalvar.setText("Ok");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAnalises, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAnalises, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcurarMetodo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodo1ActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMetodo1();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo1.setSelectedItem(cod_mtd[0]);
        txtVersao1.setValue(mtd.getVersao());
    }//GEN-LAST:event_btnProcurarMetodo1ActionPerformed

    private void btnUsuarioPerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioPerformanceActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        List<Usuario> users = new ArrayList<>();
        FrmSelecionaUsuario frm = new FrmSelecionaUsuario(null, true, users);
        frm.setVisible(true);
        for (Usuario user : users) {
            txtUsuario.setText(user.getUser());
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnUsuarioPerformanceActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txtTitulo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Título do treinamento inválido");
            txtTitulo.requestFocus();
        } else if (txtData.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Data do treinamento inválida");
            txtData.requestFocus();
        } else if (cmbMetodo1.getSelectedItem() == null ? true : cmbMetodo1.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Metodo inválido");
            cmbMetodo1.requestFocus();
        } else if (txtUsuario.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Responsável pelo treinamento inválido");
            txtUsuario.requestFocus();
        } else if (cmbTurno.getSelectedItem().toString().isEmpty() || cmbMetodo1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Turno inválido");
            cmbTurno.requestFocus();
        } else if (cmbSetor.getSelectedItem().toString().isEmpty() || cmbMetodo1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Setor inválido");
            cmbSetor.requestFocus();
        } else if (novo) {
            FrmSalvar frmSalvar = new FrmSalvar(null, true);
            frmSalvar.setVisible(true);
            if (FrmSalvar.senha()) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                criarDados();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                dispose();
            }
        } else {
            FrmSalvar frmSalvar = new FrmSalvar(null, true);
            frmSalvar.setVisible(true);
            if (FrmSalvar.senha()) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                atualizarDados();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                dispose();
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Os dados não foram salvos! \n "
                + "Deseja fechar essa janela?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAdicionarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarLoteActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        int rows = tblUsuarios.getRowCount();
        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
        List<Usuario> users = new ArrayList<>();
        FrmSelecionaUsuario frm = new FrmSelecionaUsuario(null, true, users);
        frm.setVisible(true);
        outerloop:
        for (Usuario user : users) {
            for (int row = 0; row < rows; row++) {
                if ((Integer) tblUsuarios.getValueAt(row, 1) == user.getUser_id()) {
                    JOptionPane.showMessageDialog(null, "Usuário já adicionado!");
                    continue outerloop;
                }
            }
            model.addRow(new Object[]{
                null,
                user.getUser_id(),
                user.getUser(),
                user.getName(),
                user.getTurno(),
                user.getSetor().getSigla_setor(),
                user.getCracha()
            });
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnAdicionarLoteActionPerformed

    private void btnRemoverLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverLoteActionPerformed
        if (tblUsuarios.getSelectedRow() != -1) {
            try {
                if ((Integer) tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0) == null) {
                    DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
                    model.removeRow(tblUsuarios.getSelectedRow());
                } else {
                    int dialogResult = JOptionPane.showConfirmDialog(null,
                            "Deseja excluir esse colaborador do treinamento?", "Aviso", JOptionPane.YES_NO_OPTION);
                    if (dialogResult == 0) {
                        usariosDeletados.add((Integer) tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0));
                        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
                        model.removeRow(tblUsuarios.getSelectedRow());
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            }
        }
    }//GEN-LAST:event_btnRemoverLoteActionPerformed

    private void btnProcurarMetodo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodo2ActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMetodo2();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo2.setSelectedItem(cod_mtd[0]);
        txtVersao2.setValue(mtd.getVersao());
    }//GEN-LAST:event_btnProcurarMetodo2ActionPerformed

    private void btnProcurarMetodo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodo3ActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMetodo3();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo3.setSelectedItem(cod_mtd[0]);
        txtVersao3.setValue(mtd.getVersao());
    }//GEN-LAST:event_btnProcurarMetodo3ActionPerformed

    private void btnProcurarMetodo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodo4ActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMetodo4();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo4.setSelectedItem(cod_mtd[0]);
        txtVersao4.setValue(mtd.getVersao());
    }//GEN-LAST:event_btnProcurarMetodo4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConfigTreinamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConfigTreinamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConfigTreinamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConfigTreinamento.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmConfigTreinamento dialog = new FrmConfigTreinamento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarLote;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnProcurarMetodo1;
    private javax.swing.JButton btnProcurarMetodo2;
    private javax.swing.JButton btnProcurarMetodo3;
    private javax.swing.JButton btnProcurarMetodo4;
    private javax.swing.JButton btnRemoverLote;
    public static javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUsuarioPerformance;
    private javax.swing.JCheckBox ckbVigente;
    private javax.swing.JComboBox cmbMetodo1;
    private javax.swing.JComboBox cmbMetodo2;
    private javax.swing.JComboBox cmbMetodo3;
    private javax.swing.JComboBox cmbMetodo4;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JComboBox cmbTurno;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlAnalises;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextArea txtConteudo;
    public static com.toedter.calendar.JDateChooser txtData;
    private javax.swing.JTextField txtTitulo;
    public static javax.swing.JTextField txtUsuario;
    private javax.swing.JSpinner txtVersao1;
    private javax.swing.JSpinner txtVersao2;
    private javax.swing.JSpinner txtVersao3;
    private javax.swing.JSpinner txtVersao4;
    // End of variables declaration//GEN-END:variables

    public final void readTurno() {
        cmbTurno.removeAllItems();
        cmbTurno.addItem("");
        cmbTurno.addItem("Todos");
        cmbTurno.addItem("1T");
        cmbTurno.addItem("2T");
        cmbTurno.addItem("3T");
        cmbTurno.addItem("Comercial");
    }

    public final void readSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        cmbSetor.addItem("Todos");
        categoryMapSetor.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            Integer id = setor.getSetor_id();
            String name = setor.getSigla_setor();
            cmbSetor.addItem(name);
            categoryMapSetor.put(id, name);
        }
    }

    private void criarDados() {
        int rows = tblUsuarios.getRowCount();
        Treinamento treinar = new Treinamento();
        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
        Usuario user = new Usuario();
        Usuario user_registro = new Usuario();
        Usuario user_treinamento = new Usuario();
        Metodologia mtd1 = new Metodologia();
        Metodologia mtd2 = new Metodologia();
        Metodologia mtd3 = new Metodologia();
        Metodologia mtd4 = new Metodologia();
        Setor setor = new Setor();
        treinar.setTitulo(txtTitulo.getText().toUpperCase().trim());
        treinar.setConteudo(txtConteudo.getText().trim());
        treinar.setData_treinamento(DataHora.getTimestampDate(txtData.getDate()));
        user_treinamento.setUser(txtUsuario.getText());
        treinar.setUser_treinamento(user_treinamento);
        mtd1.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo1.getSelectedItem().toString(), categoryMapMetodo1));
        mtd1.setVersao((Integer) txtVersao1.getValue());
        treinar.setMetodologia1(mtd1);
        mtd2.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo2.getSelectedItem().toString(), categoryMapMetodo2));
        mtd2.setVersao((Integer) txtVersao2.getValue());
        treinar.setMetodologia2(mtd2);
        mtd3.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo3.getSelectedItem().toString(), categoryMapMetodo3));
        mtd3.setVersao((Integer) txtVersao3.getValue());
        treinar.setMetodologia3(mtd3);
        mtd4.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo4.getSelectedItem().toString(), categoryMapMetodo4));
        mtd4.setVersao((Integer) txtVersao4.getValue());
        treinar.setMetodologia4(mtd4);
        setor.setSetor_id(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor));
        treinar.setSetor(setor);
        user_registro.setUser(System.getProperty("user"));
        treinar.setUser_registro(user_registro);
        treinar.setTurno(cmbTurno.getSelectedItem().toString());
        treinar.setData_registro(DataHora.getTimestampDate(new Date()));
        treinar.setVigente(ckbVigente.isSelected());
        treinar.setTreinamento_id(treinamentoDAO.createTreinamento(treinar));
        for (int row = 0; row < rows; row++) {
            user.setUser_id((Integer) tblUsuarios.getValueAt(row, 1));
            treinar.setUser(user);
            treinamentoDAO.createTreinamentoUser(treinar);
        }
    }

    private void carregarDados() {
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
        treinamentoDAO.selecionarTreinamento(treinamento);
        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
        usariosDeletados = new ArrayList<>();
        txtTitulo.setText(treinamento.getTitulo());
        txtConteudo.setText(treinamento.getConteudo());
        cmbMetodo1.setSelectedItem(mtdDAO.selectCodMetodologiaById(treinamento.getMetodologia1().getMetodo_id()));
        txtVersao1.setValue(treinamento.getMetodologia1().getVersao());
        cmbMetodo2.setSelectedItem(mtdDAO.selectCodMetodologiaById(treinamento.getMetodologia2().getMetodo_id()));
        txtVersao2.setValue(treinamento.getMetodologia2().getVersao());
        cmbMetodo3.setSelectedItem(mtdDAO.selectCodMetodologiaById(treinamento.getMetodologia3().getMetodo_id()));
        txtVersao3.setValue(treinamento.getMetodologia3().getVersao());
        cmbMetodo4.setSelectedItem(mtdDAO.selectCodMetodologiaById(treinamento.getMetodologia4().getMetodo_id()));
        txtVersao4.setValue(treinamento.getMetodologia4().getVersao());
        txtData.setDate(DataHora.getTimestampDate(treinamento.getData_treinamento()));
        txtUsuario.setText(treinamento.getUser_treinamento().getUser());
        ckbVigente.setSelected(treinamento.getVigente());
        String[] setor = {treinamento.getSetor().getSigla_setor() == null ? "Todos" : treinamento.getSetor().getSigla_setor()};
        cmbSetor.setSelectedItem(setor[0]);
        String[] turno = {treinamento.getTurno()};
        cmbTurno.setSelectedItem(turno[0]);
        for (Treinamento treinar : treinamentoDAO.selecionarTreinamentoUser(treinamento.getTreinamento_id())) {
            model.addRow(new Object[]{
                treinar.getTreinamento_user_id(),
                treinar.getUser().getUser_id(),
                treinar.getUser().getUser(),
                treinar.getUser().getName(),
                treinar.getUser().getTurno(),
                treinar.getSetor().getSigla_setor(),
                treinar.getUser().getCracha()
            });
        }
    }

    private void atualizarDados() {
        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
        Usuario user = new Usuario();
        Usuario user_registro = new Usuario();
        Usuario user_treinamento = new Usuario();
        Metodologia mtd1 = new Metodologia();
        Metodologia mtd2 = new Metodologia();
        Metodologia mtd3 = new Metodologia();
        Metodologia mtd4 = new Metodologia();
        Setor setor = new Setor();
        treinamento.setTitulo(txtTitulo.getText().toUpperCase().trim());
        treinamento.setConteudo(txtConteudo.getText().trim());
        treinamento.setData_treinamento(DataHora.getTimestampDate(txtData.getDate()));
        user_treinamento.setUser(txtUsuario.getText());
        treinamento.setUser_treinamento(user_treinamento);
        mtd1.setMetodo_id(cmbMetodo1.getSelectedItem() != null
                ? ComboBox.getKeyForValue(cmbMetodo1.getSelectedItem().toString(), categoryMapMetodo1) : 0);
        mtd1.setVersao((Integer) txtVersao1.getValue());
        treinamento.setMetodologia1(mtd1);
        mtd2.setMetodo_id(cmbMetodo2.getSelectedItem() != null
                ? ComboBox.getKeyForValue(cmbMetodo2.getSelectedItem().toString(), categoryMapMetodo2) : 0);
        mtd2.setVersao((Integer) txtVersao2.getValue());
        treinamento.setMetodologia2(mtd2);
        mtd3.setMetodo_id(cmbMetodo3.getSelectedItem() != null
                ? ComboBox.getKeyForValue(cmbMetodo3.getSelectedItem().toString(), categoryMapMetodo3) : 0);
        mtd3.setVersao((Integer) txtVersao3.getValue());
        treinamento.setMetodologia3(mtd3);
        mtd4.setMetodo_id(cmbMetodo4.getSelectedItem() != null
                ? ComboBox.getKeyForValue(cmbMetodo4.getSelectedItem().toString(), categoryMapMetodo4) : 0);
        mtd4.setVersao((Integer) txtVersao4.getValue());
        treinamento.setMetodologia4(mtd4);
        setor.setSetor_id(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor));
        treinamento.setSetor(setor);
        user_registro.setUser(System.getProperty("user"));
        treinamento.setUser_registro(user_registro);
        treinamento.setTurno(cmbTurno.getSelectedItem().toString());
        treinamento.setData_registro(DataHora.getTimestampDate(new Date()));
        treinamento.setVigente(ckbVigente.isSelected());
        treinamentoDAO.updateTreinamento(treinamento);
        Treinamento treinar = new Treinamento();
        treinar.setTreinamento_id(treinamento.getTreinamento_id());
        int rows = tblUsuarios.getRowCount();
        for (int row = 0; row < rows; row++) {
            if ((Integer) tblUsuarios.getValueAt(row, 0) == null) {
                user.setUser_id((Integer) tblUsuarios.getValueAt(row, 1));
                treinar.setUser(user);
                treinar.setUser_registro(user_registro);
                treinar.setData_registro(DataHora.getTimestampDate(new Date()));
                treinamentoDAO.createTreinamentoUser(treinar);
            }
        }
        for (Integer row : usariosDeletados) {
            deletarUsuarioTreinamento(row);
        }
    }

    private void deletarUsuarioTreinamento(Integer id) {
        Treinamento treinar = new Treinamento();
        TreinamentoDAO treinamentoDAO = new TreinamentoDAO();
        try {
            treinar.setTreinamento_user_id(id);
            treinamentoDAO.deleteTreinamentoUser(treinar);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
        }
    }

    public void readMetodo1() {
        cmbMetodo1.removeAllItems();
        cmbMetodo1.addItem("");
        cmbMetodo1.addItem("N/A");
        categoryMapMetodo1.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.readMetodologia()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo1.addItem(name);
            categoryMapMetodo1.put(id, name);
        }
    }

    public void readMetodo2() {
        cmbMetodo2.removeAllItems();
        cmbMetodo2.addItem("");
        cmbMetodo2.addItem("N/A");
        categoryMapMetodo2.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.readMetodologia()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo2.addItem(name);
            categoryMapMetodo2.put(id, name);
        }
    }

    public void readMetodo3() {
        cmbMetodo3.removeAllItems();
        cmbMetodo3.addItem("");
        cmbMetodo3.addItem("N/A");
        categoryMapMetodo3.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.readMetodologia()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo3.addItem(name);
            categoryMapMetodo3.put(id, name);
        }
    }

    public void readMetodo4() {
        cmbMetodo4.removeAllItems();
        cmbMetodo4.addItem("");
        cmbMetodo4.addItem("N/A");
        categoryMapMetodo4.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.readMetodologia()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo4.addItem(name);
            categoryMapMetodo4.put(id, name);
        }
    }

}
