package Frm.Laboratorio;

import Classes.DAO.HistoricoMetodologiaDAO;
import Classes.DAO.MetodologiaDAO;
import Classes.Modelo.Metodologia;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public final class FrmInfoMetodologias extends javax.swing.JInternalFrame {

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmInfoMetodologias() {
        initComponents();
        setTitle("Informações sobre Métodos");
        this.setResizable(false);
        carregar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnEditarInfo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnImprimirInfo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPesquisarMetodologia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfoMetodos = new javax.swing.JTable();
        btnFechar = new javax.swing.JButton();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnEditarInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_edit.png"))); // NOI18N
        btnEditarInfo.setText("Editar");
        btnEditarInfo.setFocusable(false);
        btnEditarInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarInfoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditarInfo);
        jToolBar1.add(jSeparator1);

        btnImprimirInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_print.png"))); // NOI18N
        btnImprimirInfo.setText("Imprimir");
        btnImprimirInfo.setFocusable(false);
        btnImprimirInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnImprimirInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnImprimirInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirInfoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImprimirInfo);

        jLabel4.setText("Pesquisar:");

        txtPesquisarMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarMetodologiaKeyReleased(evt);
            }
        });

        tblInfoMetodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Método", "Link Ajuda", "metodo_id", "Histórico de Ajuste", "link"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInfoMetodos.getTableHeader().setReorderingAllowed(false);
        tblInfoMetodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInfoMetodosMouseClicked(evt);
            }
        });
        tblInfoMetodos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblInfoMetodosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblInfoMetodos);
        if (tblInfoMetodos.getColumnModel().getColumnCount() > 0) {
            tblInfoMetodos.getColumnModel().getColumn(1).setMinWidth(100);
            tblInfoMetodos.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblInfoMetodos.getColumnModel().getColumn(1).setMaxWidth(100);
            tblInfoMetodos.getColumnModel().getColumn(2).setMinWidth(0);
            tblInfoMetodos.getColumnModel().getColumn(2).setPreferredWidth(0);
            tblInfoMetodos.getColumnModel().getColumn(2).setMaxWidth(0);
            tblInfoMetodos.getColumnModel().getColumn(3).setMinWidth(150);
            tblInfoMetodos.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblInfoMetodos.getColumnModel().getColumn(3).setMaxWidth(150);
            tblInfoMetodos.getColumnModel().getColumn(4).setMinWidth(0);
            tblInfoMetodos.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblInfoMetodos.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1014, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarMetodologia))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarInfoActionPerformed
        if (tblInfoMetodos.getSelectedRow() != -1) {
            FrmHistoricoMetodologias frm = new FrmHistoricoMetodologias(null, true,
                    (String) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 4),
                    (Integer) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 2));
            frm.setVisible(true);
        }
    }//GEN-LAST:event_btnEditarInfoActionPerformed

    private void btnImprimirInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirInfoActionPerformed
        Thread t1 = new Thread() {
            @Override
            public void run() {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                HistoricoMetodologiaDAO histmtdDao = new HistoricoMetodologiaDAO();
                histmtdDao.printHistoricoAjusteGeral(System.getProperty("user"));
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        };
        t1.start();
    }//GEN-LAST:event_btnImprimirInfoActionPerformed

    private void txtPesquisarMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarMetodologiaKeyReleased
        DefaultTableModel model = (DefaultTableModel) tblInfoMetodos.getModel();
        TableRowSorter sorter = new TableRowSorter<>(model);
        tblInfoMetodos.setRowSorter(sorter);
        String text = txtPesquisarMetodologia.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarMetodologiaKeyReleased

    private void tblInfoMetodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInfoMetodosMouseClicked
        if (evt.getClickCount() == 2) {
            FrmHistoricoMetodologias frm = new FrmHistoricoMetodologias(null, true,
                    (String) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 4),
                    (Integer) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 2));
            frm.setVisible(true);
        }
    }//GEN-LAST:event_tblInfoMetodosMouseClicked

    private void tblInfoMetodosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblInfoMetodosKeyReleased
        if (tblInfoMetodos.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                FrmHistoricoMetodologias frm = new FrmHistoricoMetodologias(null, true,
                        (String) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 4),
                        (Integer) tblInfoMetodos.getValueAt(tblInfoMetodos.getSelectedRow(), 2));
                frm.setVisible(true);
                dispose();
            }
        }
    }//GEN-LAST:event_tblInfoMetodosKeyReleased

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnEditarInfo;
    private javax.swing.JButton btnFechar;
    public static javax.swing.JButton btnImprimirInfo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblInfoMetodos;
    private javax.swing.JTextField txtPesquisarMetodologia;
    // End of variables declaration//GEN-END:variables

    private void carregar() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblInfoMetodos.getModel();
            MetodologiaDAO mtdDAO = new MetodologiaDAO();
            model.setNumRows(0);
            for (Metodologia mtd : mtdDAO.readInfoMetodo()) {
                model.addRow(new Object[]{
                    mtd.getCod_metodo() + " - " + mtd.getMetodo(),
                    mtd.getLink().startsWith("file:///M"),
                    (Integer) mtd.getMetodo_id(),
                    mtd.getAjuda(),
                    mtd.getLink()
                });
            }
        } catch (Exception e) {
        }
    }

}
