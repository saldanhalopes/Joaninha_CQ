/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Laboratorio;

import Classes.DAO.PlaceboDAO;
import Classes.Modelo.Placebo;
import Classes.Modelo.Usuario;
import Classes.Util.DataHora;
import Frm.Config.FrmSelecionaUsuario;
import Frm.Login.FrmSalvar;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmConfigLotePlacebo extends javax.swing.JDialog {

    private Placebo placebo;

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param modal
     * @param prd
     */
    public FrmConfigLotePlacebo(java.awt.Frame parent, boolean modal, Placebo plac) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Caixa");
        setResizable(false);
        placebo = plac;
        read();
        if (placebo.getPlacebo_lote_id() > 0) {
            carregar();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        pnlDadosLote = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtDataSolicitacao = new com.toedter.calendar.JDateChooser();
        txtDataRecebimento = new com.toedter.calendar.JDateChooser();
        txtObs = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLote = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtUsuarioSolicitacao = new javax.swing.JTextField();
        txtUsuarioRecebimento = new javax.swing.JTextField();
        btnUsuarioSolicitacao = new javax.swing.JButton();
        btnUsuarioRecebimento = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        txtDataValidade = new com.toedter.calendar.JDateChooser();
        jLabel30 = new javax.swing.JLabel();
        txtDataFabricacao = new com.toedter.calendar.JDateChooser();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        pnlDadosLote.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel1.setText("Lote:");

        jLabel9.setText("Quantidade:");

        jLabel11.setText("und");

        jLabel27.setText("Solicitação:");

        jLabel28.setText("Recebimento:");

        jLabel6.setText("Obs:");

        jLabel2.setText("Responsável:");

        jLabel12.setText("Responsável:");

        txtUsuarioSolicitacao.setEditable(false);
        txtUsuarioSolicitacao.setBackground(new java.awt.Color(204, 204, 204));

        txtUsuarioRecebimento.setEditable(false);
        txtUsuarioRecebimento.setBackground(new java.awt.Color(204, 204, 204));

        btnUsuarioSolicitacao.setText("Usuário");
        btnUsuarioSolicitacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioSolicitacaoActionPerformed(evt);
            }
        });

        btnUsuarioRecebimento.setText("Usuário");
        btnUsuarioRecebimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioRecebimentoActionPerformed(evt);
            }
        });

        jLabel29.setText("Validade:");

        jLabel30.setText("Fabricação:");

        javax.swing.GroupLayout pnlDadosLoteLayout = new javax.swing.GroupLayout(pnlDadosLote);
        pnlDadosLote.setLayout(pnlDadosLoteLayout);
        pnlDadosLoteLayout.setHorizontalGroup(
            pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                        .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                                .addComponent(txtDataRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsuarioRecebimento, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUsuarioRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtObs)))
                    .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                        .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDadosLoteLayout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataSolicitacao, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDadosLoteLayout.createSequentialGroup()
                                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txtLote))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsuarioSolicitacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUsuarioSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                        .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDadosLoteLayout.setVerticalGroup(
            pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtUsuarioSolicitacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUsuarioSolicitacao)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDataRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtUsuarioRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUsuarioRecebimento)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDadosLote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosLote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnUsuarioSolicitacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioSolicitacaoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        List<Usuario> users = new ArrayList<>();
        FrmSelecionaUsuario frm = new FrmSelecionaUsuario(null, true, users);
        frm.setVisible(true);
        for (Usuario user : users) {
            txtUsuarioSolicitacao.setText(user.getUser());
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnUsuarioSolicitacaoActionPerformed

    private void btnUsuarioRecebimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioRecebimentoActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        List<Usuario> users = new ArrayList<>();
        FrmSelecionaUsuario frm = new FrmSelecionaUsuario(null, true, users);
        frm.setVisible(true);
        for (Usuario user : users) {
            txtUsuarioRecebimento.setText(user.getUser());
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnUsuarioRecebimentoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txtDataSolicitacao.getDate() != null && txtUsuarioSolicitacao.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Resposável pela solicitação inválido");
            btnUsuarioSolicitacao.requestFocus();
        } else if (txtDataRecebimento.getDate() != null && txtUsuarioRecebimento.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Resposável pelo recebimento inválido");
            btnUsuarioRecebimento.requestFocus();
        } else if (txtDataRecebimento.getDate() != null && txtLote.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Lote inválido");
            txtLote.requestFocus();
        } else if (txtDataRecebimento.getDate() != null && txtDataFabricacao.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Data de Fabricação inválida");
            txtDataFabricacao.requestFocus();
        } else if (txtDataRecebimento.getDate() != null && txtDataValidade.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Data de Validade inválida");
            txtDataValidade.requestFocus();
        } else if (txtDataRecebimento.getDate() != null && txtDataValidade.getDate().before(txtDataFabricacao.getDate())) {
            JOptionPane.showMessageDialog(null, "Data e Hora da Fabricação e Validade estão Inválidas!");
            txtDataValidade.requestFocus();
        } else if (placebo.getPlacebo_lote_id() > 0) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            FrmSalvar frmSalvar = new FrmSalvar(null, true);
            frmSalvar.setVisible(true);
            if (FrmSalvar.senha()) {
                atualizarLote();
                dispose();
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } else {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            FrmSalvar frmSalvar = new FrmSalvar(null, true);
            frmSalvar.setVisible(true);
            if (FrmSalvar.senha()) {
                criarlote();
                dispose();
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConfigLotePlacebo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConfigLotePlacebo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConfigLotePlacebo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConfigLotePlacebo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmConfigLotePlacebo dialog = new FrmConfigLotePlacebo(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUsuarioRecebimento;
    private javax.swing.JButton btnUsuarioSolicitacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel pnlDadosLote;
    private com.toedter.calendar.JDateChooser txtDataFabricacao;
    private com.toedter.calendar.JDateChooser txtDataRecebimento;
    private com.toedter.calendar.JDateChooser txtDataSolicitacao;
    private com.toedter.calendar.JDateChooser txtDataValidade;
    private javax.swing.JTextField txtLote;
    private javax.swing.JTextField txtObs;
    private javax.swing.JSpinner txtQuantidade;
    public static javax.swing.JTextField txtUsuarioRecebimento;
    public static javax.swing.JTextField txtUsuarioSolicitacao;
    // End of variables declaration//GEN-END:variables

    private void read() {
        txtQuantidade.setModel(new SpinnerNumberModel(0, 0, 10, 1));
    }

    private void atualizarLote() {
        PlaceboDAO placeboDAO = new PlaceboDAO();
        Usuario user_solicitacao = new Usuario();
        Usuario user_recebimento = new Usuario();
        Usuario user_registro = new Usuario();
        placebo.setData_solicitacao(DataHora.getTimestampDate(txtDataSolicitacao.getDate()));
        placebo.setData_recebimento(DataHora.getTimestampDate(txtDataRecebimento.getDate()));
        placebo.setData_fabricacao(DataHora.getTimestampDate(txtDataFabricacao.getDate()));
        placebo.setData_validade(DataHora.getTimestampDate(txtDataValidade.getDate()));
        user_solicitacao.setUser(txtUsuarioSolicitacao.getText());
        placebo.setUser_solicitacao(user_solicitacao);
        user_recebimento.setUser(txtUsuarioRecebimento.getText());
        placebo.setUser_recebimento(user_recebimento);
        placebo.setLote_placebo(txtLote.getText().toUpperCase());
        placebo.setLote_placebo(txtLote.getText().toUpperCase());
        placebo.setQuantidade((Integer) txtQuantidade.getValue());
        placebo.setObs(txtObs.getText().toUpperCase());
        placebo.setData_registro(DataHora.getTimestampDate(new Date()));
        user_registro.setUser(System.getProperty("user"));
        placebo.setUser_registro(user_registro);
        placeboDAO.updatePlaceboLote(placebo);
    }

    private void criarlote() {
        Placebo plac = new Placebo();
        PlaceboDAO placeboDAO = new PlaceboDAO();
        Usuario user_solicitacao = new Usuario();
        Usuario user_recebimento = new Usuario();
        Usuario user_registro = new Usuario();
        plac.setPlacebo_id(placebo.getPlacebo_id());
        plac.setData_solicitacao(DataHora.getTimestampDate(txtDataSolicitacao.getDate()));
        plac.setData_recebimento(DataHora.getTimestampDate(txtDataRecebimento.getDate()));
        plac.setData_fabricacao(DataHora.getTimestampDate(txtDataFabricacao.getDate()));
        plac.setData_validade(DataHora.getTimestampDate(txtDataValidade.getDate()));
        user_solicitacao.setUser(txtUsuarioSolicitacao.getText());
        plac.setUser_solicitacao(user_solicitacao);
        user_recebimento.setUser(txtUsuarioRecebimento.getText());
        plac.setUser_recebimento(user_recebimento);
        plac.setLote_placebo(txtLote.getText().toUpperCase());
        plac.setLote_placebo(txtLote.getText().toUpperCase());
        plac.setQuantidade((Integer) txtQuantidade.getValue());
        plac.setObs(txtObs.getText().toUpperCase());
        plac.setData_registro(DataHora.getTimestampDate(new Date()));
        user_registro.setUser(System.getProperty("user"));
        plac.setUser_registro(user_registro);
        placeboDAO.createPlaceboLote(plac);
    }

    private void carregar() {
        PlaceboDAO placeboDAO = new PlaceboDAO();
        placeboDAO.selectLotePlacebo(placebo);
        txtDataSolicitacao.setDate(placebo.getData_solicitacao());
        txtDataRecebimento.setDate(placebo.getData_recebimento());
        txtUsuarioSolicitacao.setText(placebo.getUser_solicitacao().getUser());
        txtUsuarioRecebimento.setText(placebo.getUser_recebimento().getUser());
        txtLote.setText(placebo.getLote_placebo());
        txtDataFabricacao.setDate(placebo.getData_fabricacao());
        txtDataValidade.setDate(placebo.getData_validade());
        txtQuantidade.setValue(placebo.getQuantidade());
        txtObs.setText(placebo.getObs());
    }

}
