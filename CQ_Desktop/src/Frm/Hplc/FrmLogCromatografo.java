package Frm.Hplc;

import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author rafael.lopes
 */
public final class FrmLogCromatografo extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmLogBook
     *
     * @param system_name
     */
    public FrmLogCromatografo(String system_name) {
        initComponents();
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null); //retirar o painel superior
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbLogCromatografo = new javax.swing.JTabbedPane();

        setBorder(null);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tbLogCromatografo.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        getContentPane().add(tbLogCromatografo);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTabbedPane tbLogCromatografo;
    // End of variables declaration//GEN-END:variables

    public void criarJanela(final String title) {
        ImageIcon icone = new ImageIcon(getClass().getResource("/img/icon_remove.png"));

        try {
            if (tbLogCromatografo.indexOfTab(title) == -1) {
                PnlLogCromatografo pnl = new PnlLogCromatografo(title);
                tbLogCromatografo.addTab(title, pnl);
                int index = tbLogCromatografo.indexOfTab(title);

                JPanel pnlTab = new JPanel(new GridBagLayout());
                pnlTab.setOpaque(false);
                JLabel lblTitle = new JLabel(title);
                JButton btnClose = new JButton();
                btnClose.setIcon(icone);
                btnClose.setContentAreaFilled(false);
                btnClose.setPreferredSize(new Dimension(25, 25));
                btnClose.setHorizontalTextPosition(SwingConstants.RIGHT);
                lblTitle.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 40));
                lblTitle.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 12));

                GridBagConstraints gbc = new GridBagConstraints();
                gbc.gridx = 0;
                gbc.gridy = 0;
                gbc.weightx = 1;

                pnlTab.add(lblTitle, gbc);

                gbc.gridx++;
                gbc.weightx = 0;
                pnlTab.add(btnClose, gbc);

                btnClose.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        int dialogResult = JOptionPane.showConfirmDialog(null,
                                "Deseja fechar essa janela?", "Aviso", JOptionPane.YES_NO_OPTION);
                        if (dialogResult == 0) {
                            int index = tbLogCromatografo.indexOfTab(title);
                            if (index >= 0) {
                                tbLogCromatografo.remove(index);
                                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                            }
                            if (tbLogCromatografo.getTabCount() == 0) {
                                dispose();
                            }
                        }
                    }
                });

                btnClose.addMouseListener(new MouseListener() {

                    @Override
                    public void mouseClicked(MouseEvent evt) {

                    }

                    @Override
                    public void mousePressed(MouseEvent evt) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent evt) {

                    }

                    @Override
                    public void mouseEntered(MouseEvent evt) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    }

                    @Override
                    public void mouseExited(MouseEvent evt) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                });

                tbLogCromatografo.setTabComponentAt(index, pnlTab);
                tbLogCromatografo.setSelectedIndex(tbLogCromatografo.indexOfTab(title));
            } else {
                tbLogCromatografo.setSelectedIndex(tbLogCromatografo.indexOfTab(title));
            }

        } catch (Exception e) {

        }

    }

}
