package Frm.Hplc;

import Classes.DAO.CampanhaDAO;
import Classes.DAO.CromatografoDAO;
import Classes.DAO.FaseMovelDAO;
import Classes.Modelo.Campanha;
import Classes.Modelo.Cromatografo;
import Classes.Modelo.FaseMovel;
import Classes.Modelo.Usuario;
import Classes.Util.DataHora;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmFaseMovelCromatografo extends javax.swing.JDialog {

    private static String sys_name;
    private static int campanha_id;

    /**
     * Creates new form FrmFaseMovelCromatografo
     *
     * @param parent
     * @param modal
     * @param system_name
     * @param nome_campanha
     */
    public FrmFaseMovelCromatografo(java.awt.Frame parent, boolean modal,
            String system_name, int campanha) {
        super(parent, modal);
        initComponents();
        sys_name = system_name;
        campanha_id = campanha;
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setTitle("Fase Móvel");
        this.setResizable(false);
        carregar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtLoteCanalD = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtLoteCanalA = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtLoteCanalB = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtLoteCanalC = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtQtCanalA = new javax.swing.JFormattedTextField();
        txtQtCanalB = new javax.swing.JSpinner();
        txtQtCanalC = new javax.swing.JSpinner();
        txtQtCanalD = new javax.swing.JSpinner();
        txtCanalA = new javax.swing.JTextField();
        txtCanalB = new javax.swing.JTextField();
        txtCanalC = new javax.swing.JTextField();
        txtCanalD = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtValidadeCanalD = new com.toedter.calendar.JDateChooser();
        txtValidadeCanalA = new com.toedter.calendar.JDateChooser();
        txtValidadeCanalB = new com.toedter.calendar.JDateChooser();
        txtValidadeCanalC = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        txtCanalE = new javax.swing.JTextField();
        txtLoteCanalE = new javax.swing.JTextField();
        txtValidadeCanalE = new com.toedter.calendar.JDateChooser();
        txtValidadeCanalF = new com.toedter.calendar.JDateChooser();
        txtLoteCanalF = new javax.swing.JTextField();
        txtCanalF = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Fase Móvel"));

        jLabel11.setText("Canal A:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("%");

        jLabel14.setText("Canal B:");

        jLabel12.setText("Canal C:");

        jLabel13.setText("Canal D:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Lote");

        txtQtCanalA.setEditable(false);
        txtQtCanalA.setBackground(new java.awt.Color(210, 210, 210));
        txtQtCanalA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQtCanalA.setMinimumSize(new java.awt.Dimension(100, 20));

        txtQtCanalB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtCanalBStateChanged(evt);
            }
        });

        txtQtCanalC.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtCanalCStateChanged(evt);
            }
        });

        txtQtCanalD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtCanalDStateChanged(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Solução Reagente");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Validade");

        jLabel15.setText("Autoinjetor:");

        jLabel16.setText("Selo Pistão:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLoteCanalA, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(txtLoteCanalB)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLoteCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLoteCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtValidadeCanalC, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                    .addComponent(txtValidadeCanalD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtQtCanalC, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(txtQtCanalD)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtValidadeCanalB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtValidadeCanalA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtQtCanalA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtQtCanalB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCanalE, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoteCanalE, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValidadeCanalE, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCanalF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLoteCanalF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValidadeCanalF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(105, 105, 105)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtValidadeCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtLoteCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQtCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLoteCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtQtCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtValidadeCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtLoteCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQtCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtLoteCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQtCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtValidadeCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValidadeCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(txtLoteCanalE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCanalE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtValidadeCanalE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(txtLoteCanalF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCanalF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtValidadeCanalF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtQtCanalBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtCanalBStateChanged
        if (!calcular()) {
            txtQtCanalB.setValue(0);
        }
    }//GEN-LAST:event_txtQtCanalBStateChanged

    private void txtQtCanalCStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtCanalCStateChanged
        if (!calcular()) {
            txtQtCanalC.setValue(0);
        }
    }//GEN-LAST:event_txtQtCanalCStateChanged

    private void txtQtCanalDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtCanalDStateChanged
        if (!calcular()) {
            txtQtCanalD.setValue(0);
        }
    }//GEN-LAST:event_txtQtCanalDStateChanged

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            if (txtCanalA.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Fase Móvel A em Branco");
                txtCanalA.requestFocus();
            } else if (txtLoteCanalA.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Fase Móvel A em Branco");
                txtLoteCanalA.requestFocus();
            } else if (txtValidadeCanalA.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Fase Móvel A Inválida");
            } else if (txtCanalB.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Fase Móvel B em Branco");
                txtCanalB.requestFocus();
            } else if (txtLoteCanalB.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Fase Móvel B em Branco");
                txtLoteCanalB.requestFocus();
            } else if (txtValidadeCanalB.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Fase Móvel B Inválida");
            } else if (txtCanalC.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Fase Móvel C em Branco");
                txtCanalC.requestFocus();
            } else if (txtLoteCanalC.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Fase Móvel C em Branco");
                txtLoteCanalC.requestFocus();
            } else if (txtValidadeCanalC.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Fase Móvel C Inválida");
            } else if (txtCanalD.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Fase Móvel D em Branco");
                txtCanalD.requestFocus();
            } else if (txtLoteCanalD.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Fase Móvel D em Branco");
                txtLoteCanalD.requestFocus();
            } else if (txtValidadeCanalD.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Fase Móvel D Inválida");
            } else if (txtCanalE.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Solução Autoinjetor em Branco");
                txtCanalE.requestFocus();
            } else if (txtLoteCanalE.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Autoinjetor em Branco");
                txtLoteCanalE.requestFocus();
            } else if (txtValidadeCanalE.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Autoinjetor Inválida");
            } else if (txtCanalF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Solução Selo Pistão em Branco");
                txtCanalF.requestFocus();
            } else if (txtLoteCanalF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo Lote Selo Pistão em Branco");
                txtLoteCanalF.requestFocus();
            } else if (txtValidadeCanalF.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Data de Validade Selo Pistão Inválida");
            } else {
                //Envia Codigo de Fase Movel
                Integer analise_status = 4;
                //Seleciona o Equipamento
                Cromatografo equip = new Cromatografo();
                CromatografoDAO equipDAO = new CromatografoDAO();
                equip.setSystem_name(sys_name);
                equipDAO.selectCromatografoByName(equip);
                //Abre Dialog para savar
                FrmDialogSalvar frmSalvar = new FrmDialogSalvar(null, true, sys_name,
                        analise_status, "FASE MÓVEL", campanha_id);
                frmSalvar.setVisible(true);
                if (FrmDialogSalvar.senha()) {
                    criarFaseMovelCromatografo();
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel salvar. Algum Campo está inválido!");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmFaseMovelCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmFaseMovelCromatografo dialog = new FrmFaseMovelCromatografo(new javax.swing.JFrame(), true, null, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCanalA;
    private javax.swing.JTextField txtCanalB;
    private javax.swing.JTextField txtCanalC;
    private javax.swing.JTextField txtCanalD;
    private javax.swing.JTextField txtCanalE;
    private javax.swing.JTextField txtCanalF;
    private javax.swing.JTextField txtLoteCanalA;
    private javax.swing.JTextField txtLoteCanalB;
    private javax.swing.JTextField txtLoteCanalC;
    private javax.swing.JTextField txtLoteCanalD;
    private javax.swing.JTextField txtLoteCanalE;
    private javax.swing.JTextField txtLoteCanalF;
    private javax.swing.JFormattedTextField txtQtCanalA;
    private javax.swing.JSpinner txtQtCanalB;
    private javax.swing.JSpinner txtQtCanalC;
    private javax.swing.JSpinner txtQtCanalD;
    private com.toedter.calendar.JDateChooser txtValidadeCanalA;
    private com.toedter.calendar.JDateChooser txtValidadeCanalB;
    private com.toedter.calendar.JDateChooser txtValidadeCanalC;
    private com.toedter.calendar.JDateChooser txtValidadeCanalD;
    private com.toedter.calendar.JDateChooser txtValidadeCanalE;
    private com.toedter.calendar.JDateChooser txtValidadeCanalF;
    // End of variables declaration//GEN-END:variables

    private void carregar() {
        SpinnerNumberModel modelB = new SpinnerNumberModel(0, 0, 100, 1);
        txtQtCanalB.setModel(modelB);
        JSpinner.NumberEditor editorB = new JSpinner.NumberEditor(txtQtCanalB);
        txtQtCanalB.setEditor(editorB);
        SpinnerNumberModel modelC = new SpinnerNumberModel(0, 0, 100, 1);
        txtQtCanalC.setModel(modelC);
        JSpinner.NumberEditor editorC = new JSpinner.NumberEditor(txtQtCanalC);
        txtQtCanalC.setEditor(editorC);
        SpinnerNumberModel modelD = new SpinnerNumberModel(0, 0, 100, 1);
        txtQtCanalD.setModel(modelD);
        JSpinner.NumberEditor editorD = new JSpinner.NumberEditor(txtQtCanalD);
        txtQtCanalD.setEditor(editorD);
        txtQtCanalA.setText("100");
        txtValidadeCanalA.setMinSelectableDate(new Date());
        txtValidadeCanalB.setMinSelectableDate(new Date());
        txtValidadeCanalC.setMinSelectableDate(new Date());
        txtValidadeCanalD.setMinSelectableDate(new Date());
        txtValidadeCanalE.setMinSelectableDate(new Date());
        txtValidadeCanalF.setMinSelectableDate(new Date());
    }

    private boolean calcular() {
        int campo1 = (Integer) txtQtCanalB.getValue();
        int campo2 = (Integer) txtQtCanalC.getValue();
        int campo3 = (Integer) txtQtCanalD.getValue();
        int campo4 = 100 - campo1 - campo2 - campo3;
        if (campo4 < 0) {
            return false;
        } else {
            txtQtCanalA.setText(String.valueOf(campo4));
            return true;
        }
    }

    public void criarFaseMovelCromatografo() {
        try {
            //Criar Registo
            FaseMovel fase = new FaseMovel();
            FaseMovelDAO faseDAO = new FaseMovelDAO();
            Cromatografo equip = new Cromatografo();
            Usuario user = new Usuario();
            Campanha camp = new Campanha();
            camp.setLog_campanha_id(campanha_id);
            fase.setCampanha(camp);
            fase.setFase_movel_a(txtCanalA.getText().toUpperCase());
            fase.setFase_movel_a_qt(Integer.parseInt(txtQtCanalA.getText()));
            fase.setFase_movel_a_lote(txtLoteCanalA.getText().toUpperCase());
            fase.setFase_movel_a_validade(DataHora.getTimestampDate(txtValidadeCanalA.getDate()));
            fase.setFase_movel_b(txtCanalB.getText().toUpperCase());
            fase.setFase_movel_b_qt((Integer) txtQtCanalB.getValue());
            fase.setFase_movel_b_lote(txtLoteCanalB.getText().toUpperCase());
            fase.setFase_movel_b_validade(DataHora.getTimestampDate(txtValidadeCanalB.getDate()));
            fase.setFase_movel_c(txtCanalC.getText().toUpperCase());
            fase.setFase_movel_c_qt((Integer) txtQtCanalC.getValue());
            fase.setFase_movel_c_lote(txtLoteCanalC.getText().toUpperCase());
            fase.setFase_movel_c_validade(DataHora.getTimestampDate(txtValidadeCanalC.getDate()));
            fase.setFase_movel_d(txtCanalD.getText().toUpperCase());
            fase.setFase_movel_d_qt((Integer) txtQtCanalD.getValue());
            fase.setFase_movel_d_lote(txtLoteCanalD.getText().toUpperCase());
            fase.setFase_movel_d_validade(DataHora.getTimestampDate(txtValidadeCanalD.getDate()));
            fase.setFase_movel_e(txtCanalE.getText().toUpperCase());
            fase.setFase_movel_e_lote(txtLoteCanalE.getText().toUpperCase());
            fase.setFase_movel_e_validade(DataHora.getTimestampDate(txtValidadeCanalE.getDate()));
            fase.setFase_movel_f(txtCanalF.getText().toUpperCase());
            fase.setFase_movel_f_lote(txtLoteCanalF.getText().toUpperCase());
            fase.setFase_movel_f_validade(DataHora.getTimestampDate(txtValidadeCanalF.getDate()));
            equip.setSystem_name(sys_name);
            fase.setData_registro(DataHora.getTimestampDate(new Date()));
            fase.setData_inicio(DataHora.getTimestampDate(new Date()));
            user.setUser(System.getProperty("user"));
            fase.setCromatografo(equip);
            fase.setUser(user);
            //Salva Reistro
            faseDAO.createFaseMovelDAO(fase);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

}
