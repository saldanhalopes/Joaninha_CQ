/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Frm.Recepcao;

import Classes.DAO.RegistroRfDAO;
import Classes.Modelo.RegistroRf;
import Classes.Util.DataHora;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmRegistroRfProcurarCaixa extends javax.swing.JDialog {

    final String zeros = "00000";
    private RegistroRf regrf;

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param modal
     * @param prd
     */
    public FrmRegistroRfProcurarCaixa(java.awt.Frame parent, boolean modal, RegistroRf reg_rf) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Procurar Caixa");
        setResizable(false);
        regrf = reg_rf;
        read();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFechar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCaixa = new javax.swing.JTable();
        btnSelecionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        tblCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Caixa", "Data Início / Responável", "Data Fim / Responável"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCaixa.getTableHeader().setReorderingAllowed(false);
        tblCaixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCaixaMouseClicked(evt);
            }
        });
        tblCaixa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCaixaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCaixa);
        if (tblCaixa.getColumnModel().getColumnCount() > 0) {
            tblCaixa.getColumnModel().getColumn(0).setMinWidth(0);
            tblCaixa.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCaixa.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCaixa.getColumnModel().getColumn(1).setMinWidth(150);
            tblCaixa.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblCaixa.getColumnModel().getColumn(1).setMaxWidth(150);
            tblCaixa.getColumnModel().getColumn(2).setMinWidth(250);
            tblCaixa.getColumnModel().getColumn(2).setPreferredWidth(250);
            tblCaixa.getColumnModel().getColumn(2).setMaxWidth(250);
            tblCaixa.getColumnModel().getColumn(3).setMinWidth(250);
            tblCaixa.getColumnModel().getColumn(3).setPreferredWidth(250);
            tblCaixa.getColumnModel().getColumn(3).setMaxWidth(250);
        }

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSelecionar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        selecionar();
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void tblCaixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCaixaMouseClicked
        if (evt.getClickCount() == 2) {
            selecionar();
        }
    }//GEN-LAST:event_tblCaixaMouseClicked

    private void tblCaixaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCaixaKeyPressed
        if (tblCaixa.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                selecionar();
            }
        }
    }//GEN-LAST:event_tblCaixaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroRfProcurarCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroRfProcurarCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroRfProcurarCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroRfProcurarCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmRegistroRfProcurarCaixa dialog = new FrmRegistroRfProcurarCaixa(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCaixa;
    // End of variables declaration//GEN-END:variables

    private void read() {
        DefaultTableModel model = (DefaultTableModel) tblCaixa.getModel();
        RegistroRfDAO regrfDao = new RegistroRfDAO();
        model.setNumRows(0);
        for (RegistroRf regrf : regrfDao.readCaixa()) {
            model.addRow(new Object[]{
                regrf.getCaixa_rf_id(),
                regrf.getCaixa(),
                DataHora.getStringDateTime(regrf.getData_inicio()) + " / "
                + regrf.getUser_inicio().getUser(),
                regrf.getData_fim() == null ? "" : DataHora.getStringDateTime(regrf.getData_fim()) + " / "
                + regrf.getUser_fim().getUser()
            });
        }
    }

    private void selecionar() {
        if (tblCaixa.getSelectedRow() != -1) {
            regrf.setCaixa_rf_id((Integer) tblCaixa.getValueAt(tblCaixa.getSelectedRow(), 0));
            dispose();
        }
    }

}
